
elec_pot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001e88  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000064  08001f94  08001f94  00011f94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001ff8  08001ff8  0002000c  2**0
                  CONTENTS
  4 .ARM          00000000  08001ff8  08001ff8  0002000c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001ff8  08001ff8  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001ff8  08001ff8  00011ff8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001ffc  08001ffc  00011ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08002000  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000130  2000000c  2000000c  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000013c  2000013c  0002000c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005843  00000000  00000000  00020035  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000163c  00000000  00000000  00025878  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000638  00000000  00000000  00026eb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000570  00000000  00000000  000274f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00015bfb  00000000  00000000  00027a60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00006e3d  00000000  00000000  0003d65b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000813f9  00000000  00000000  00044498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000c5891  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000016f4  00000000  00000000  000c58e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000000c 	.word	0x2000000c
 8000128:	00000000 	.word	0x00000000
 800012c:	08001f7c 	.word	0x08001f7c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000010 	.word	0x20000010
 8000148:	08001f7c 	.word	0x08001f7c

0800014c <heartbeat_gpio_callback>:
 */

/*
 * Al hearbeat
 */
void heartbeat_gpio_callback(uint8_t state){
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
 8000152:	4603      	mov	r3, r0
 8000154:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(LED_STATUS_GPIO_Port, LED_STATUS_Pin, state);
 8000156:	79fb      	ldrb	r3, [r7, #7]
 8000158:	461a      	mov	r2, r3
 800015a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800015e:	4803      	ldr	r0, [pc, #12]	; (800016c <heartbeat_gpio_callback+0x20>)
 8000160:	f001 fa2a 	bl	80015b8 <HAL_GPIO_WritePin>
}
 8000164:	bf00      	nop
 8000166:	3708      	adds	r7, #8
 8000168:	46bd      	mov	sp, r7
 800016a:	bd80      	pop	{r7, pc}
 800016c:	40011000 	.word	0x40011000

08000170 <sseg_gpio_high_callback>:

/*
 * Al Seven segments
 */
void sseg_gpio_high_callback(uint32_t port, uint16_t pin){
 8000170:	b580      	push	{r7, lr}
 8000172:	b082      	sub	sp, #8
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
 8000178:	460b      	mov	r3, r1
 800017a:	807b      	strh	r3, [r7, #2]
	HAL_GPIO_WritePin((GPIO_TypeDef *)port, pin, GPIO_PIN_SET);
 800017c:	687b      	ldr	r3, [r7, #4]
 800017e:	8879      	ldrh	r1, [r7, #2]
 8000180:	2201      	movs	r2, #1
 8000182:	4618      	mov	r0, r3
 8000184:	f001 fa18 	bl	80015b8 <HAL_GPIO_WritePin>
}
 8000188:	bf00      	nop
 800018a:	3708      	adds	r7, #8
 800018c:	46bd      	mov	sp, r7
 800018e:	bd80      	pop	{r7, pc}

08000190 <sseg_gpio_low_callback>:

void sseg_gpio_low_callback(uint32_t port, uint16_t pin){
 8000190:	b580      	push	{r7, lr}
 8000192:	b082      	sub	sp, #8
 8000194:	af00      	add	r7, sp, #0
 8000196:	6078      	str	r0, [r7, #4]
 8000198:	460b      	mov	r3, r1
 800019a:	807b      	strh	r3, [r7, #2]
	HAL_GPIO_WritePin((GPIO_TypeDef *)port, pin, GPIO_PIN_RESET);
 800019c:	687b      	ldr	r3, [r7, #4]
 800019e:	8879      	ldrh	r1, [r7, #2]
 80001a0:	2200      	movs	r2, #0
 80001a2:	4618      	mov	r0, r3
 80001a4:	f001 fa08 	bl	80015b8 <HAL_GPIO_WritePin>
}
 80001a8:	bf00      	nop
 80001aa:	3708      	adds	r7, #8
 80001ac:	46bd      	mov	sp, r7
 80001ae:	bd80      	pop	{r7, pc}

080001b0 <tasks_1ms>:


/*
 * Al planificador usrtick
 */
void tasks_1ms(){
 80001b0:	b580      	push	{r7, lr}
 80001b2:	af00      	add	r7, sp, #0
	sseg_work(&sseg);
 80001b4:	4802      	ldr	r0, [pc, #8]	; (80001c0 <tasks_1ms+0x10>)
 80001b6:	f000 fa5c 	bl	8000672 <sseg_work>
}
 80001ba:	bf00      	nop
 80001bc:	bd80      	pop	{r7, pc}
 80001be:	bf00      	nop
 80001c0:	200000b0 	.word	0x200000b0

080001c4 <tasks_10ms>:

void tasks_10ms(){}
 80001c4:	b480      	push	{r7}
 80001c6:	af00      	add	r7, sp, #0
 80001c8:	bf00      	nop
 80001ca:	46bd      	mov	sp, r7
 80001cc:	bc80      	pop	{r7}
 80001ce:	4770      	bx	lr

080001d0 <tasks_100ms>:

void tasks_100ms(){
 80001d0:	b580      	push	{r7, lr}
 80001d2:	af00      	add	r7, sp, #0
	heartbeat(&hb);
 80001d4:	4802      	ldr	r0, [pc, #8]	; (80001e0 <tasks_100ms+0x10>)
 80001d6:	f000 fcbd 	bl	8000b54 <heartbeat>
}
 80001da:	bf00      	nop
 80001dc:	bd80      	pop	{r7, pc}
 80001de:	bf00      	nop
 80001e0:	200000a4 	.word	0x200000a4

080001e4 <tasks_1s>:

void tasks_1s(){}
 80001e4:	b480      	push	{r7}
 80001e6:	af00      	add	r7, sp, #0
 80001e8:	bf00      	nop
 80001ea:	46bd      	mov	sp, r7
 80001ec:	bc80      	pop	{r7}
 80001ee:	4770      	bx	lr

080001f0 <tasks_10s>:

void tasks_10s(){}
 80001f0:	b480      	push	{r7}
 80001f2:	af00      	add	r7, sp, #0
 80001f4:	bf00      	nop
 80001f6:	46bd      	mov	sp, r7
 80001f8:	bc80      	pop	{r7}
 80001fa:	4770      	bx	lr

080001fc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80001fc:	b580      	push	{r7, lr}
 80001fe:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000200:	f000 fcfe 	bl	8000c00 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000204:	f000 f862 	bl	80002cc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000208:	f000 f8fa 	bl	8000400 <MX_GPIO_Init>
  MX_ADC1_Init();
 800020c:	f000 f8ba 	bl	8000384 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */

  // Inicializacion del planificador usertick
  usrtick_init(&usrtick, 1000);
 8000210:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000214:	481e      	ldr	r0, [pc, #120]	; (8000290 <main+0x94>)
 8000216:	f000 fb78 	bl	800090a <usrtick_init>
  usrtick_attach(&usrtick, tasks_1ms, 1);
 800021a:	2201      	movs	r2, #1
 800021c:	491d      	ldr	r1, [pc, #116]	; (8000294 <main+0x98>)
 800021e:	481c      	ldr	r0, [pc, #112]	; (8000290 <main+0x94>)
 8000220:	f000 fb8c 	bl	800093c <usrtick_attach>
  usrtick_attach(&usrtick, tasks_10ms, 10);
 8000224:	220a      	movs	r2, #10
 8000226:	491c      	ldr	r1, [pc, #112]	; (8000298 <main+0x9c>)
 8000228:	4819      	ldr	r0, [pc, #100]	; (8000290 <main+0x94>)
 800022a:	f000 fb87 	bl	800093c <usrtick_attach>
  usrtick_attach(&usrtick, tasks_100ms, 100);
 800022e:	2264      	movs	r2, #100	; 0x64
 8000230:	491a      	ldr	r1, [pc, #104]	; (800029c <main+0xa0>)
 8000232:	4817      	ldr	r0, [pc, #92]	; (8000290 <main+0x94>)
 8000234:	f000 fb82 	bl	800093c <usrtick_attach>
  usrtick_attach(&usrtick, tasks_1s, 1000);
 8000238:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800023c:	4918      	ldr	r1, [pc, #96]	; (80002a0 <main+0xa4>)
 800023e:	4814      	ldr	r0, [pc, #80]	; (8000290 <main+0x94>)
 8000240:	f000 fb7c 	bl	800093c <usrtick_attach>
  usrtick_attach(&usrtick, tasks_10s, 10000);
 8000244:	f242 7210 	movw	r2, #10000	; 0x2710
 8000248:	4916      	ldr	r1, [pc, #88]	; (80002a4 <main+0xa8>)
 800024a:	4811      	ldr	r0, [pc, #68]	; (8000290 <main+0x94>)
 800024c:	f000 fb76 	bl	800093c <usrtick_attach>

  // Inicializacion de heartbeat
  heartbeat_init(&hb);
 8000250:	4815      	ldr	r0, [pc, #84]	; (80002a8 <main+0xac>)
 8000252:	f000 fc6b 	bl	8000b2c <heartbeat_init>
  heartbeat_attach(&hb, heartbeat_gpio_callback);
 8000256:	4915      	ldr	r1, [pc, #84]	; (80002ac <main+0xb0>)
 8000258:	4813      	ldr	r0, [pc, #76]	; (80002a8 <main+0xac>)
 800025a:	f000 fc9e 	bl	8000b9a <heartbeat_attach>

  // Inicializacion de sseg
  sseg_init(&sseg);
 800025e:	4814      	ldr	r0, [pc, #80]	; (80002b0 <main+0xb4>)
 8000260:	f000 f97d 	bl	800055e <sseg_init>
  sseg_attach_gpio_high(&sseg, sseg_gpio_high_callback);
 8000264:	4913      	ldr	r1, [pc, #76]	; (80002b4 <main+0xb8>)
 8000266:	4812      	ldr	r0, [pc, #72]	; (80002b0 <main+0xb4>)
 8000268:	f000 f9e7 	bl	800063a <sseg_attach_gpio_high>
  sseg_attach_gpio_low(&sseg, sseg_gpio_low_callback);
 800026c:	4912      	ldr	r1, [pc, #72]	; (80002b8 <main+0xbc>)
 800026e:	4810      	ldr	r0, [pc, #64]	; (80002b0 <main+0xb4>)
 8000270:	f000 f9f1 	bl	8000656 <sseg_attach_gpio_low>
  sseg_set_segments(&sseg, segments_ports, segments_pins);
 8000274:	4a11      	ldr	r2, [pc, #68]	; (80002bc <main+0xc0>)
 8000276:	4912      	ldr	r1, [pc, #72]	; (80002c0 <main+0xc4>)
 8000278:	480d      	ldr	r0, [pc, #52]	; (80002b0 <main+0xb4>)
 800027a:	f000 f98b 	bl	8000594 <sseg_set_segments>
  sseg_set_digits(&sseg, digits_ports, digits_pins);
 800027e:	4a11      	ldr	r2, [pc, #68]	; (80002c4 <main+0xc8>)
 8000280:	4911      	ldr	r1, [pc, #68]	; (80002c8 <main+0xcc>)
 8000282:	480b      	ldr	r0, [pc, #44]	; (80002b0 <main+0xb4>)
 8000284:	f000 f9af 	bl	80005e6 <sseg_set_digits>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	usrtick_work(&usrtick);
 8000288:	4801      	ldr	r0, [pc, #4]	; (8000290 <main+0x94>)
 800028a:	f000 fb8e 	bl	80009aa <usrtick_work>
 800028e:	e7fb      	b.n	8000288 <main+0x8c>
 8000290:	20000058 	.word	0x20000058
 8000294:	080001b1 	.word	0x080001b1
 8000298:	080001c5 	.word	0x080001c5
 800029c:	080001d1 	.word	0x080001d1
 80002a0:	080001e5 	.word	0x080001e5
 80002a4:	080001f1 	.word	0x080001f1
 80002a8:	200000a4 	.word	0x200000a4
 80002ac:	0800014d 	.word	0x0800014d
 80002b0:	200000b0 	.word	0x200000b0
 80002b4:	08000171 	.word	0x08000171
 80002b8:	08000191 	.word	0x08000191
 80002bc:	08001fc4 	.word	0x08001fc4
 80002c0:	08001fa4 	.word	0x08001fa4
 80002c4:	08001fe0 	.word	0x08001fe0
 80002c8:	08001fd4 	.word	0x08001fd4

080002cc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80002cc:	b580      	push	{r7, lr}
 80002ce:	b094      	sub	sp, #80	; 0x50
 80002d0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80002d2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80002d6:	2228      	movs	r2, #40	; 0x28
 80002d8:	2100      	movs	r1, #0
 80002da:	4618      	mov	r0, r3
 80002dc:	f001 fe46 	bl	8001f6c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80002e0:	f107 0314 	add.w	r3, r7, #20
 80002e4:	2200      	movs	r2, #0
 80002e6:	601a      	str	r2, [r3, #0]
 80002e8:	605a      	str	r2, [r3, #4]
 80002ea:	609a      	str	r2, [r3, #8]
 80002ec:	60da      	str	r2, [r3, #12]
 80002ee:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80002f0:	1d3b      	adds	r3, r7, #4
 80002f2:	2200      	movs	r2, #0
 80002f4:	601a      	str	r2, [r3, #0]
 80002f6:	605a      	str	r2, [r3, #4]
 80002f8:	609a      	str	r2, [r3, #8]
 80002fa:	60da      	str	r2, [r3, #12]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80002fc:	2301      	movs	r3, #1
 80002fe:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000300:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000304:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8000306:	2300      	movs	r3, #0
 8000308:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800030a:	2301      	movs	r3, #1
 800030c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800030e:	2302      	movs	r3, #2
 8000310:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000312:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000316:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8000318:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 800031c:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800031e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000322:	4618      	mov	r0, r3
 8000324:	f001 f960 	bl	80015e8 <HAL_RCC_OscConfig>
 8000328:	4603      	mov	r3, r0
 800032a:	2b00      	cmp	r3, #0
 800032c:	d001      	beq.n	8000332 <SystemClock_Config+0x66>
  {
    Error_Handler();
 800032e:	f000 f911 	bl	8000554 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000332:	230f      	movs	r3, #15
 8000334:	617b      	str	r3, [r7, #20]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000336:	2302      	movs	r3, #2
 8000338:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800033a:	2300      	movs	r3, #0
 800033c:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800033e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000342:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000344:	2300      	movs	r3, #0
 8000346:	627b      	str	r3, [r7, #36]	; 0x24

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000348:	f107 0314 	add.w	r3, r7, #20
 800034c:	2102      	movs	r1, #2
 800034e:	4618      	mov	r0, r3
 8000350:	f001 fbcc 	bl	8001aec <HAL_RCC_ClockConfig>
 8000354:	4603      	mov	r3, r0
 8000356:	2b00      	cmp	r3, #0
 8000358:	d001      	beq.n	800035e <SystemClock_Config+0x92>
  {
    Error_Handler();
 800035a:	f000 f8fb 	bl	8000554 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 800035e:	2302      	movs	r3, #2
 8000360:	607b      	str	r3, [r7, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 8000362:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8000366:	60fb      	str	r3, [r7, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000368:	1d3b      	adds	r3, r7, #4
 800036a:	4618      	mov	r0, r3
 800036c:	f001 fd24 	bl	8001db8 <HAL_RCCEx_PeriphCLKConfig>
 8000370:	4603      	mov	r3, r0
 8000372:	2b00      	cmp	r3, #0
 8000374:	d001      	beq.n	800037a <SystemClock_Config+0xae>
  {
    Error_Handler();
 8000376:	f000 f8ed 	bl	8000554 <Error_Handler>
  }
}
 800037a:	bf00      	nop
 800037c:	3750      	adds	r7, #80	; 0x50
 800037e:	46bd      	mov	sp, r7
 8000380:	bd80      	pop	{r7, pc}
	...

08000384 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	b084      	sub	sp, #16
 8000388:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800038a:	1d3b      	adds	r3, r7, #4
 800038c:	2200      	movs	r2, #0
 800038e:	601a      	str	r2, [r3, #0]
 8000390:	605a      	str	r2, [r3, #4]
 8000392:	609a      	str	r2, [r3, #8]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8000394:	4b18      	ldr	r3, [pc, #96]	; (80003f8 <MX_ADC1_Init+0x74>)
 8000396:	4a19      	ldr	r2, [pc, #100]	; (80003fc <MX_ADC1_Init+0x78>)
 8000398:	601a      	str	r2, [r3, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 800039a:	4b17      	ldr	r3, [pc, #92]	; (80003f8 <MX_ADC1_Init+0x74>)
 800039c:	2200      	movs	r2, #0
 800039e:	609a      	str	r2, [r3, #8]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80003a0:	4b15      	ldr	r3, [pc, #84]	; (80003f8 <MX_ADC1_Init+0x74>)
 80003a2:	2200      	movs	r2, #0
 80003a4:	731a      	strb	r2, [r3, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80003a6:	4b14      	ldr	r3, [pc, #80]	; (80003f8 <MX_ADC1_Init+0x74>)
 80003a8:	2200      	movs	r2, #0
 80003aa:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80003ac:	4b12      	ldr	r3, [pc, #72]	; (80003f8 <MX_ADC1_Init+0x74>)
 80003ae:	f44f 2260 	mov.w	r2, #917504	; 0xe0000
 80003b2:	61da      	str	r2, [r3, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80003b4:	4b10      	ldr	r3, [pc, #64]	; (80003f8 <MX_ADC1_Init+0x74>)
 80003b6:	2200      	movs	r2, #0
 80003b8:	605a      	str	r2, [r3, #4]
  hadc1.Init.NbrOfConversion = 1;
 80003ba:	4b0f      	ldr	r3, [pc, #60]	; (80003f8 <MX_ADC1_Init+0x74>)
 80003bc:	2201      	movs	r2, #1
 80003be:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80003c0:	480d      	ldr	r0, [pc, #52]	; (80003f8 <MX_ADC1_Init+0x74>)
 80003c2:	f000 fc7f 	bl	8000cc4 <HAL_ADC_Init>
 80003c6:	4603      	mov	r3, r0
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d001      	beq.n	80003d0 <MX_ADC1_Init+0x4c>
  {
    Error_Handler();
 80003cc:	f000 f8c2 	bl	8000554 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 80003d0:	2300      	movs	r3, #0
 80003d2:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80003d4:	2301      	movs	r3, #1
 80003d6:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES_5;
 80003d8:	2303      	movs	r3, #3
 80003da:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80003dc:	1d3b      	adds	r3, r7, #4
 80003de:	4619      	mov	r1, r3
 80003e0:	4805      	ldr	r0, [pc, #20]	; (80003f8 <MX_ADC1_Init+0x74>)
 80003e2:	f000 fd47 	bl	8000e74 <HAL_ADC_ConfigChannel>
 80003e6:	4603      	mov	r3, r0
 80003e8:	2b00      	cmp	r3, #0
 80003ea:	d001      	beq.n	80003f0 <MX_ADC1_Init+0x6c>
  {
    Error_Handler();
 80003ec:	f000 f8b2 	bl	8000554 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80003f0:	bf00      	nop
 80003f2:	3710      	adds	r7, #16
 80003f4:	46bd      	mov	sp, r7
 80003f6:	bd80      	pop	{r7, pc}
 80003f8:	20000028 	.word	0x20000028
 80003fc:	40012400 	.word	0x40012400

08000400 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000400:	b580      	push	{r7, lr}
 8000402:	b088      	sub	sp, #32
 8000404:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000406:	f107 0310 	add.w	r3, r7, #16
 800040a:	2200      	movs	r2, #0
 800040c:	601a      	str	r2, [r3, #0]
 800040e:	605a      	str	r2, [r3, #4]
 8000410:	609a      	str	r2, [r3, #8]
 8000412:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000414:	4b4b      	ldr	r3, [pc, #300]	; (8000544 <MX_GPIO_Init+0x144>)
 8000416:	699b      	ldr	r3, [r3, #24]
 8000418:	4a4a      	ldr	r2, [pc, #296]	; (8000544 <MX_GPIO_Init+0x144>)
 800041a:	f043 0310 	orr.w	r3, r3, #16
 800041e:	6193      	str	r3, [r2, #24]
 8000420:	4b48      	ldr	r3, [pc, #288]	; (8000544 <MX_GPIO_Init+0x144>)
 8000422:	699b      	ldr	r3, [r3, #24]
 8000424:	f003 0310 	and.w	r3, r3, #16
 8000428:	60fb      	str	r3, [r7, #12]
 800042a:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800042c:	4b45      	ldr	r3, [pc, #276]	; (8000544 <MX_GPIO_Init+0x144>)
 800042e:	699b      	ldr	r3, [r3, #24]
 8000430:	4a44      	ldr	r2, [pc, #272]	; (8000544 <MX_GPIO_Init+0x144>)
 8000432:	f043 0320 	orr.w	r3, r3, #32
 8000436:	6193      	str	r3, [r2, #24]
 8000438:	4b42      	ldr	r3, [pc, #264]	; (8000544 <MX_GPIO_Init+0x144>)
 800043a:	699b      	ldr	r3, [r3, #24]
 800043c:	f003 0320 	and.w	r3, r3, #32
 8000440:	60bb      	str	r3, [r7, #8]
 8000442:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000444:	4b3f      	ldr	r3, [pc, #252]	; (8000544 <MX_GPIO_Init+0x144>)
 8000446:	699b      	ldr	r3, [r3, #24]
 8000448:	4a3e      	ldr	r2, [pc, #248]	; (8000544 <MX_GPIO_Init+0x144>)
 800044a:	f043 0304 	orr.w	r3, r3, #4
 800044e:	6193      	str	r3, [r2, #24]
 8000450:	4b3c      	ldr	r3, [pc, #240]	; (8000544 <MX_GPIO_Init+0x144>)
 8000452:	699b      	ldr	r3, [r3, #24]
 8000454:	f003 0304 	and.w	r3, r3, #4
 8000458:	607b      	str	r3, [r7, #4]
 800045a:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800045c:	4b39      	ldr	r3, [pc, #228]	; (8000544 <MX_GPIO_Init+0x144>)
 800045e:	699b      	ldr	r3, [r3, #24]
 8000460:	4a38      	ldr	r2, [pc, #224]	; (8000544 <MX_GPIO_Init+0x144>)
 8000462:	f043 0308 	orr.w	r3, r3, #8
 8000466:	6193      	str	r3, [r2, #24]
 8000468:	4b36      	ldr	r3, [pc, #216]	; (8000544 <MX_GPIO_Init+0x144>)
 800046a:	699b      	ldr	r3, [r3, #24]
 800046c:	f003 0308 	and.w	r3, r3, #8
 8000470:	603b      	str	r3, [r7, #0]
 8000472:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_STATUS_GPIO_Port, LED_STATUS_Pin, GPIO_PIN_RESET);
 8000474:	2200      	movs	r2, #0
 8000476:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800047a:	4833      	ldr	r0, [pc, #204]	; (8000548 <MX_GPIO_Init+0x148>)
 800047c:	f001 f89c 	bl	80015b8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, SEG_A_Pin|SEG_B_Pin|SEG_F_Pin|SEG_DP_Pin
 8000480:	2200      	movs	r2, #0
 8000482:	21fe      	movs	r1, #254	; 0xfe
 8000484:	4831      	ldr	r0, [pc, #196]	; (800054c <MX_GPIO_Init+0x14c>)
 8000486:	f001 f897 	bl	80015b8 <HAL_GPIO_WritePin>
                          |SEG_C_Pin|D0_CK_Pin|SEG_D_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D1_CK_Pin|SEG_E_Pin|SEG_G_Pin|D2_CK_Pin, GPIO_PIN_RESET);
 800048a:	2200      	movs	r2, #0
 800048c:	f640 4103 	movw	r1, #3075	; 0xc03
 8000490:	482f      	ldr	r0, [pc, #188]	; (8000550 <MX_GPIO_Init+0x150>)
 8000492:	f001 f891 	bl	80015b8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_STATUS_Pin */
  GPIO_InitStruct.Pin = LED_STATUS_Pin;
 8000496:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800049a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800049c:	2301      	movs	r3, #1
 800049e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80004a0:	2300      	movs	r3, #0
 80004a2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80004a4:	2302      	movs	r3, #2
 80004a6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_STATUS_GPIO_Port, &GPIO_InitStruct);
 80004a8:	f107 0310 	add.w	r3, r7, #16
 80004ac:	4619      	mov	r1, r3
 80004ae:	4826      	ldr	r0, [pc, #152]	; (8000548 <MX_GPIO_Init+0x148>)
 80004b0:	f000 fefe 	bl	80012b0 <HAL_GPIO_Init>

  /*Configure GPIO pins : SEG_A_Pin SEG_B_Pin SEG_F_Pin SEG_DP_Pin
                           SEG_C_Pin D0_CK_Pin SEG_D_Pin */
  GPIO_InitStruct.Pin = SEG_A_Pin|SEG_B_Pin|SEG_F_Pin|SEG_DP_Pin
 80004b4:	23fe      	movs	r3, #254	; 0xfe
 80004b6:	613b      	str	r3, [r7, #16]
                          |SEG_C_Pin|D0_CK_Pin|SEG_D_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80004b8:	2301      	movs	r3, #1
 80004ba:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80004bc:	2300      	movs	r3, #0
 80004be:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80004c0:	2302      	movs	r3, #2
 80004c2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80004c4:	f107 0310 	add.w	r3, r7, #16
 80004c8:	4619      	mov	r1, r3
 80004ca:	4820      	ldr	r0, [pc, #128]	; (800054c <MX_GPIO_Init+0x14c>)
 80004cc:	f000 fef0 	bl	80012b0 <HAL_GPIO_Init>

  /*Configure GPIO pins : D1_CK_Pin SEG_E_Pin SEG_G_Pin D2_CK_Pin */
  GPIO_InitStruct.Pin = D1_CK_Pin|SEG_E_Pin|SEG_G_Pin|D2_CK_Pin;
 80004d0:	f640 4303 	movw	r3, #3075	; 0xc03
 80004d4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80004d6:	2301      	movs	r3, #1
 80004d8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80004da:	2300      	movs	r3, #0
 80004dc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80004de:	2302      	movs	r3, #2
 80004e0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80004e2:	f107 0310 	add.w	r3, r7, #16
 80004e6:	4619      	mov	r1, r3
 80004e8:	4819      	ldr	r0, [pc, #100]	; (8000550 <MX_GPIO_Init+0x150>)
 80004ea:	f000 fee1 	bl	80012b0 <HAL_GPIO_Init>

  /*Configure GPIO pins : BTN_DOWN_Pin BTN_UP_Pin BTN_TV_Pin */
  GPIO_InitStruct.Pin = BTN_DOWN_Pin|BTN_UP_Pin|BTN_TV_Pin;
 80004ee:	f44f 43e0 	mov.w	r3, #28672	; 0x7000
 80004f2:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80004f4:	2300      	movs	r3, #0
 80004f6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80004f8:	2300      	movs	r3, #0
 80004fa:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80004fc:	f107 0310 	add.w	r3, r7, #16
 8000500:	4619      	mov	r1, r3
 8000502:	4813      	ldr	r0, [pc, #76]	; (8000550 <MX_GPIO_Init+0x150>)
 8000504:	f000 fed4 	bl	80012b0 <HAL_GPIO_Init>

  /*Configure GPIO pin : BTN_OFF_Pin */
  GPIO_InitStruct.Pin = BTN_OFF_Pin;
 8000508:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800050c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800050e:	2300      	movs	r3, #0
 8000510:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000512:	2302      	movs	r3, #2
 8000514:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(BTN_OFF_GPIO_Port, &GPIO_InitStruct);
 8000516:	f107 0310 	add.w	r3, r7, #16
 800051a:	4619      	mov	r1, r3
 800051c:	480c      	ldr	r0, [pc, #48]	; (8000550 <MX_GPIO_Init+0x150>)
 800051e:	f000 fec7 	bl	80012b0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PIN_ZERO_Pin PIN_TRIGGER_Pin */
  GPIO_InitStruct.Pin = PIN_ZERO_Pin|PIN_TRIGGER_Pin;
 8000522:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000526:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000528:	2300      	movs	r3, #0
 800052a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800052c:	2300      	movs	r3, #0
 800052e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000530:	f107 0310 	add.w	r3, r7, #16
 8000534:	4619      	mov	r1, r3
 8000536:	4805      	ldr	r0, [pc, #20]	; (800054c <MX_GPIO_Init+0x14c>)
 8000538:	f000 feba 	bl	80012b0 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800053c:	bf00      	nop
 800053e:	3720      	adds	r7, #32
 8000540:	46bd      	mov	sp, r7
 8000542:	bd80      	pop	{r7, pc}
 8000544:	40021000 	.word	0x40021000
 8000548:	40011000 	.word	0x40011000
 800054c:	40010800 	.word	0x40010800
 8000550:	40010c00 	.word	0x40010c00

08000554 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000554:	b480      	push	{r7}
 8000556:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000558:	b672      	cpsid	i
}
 800055a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800055c:	e7fe      	b.n	800055c <Error_Handler+0x8>

0800055e <sseg_init>:

/*    LOCAL PROTOTYPES */
static void _sseg_write_number_to_array(uint8_t *data, int32_t n, int8_t dp);


void sseg_init(_sseg *s){
 800055e:	b480      	push	{r7}
 8000560:	b083      	sub	sp, #12
 8000562:	af00      	add	r7, sp, #0
 8000564:	6078      	str	r0, [r7, #4]
	s->hold_info = 0;
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	2200      	movs	r2, #0
 800056a:	f883 2073 	strb.w	r2, [r3, #115]	; 0x73
	s->curr_digit = 0;
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	2200      	movs	r2, #0
 8000572:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
	s->curr_label = 0;
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	2200      	movs	r2, #0
 800057a:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
	s->label_time_remains = 0;
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	2200      	movs	r2, #0
 8000582:	679a      	str	r2, [r3, #120]	; 0x78
	s->info_time_remains = 0;
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	2200      	movs	r2, #0
 8000588:	67da      	str	r2, [r3, #124]	; 0x7c
}
 800058a:	bf00      	nop
 800058c:	370c      	adds	r7, #12
 800058e:	46bd      	mov	sp, r7
 8000590:	bc80      	pop	{r7}
 8000592:	4770      	bx	lr

08000594 <sseg_set_segments>:

void sseg_set_segments(_sseg *s, const uint32_t *port, const uint16_t *pin){
 8000594:	b480      	push	{r7}
 8000596:	b087      	sub	sp, #28
 8000598:	af00      	add	r7, sp, #0
 800059a:	60f8      	str	r0, [r7, #12]
 800059c:	60b9      	str	r1, [r7, #8]
 800059e:	607a      	str	r2, [r7, #4]
	for(uint8_t j = 0; j<8; ++j){
 80005a0:	2300      	movs	r3, #0
 80005a2:	75fb      	strb	r3, [r7, #23]
 80005a4:	e016      	b.n	80005d4 <sseg_set_segments+0x40>
		s->segments[j][0] = port[j];
 80005a6:	7dfb      	ldrb	r3, [r7, #23]
 80005a8:	009b      	lsls	r3, r3, #2
 80005aa:	68ba      	ldr	r2, [r7, #8]
 80005ac:	4413      	add	r3, r2
 80005ae:	7dfa      	ldrb	r2, [r7, #23]
 80005b0:	6819      	ldr	r1, [r3, #0]
 80005b2:	68fb      	ldr	r3, [r7, #12]
 80005b4:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
		s->segments[j][1] = pin[j];
 80005b8:	7dfb      	ldrb	r3, [r7, #23]
 80005ba:	005b      	lsls	r3, r3, #1
 80005bc:	687a      	ldr	r2, [r7, #4]
 80005be:	4413      	add	r3, r2
 80005c0:	881a      	ldrh	r2, [r3, #0]
 80005c2:	7dfb      	ldrb	r3, [r7, #23]
 80005c4:	4611      	mov	r1, r2
 80005c6:	68fa      	ldr	r2, [r7, #12]
 80005c8:	00db      	lsls	r3, r3, #3
 80005ca:	4413      	add	r3, r2
 80005cc:	6059      	str	r1, [r3, #4]
	for(uint8_t j = 0; j<8; ++j){
 80005ce:	7dfb      	ldrb	r3, [r7, #23]
 80005d0:	3301      	adds	r3, #1
 80005d2:	75fb      	strb	r3, [r7, #23]
 80005d4:	7dfb      	ldrb	r3, [r7, #23]
 80005d6:	2b07      	cmp	r3, #7
 80005d8:	d9e5      	bls.n	80005a6 <sseg_set_segments+0x12>
	}
}
 80005da:	bf00      	nop
 80005dc:	bf00      	nop
 80005de:	371c      	adds	r7, #28
 80005e0:	46bd      	mov	sp, r7
 80005e2:	bc80      	pop	{r7}
 80005e4:	4770      	bx	lr

080005e6 <sseg_set_digits>:

void sseg_set_digits(_sseg *s, const uint32_t *port, const uint16_t *pin){
 80005e6:	b480      	push	{r7}
 80005e8:	b087      	sub	sp, #28
 80005ea:	af00      	add	r7, sp, #0
 80005ec:	60f8      	str	r0, [r7, #12]
 80005ee:	60b9      	str	r1, [r7, #8]
 80005f0:	607a      	str	r2, [r7, #4]
	for(uint8_t j = 0; j<NUMBER_OF_DIGITS; ++j){
 80005f2:	2300      	movs	r3, #0
 80005f4:	75fb      	strb	r3, [r7, #23]
 80005f6:	e017      	b.n	8000628 <sseg_set_digits+0x42>
		s->digits[j][0] = port[j];
 80005f8:	7dfb      	ldrb	r3, [r7, #23]
 80005fa:	009b      	lsls	r3, r3, #2
 80005fc:	68ba      	ldr	r2, [r7, #8]
 80005fe:	4413      	add	r3, r2
 8000600:	7dfa      	ldrb	r2, [r7, #23]
 8000602:	6819      	ldr	r1, [r3, #0]
 8000604:	68fb      	ldr	r3, [r7, #12]
 8000606:	3208      	adds	r2, #8
 8000608:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
		s->digits[j][1] = pin[j];
 800060c:	7dfb      	ldrb	r3, [r7, #23]
 800060e:	005b      	lsls	r3, r3, #1
 8000610:	687a      	ldr	r2, [r7, #4]
 8000612:	4413      	add	r3, r2
 8000614:	881a      	ldrh	r2, [r3, #0]
 8000616:	7dfb      	ldrb	r3, [r7, #23]
 8000618:	4611      	mov	r1, r2
 800061a:	68fa      	ldr	r2, [r7, #12]
 800061c:	00db      	lsls	r3, r3, #3
 800061e:	4413      	add	r3, r2
 8000620:	6459      	str	r1, [r3, #68]	; 0x44
	for(uint8_t j = 0; j<NUMBER_OF_DIGITS; ++j){
 8000622:	7dfb      	ldrb	r3, [r7, #23]
 8000624:	3301      	adds	r3, #1
 8000626:	75fb      	strb	r3, [r7, #23]
 8000628:	7dfb      	ldrb	r3, [r7, #23]
 800062a:	2b02      	cmp	r3, #2
 800062c:	d9e4      	bls.n	80005f8 <sseg_set_digits+0x12>
	}
}
 800062e:	bf00      	nop
 8000630:	bf00      	nop
 8000632:	371c      	adds	r7, #28
 8000634:	46bd      	mov	sp, r7
 8000636:	bc80      	pop	{r7}
 8000638:	4770      	bx	lr

0800063a <sseg_attach_gpio_high>:
		}
	}
}

// Change funtions to change behabior, dirty but if works it works
void sseg_attach_gpio_high(_sseg *s, sseg_set_gpio_def f){
 800063a:	b480      	push	{r7}
 800063c:	b083      	sub	sp, #12
 800063e:	af00      	add	r7, sp, #0
 8000640:	6078      	str	r0, [r7, #4]
 8000642:	6039      	str	r1, [r7, #0]
#ifdef DISPLAY_COMMON_ANODE
	s->sseg_sgpio_high = f;
#endif
#ifdef DISPLAY_COMMON_CATODE
	s->sseg_sgpio_low = f;
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	683a      	ldr	r2, [r7, #0]
 8000648:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#endif
}
 800064c:	bf00      	nop
 800064e:	370c      	adds	r7, #12
 8000650:	46bd      	mov	sp, r7
 8000652:	bc80      	pop	{r7}
 8000654:	4770      	bx	lr

08000656 <sseg_attach_gpio_low>:

void sseg_attach_gpio_low(_sseg *s, sseg_set_gpio_def f){
 8000656:	b480      	push	{r7}
 8000658:	b083      	sub	sp, #12
 800065a:	af00      	add	r7, sp, #0
 800065c:	6078      	str	r0, [r7, #4]
 800065e:	6039      	str	r1, [r7, #0]
#ifdef DISPLAY_COMMON_ANODE
	s->sseg_sgpio_low = f;
#endif
#ifdef DISPLAY_COMMON_CATODE
	s->sseg_sgpio_high = f;
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	683a      	ldr	r2, [r7, #0]
 8000664:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
#endif
}
 8000668:	bf00      	nop
 800066a:	370c      	adds	r7, #12
 800066c:	46bd      	mov	sp, r7
 800066e:	bc80      	pop	{r7}
 8000670:	4770      	bx	lr

08000672 <sseg_work>:
	s->hold_info = h;
}



void sseg_work(_sseg *s){
 8000672:	b580      	push	{r7, lr}
 8000674:	b084      	sub	sp, #16
 8000676:	af00      	add	r7, sp, #0
 8000678:	6078      	str	r0, [r7, #4]
	uint8_t *to_display;

	if(s->curr_digit > NUMBER_OF_DIGITS)
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8000680:	2b03      	cmp	r3, #3
 8000682:	d903      	bls.n	800068c <sseg_work+0x1a>
		s->curr_digit = 0;
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	2200      	movs	r2, #0
 8000688:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

	if(s->label_time_remains > 0){
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000690:	2b00      	cmp	r3, #0
 8000692:	d010      	beq.n	80006b6 <sseg_work+0x44>
		s->label_time_remains--;
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000698:	1e5a      	subs	r2, r3, #1
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	679a      	str	r2, [r3, #120]	; 0x78
		to_display = s->info_labels[s->curr_label];
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	f893 3075 	ldrb.w	r3, [r3, #117]	; 0x75
 80006a4:	461a      	mov	r2, r3
 80006a6:	4613      	mov	r3, r2
 80006a8:	005b      	lsls	r3, r3, #1
 80006aa:	4413      	add	r3, r2
 80006ac:	3358      	adds	r3, #88	; 0x58
 80006ae:	687a      	ldr	r2, [r7, #4]
 80006b0:	4413      	add	r3, r2
 80006b2:	60fb      	str	r3, [r7, #12]
 80006b4:	e014      	b.n	80006e0 <sseg_work+0x6e>
	}else if(s->info_time_remains > 0){
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80006ba:	2b00      	cmp	r3, #0
 80006bc:	d00d      	beq.n	80006da <sseg_work+0x68>
		if(s->hold_info == 0) s->info_time_remains--;
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	f893 3073 	ldrb.w	r3, [r3, #115]	; 0x73
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d104      	bne.n	80006d2 <sseg_work+0x60>
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80006cc:	1e5a      	subs	r2, r3, #1
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	67da      	str	r2, [r3, #124]	; 0x7c
		to_display = s->curr_info;
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	3370      	adds	r3, #112	; 0x70
 80006d6:	60fb      	str	r3, [r7, #12]
 80006d8:	e002      	b.n	80006e0 <sseg_work+0x6e>
	}else{
		to_display = s->curr_data;
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	336d      	adds	r3, #109	; 0x6d
 80006de:	60fb      	str	r3, [r7, #12]
	}

	// Apago el display
	for(uint8_t j = 0; j<NUMBER_OF_DIGITS; ++j)
 80006e0:	2300      	movs	r3, #0
 80006e2:	72fb      	strb	r3, [r7, #11]
 80006e4:	e012      	b.n	800070c <sseg_work+0x9a>
		s->sseg_sgpio_high(s->digits[j][0], (uint16_t)s->digits[j][1]);
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 80006ec:	7af9      	ldrb	r1, [r7, #11]
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	3108      	adds	r1, #8
 80006f2:	f853 0031 	ldr.w	r0, [r3, r1, lsl #3]
 80006f6:	7afb      	ldrb	r3, [r7, #11]
 80006f8:	6879      	ldr	r1, [r7, #4]
 80006fa:	00db      	lsls	r3, r3, #3
 80006fc:	440b      	add	r3, r1
 80006fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000700:	b29b      	uxth	r3, r3
 8000702:	4619      	mov	r1, r3
 8000704:	4790      	blx	r2
	for(uint8_t j = 0; j<NUMBER_OF_DIGITS; ++j)
 8000706:	7afb      	ldrb	r3, [r7, #11]
 8000708:	3301      	adds	r3, #1
 800070a:	72fb      	strb	r3, [r7, #11]
 800070c:	7afb      	ldrb	r3, [r7, #11]
 800070e:	2b02      	cmp	r3, #2
 8000710:	d9e9      	bls.n	80006e6 <sseg_work+0x74>

	//Escribo el digito correspondiente
	for (uint8_t x = 0; x < 8; ++x){
 8000712:	2300      	movs	r3, #0
 8000714:	72bb      	strb	r3, [r7, #10]
 8000716:	e038      	b.n	800078a <sseg_work+0x118>
		if((to_display[s->curr_digit])&(1<<x))
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 800071e:	461a      	mov	r2, r3
 8000720:	68fb      	ldr	r3, [r7, #12]
 8000722:	4413      	add	r3, r2
 8000724:	781b      	ldrb	r3, [r3, #0]
 8000726:	461a      	mov	r2, r3
 8000728:	7abb      	ldrb	r3, [r7, #10]
 800072a:	fa42 f303 	asr.w	r3, r2, r3
 800072e:	f003 0301 	and.w	r3, r3, #1
 8000732:	2b00      	cmp	r3, #0
 8000734:	d013      	beq.n	800075e <sseg_work+0xec>
			s->sseg_sgpio_high(s->segments[6-x][0], (uint16_t)s->segments[6-x][1]);
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 800073c:	7abb      	ldrb	r3, [r7, #10]
 800073e:	f1c3 0106 	rsb	r1, r3, #6
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	f853 0031 	ldr.w	r0, [r3, r1, lsl #3]
 8000748:	7abb      	ldrb	r3, [r7, #10]
 800074a:	f1c3 0306 	rsb	r3, r3, #6
 800074e:	6879      	ldr	r1, [r7, #4]
 8000750:	00db      	lsls	r3, r3, #3
 8000752:	440b      	add	r3, r1
 8000754:	685b      	ldr	r3, [r3, #4]
 8000756:	b29b      	uxth	r3, r3
 8000758:	4619      	mov	r1, r3
 800075a:	4790      	blx	r2
 800075c:	e012      	b.n	8000784 <sseg_work+0x112>
		else
			s->sseg_sgpio_low(s->segments[6-x][0], (uint16_t)s->segments[6-x][1]);
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
 8000764:	7abb      	ldrb	r3, [r7, #10]
 8000766:	f1c3 0106 	rsb	r1, r3, #6
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	f853 0031 	ldr.w	r0, [r3, r1, lsl #3]
 8000770:	7abb      	ldrb	r3, [r7, #10]
 8000772:	f1c3 0306 	rsb	r3, r3, #6
 8000776:	6879      	ldr	r1, [r7, #4]
 8000778:	00db      	lsls	r3, r3, #3
 800077a:	440b      	add	r3, r1
 800077c:	685b      	ldr	r3, [r3, #4]
 800077e:	b29b      	uxth	r3, r3
 8000780:	4619      	mov	r1, r3
 8000782:	4790      	blx	r2
	for (uint8_t x = 0; x < 8; ++x){
 8000784:	7abb      	ldrb	r3, [r7, #10]
 8000786:	3301      	adds	r3, #1
 8000788:	72bb      	strb	r3, [r7, #10]
 800078a:	7abb      	ldrb	r3, [r7, #10]
 800078c:	2b07      	cmp	r3, #7
 800078e:	d9c3      	bls.n	8000718 <sseg_work+0xa6>
	}
	s->sseg_sgpio_low(s->digits[s->curr_digit][0], (uint16_t)s->digits[s->curr_digit][1]);
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 800079c:	4619      	mov	r1, r3
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	3108      	adds	r1, #8
 80007a2:	f853 0031 	ldr.w	r0, [r3, r1, lsl #3]
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 80007ac:	6879      	ldr	r1, [r7, #4]
 80007ae:	00db      	lsls	r3, r3, #3
 80007b0:	440b      	add	r3, r1
 80007b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007b4:	b29b      	uxth	r3, r3
 80007b6:	4619      	mov	r1, r3
 80007b8:	4790      	blx	r2
	s->curr_digit++;
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 80007c0:	3301      	adds	r3, #1
 80007c2:	b2da      	uxtb	r2, r3
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
}
 80007ca:	bf00      	nop
 80007cc:	3710      	adds	r7, #16
 80007ce:	46bd      	mov	sp, r7
 80007d0:	bd80      	pop	{r7, pc}
	...

080007d4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80007d4:	b480      	push	{r7}
 80007d6:	b085      	sub	sp, #20
 80007d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 80007da:	4b15      	ldr	r3, [pc, #84]	; (8000830 <HAL_MspInit+0x5c>)
 80007dc:	699b      	ldr	r3, [r3, #24]
 80007de:	4a14      	ldr	r2, [pc, #80]	; (8000830 <HAL_MspInit+0x5c>)
 80007e0:	f043 0301 	orr.w	r3, r3, #1
 80007e4:	6193      	str	r3, [r2, #24]
 80007e6:	4b12      	ldr	r3, [pc, #72]	; (8000830 <HAL_MspInit+0x5c>)
 80007e8:	699b      	ldr	r3, [r3, #24]
 80007ea:	f003 0301 	and.w	r3, r3, #1
 80007ee:	60bb      	str	r3, [r7, #8]
 80007f0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80007f2:	4b0f      	ldr	r3, [pc, #60]	; (8000830 <HAL_MspInit+0x5c>)
 80007f4:	69db      	ldr	r3, [r3, #28]
 80007f6:	4a0e      	ldr	r2, [pc, #56]	; (8000830 <HAL_MspInit+0x5c>)
 80007f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80007fc:	61d3      	str	r3, [r2, #28]
 80007fe:	4b0c      	ldr	r3, [pc, #48]	; (8000830 <HAL_MspInit+0x5c>)
 8000800:	69db      	ldr	r3, [r3, #28]
 8000802:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000806:	607b      	str	r3, [r7, #4]
 8000808:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 800080a:	4b0a      	ldr	r3, [pc, #40]	; (8000834 <HAL_MspInit+0x60>)
 800080c:	685b      	ldr	r3, [r3, #4]
 800080e:	60fb      	str	r3, [r7, #12]
 8000810:	68fb      	ldr	r3, [r7, #12]
 8000812:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000816:	60fb      	str	r3, [r7, #12]
 8000818:	68fb      	ldr	r3, [r7, #12]
 800081a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800081e:	60fb      	str	r3, [r7, #12]
 8000820:	4a04      	ldr	r2, [pc, #16]	; (8000834 <HAL_MspInit+0x60>)
 8000822:	68fb      	ldr	r3, [r7, #12]
 8000824:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000826:	bf00      	nop
 8000828:	3714      	adds	r7, #20
 800082a:	46bd      	mov	sp, r7
 800082c:	bc80      	pop	{r7}
 800082e:	4770      	bx	lr
 8000830:	40021000 	.word	0x40021000
 8000834:	40010000 	.word	0x40010000

08000838 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000838:	b580      	push	{r7, lr}
 800083a:	b088      	sub	sp, #32
 800083c:	af00      	add	r7, sp, #0
 800083e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000840:	f107 0310 	add.w	r3, r7, #16
 8000844:	2200      	movs	r2, #0
 8000846:	601a      	str	r2, [r3, #0]
 8000848:	605a      	str	r2, [r3, #4]
 800084a:	609a      	str	r2, [r3, #8]
 800084c:	60da      	str	r2, [r3, #12]
  if(hadc->Instance==ADC1)
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	681b      	ldr	r3, [r3, #0]
 8000852:	4a14      	ldr	r2, [pc, #80]	; (80008a4 <HAL_ADC_MspInit+0x6c>)
 8000854:	4293      	cmp	r3, r2
 8000856:	d121      	bne.n	800089c <HAL_ADC_MspInit+0x64>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000858:	4b13      	ldr	r3, [pc, #76]	; (80008a8 <HAL_ADC_MspInit+0x70>)
 800085a:	699b      	ldr	r3, [r3, #24]
 800085c:	4a12      	ldr	r2, [pc, #72]	; (80008a8 <HAL_ADC_MspInit+0x70>)
 800085e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000862:	6193      	str	r3, [r2, #24]
 8000864:	4b10      	ldr	r3, [pc, #64]	; (80008a8 <HAL_ADC_MspInit+0x70>)
 8000866:	699b      	ldr	r3, [r3, #24]
 8000868:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800086c:	60fb      	str	r3, [r7, #12]
 800086e:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000870:	4b0d      	ldr	r3, [pc, #52]	; (80008a8 <HAL_ADC_MspInit+0x70>)
 8000872:	699b      	ldr	r3, [r3, #24]
 8000874:	4a0c      	ldr	r2, [pc, #48]	; (80008a8 <HAL_ADC_MspInit+0x70>)
 8000876:	f043 0304 	orr.w	r3, r3, #4
 800087a:	6193      	str	r3, [r2, #24]
 800087c:	4b0a      	ldr	r3, [pc, #40]	; (80008a8 <HAL_ADC_MspInit+0x70>)
 800087e:	699b      	ldr	r3, [r3, #24]
 8000880:	f003 0304 	and.w	r3, r3, #4
 8000884:	60bb      	str	r3, [r7, #8]
 8000886:	68bb      	ldr	r3, [r7, #8]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000888:	2301      	movs	r3, #1
 800088a:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800088c:	2303      	movs	r3, #3
 800088e:	617b      	str	r3, [r7, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000890:	f107 0310 	add.w	r3, r7, #16
 8000894:	4619      	mov	r1, r3
 8000896:	4805      	ldr	r0, [pc, #20]	; (80008ac <HAL_ADC_MspInit+0x74>)
 8000898:	f000 fd0a 	bl	80012b0 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800089c:	bf00      	nop
 800089e:	3720      	adds	r7, #32
 80008a0:	46bd      	mov	sp, r7
 80008a2:	bd80      	pop	{r7, pc}
 80008a4:	40012400 	.word	0x40012400
 80008a8:	40021000 	.word	0x40021000
 80008ac:	40010800 	.word	0x40010800

080008b0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80008b0:	b480      	push	{r7}
 80008b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80008b4:	e7fe      	b.n	80008b4 <NMI_Handler+0x4>

080008b6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80008b6:	b480      	push	{r7}
 80008b8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80008ba:	e7fe      	b.n	80008ba <HardFault_Handler+0x4>

080008bc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80008bc:	b480      	push	{r7}
 80008be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80008c0:	e7fe      	b.n	80008c0 <MemManage_Handler+0x4>

080008c2 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80008c2:	b480      	push	{r7}
 80008c4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80008c6:	e7fe      	b.n	80008c6 <BusFault_Handler+0x4>

080008c8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80008c8:	b480      	push	{r7}
 80008ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80008cc:	e7fe      	b.n	80008cc <UsageFault_Handler+0x4>

080008ce <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80008ce:	b480      	push	{r7}
 80008d0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80008d2:	bf00      	nop
 80008d4:	46bd      	mov	sp, r7
 80008d6:	bc80      	pop	{r7}
 80008d8:	4770      	bx	lr

080008da <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80008da:	b480      	push	{r7}
 80008dc:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80008de:	bf00      	nop
 80008e0:	46bd      	mov	sp, r7
 80008e2:	bc80      	pop	{r7}
 80008e4:	4770      	bx	lr

080008e6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80008e6:	b480      	push	{r7}
 80008e8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80008ea:	bf00      	nop
 80008ec:	46bd      	mov	sp, r7
 80008ee:	bc80      	pop	{r7}
 80008f0:	4770      	bx	lr

080008f2 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80008f2:	b580      	push	{r7, lr}
 80008f4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80008f6:	f000 f9c9 	bl	8000c8c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80008fa:	bf00      	nop
 80008fc:	bd80      	pop	{r7, pc}

080008fe <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80008fe:	b480      	push	{r7}
 8000900:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000902:	bf00      	nop
 8000904:	46bd      	mov	sp, r7
 8000906:	bc80      	pop	{r7}
 8000908:	4770      	bx	lr

0800090a <usrtick_init>:
static inline uint32_t _usrtick_get_us();
static inline uint32_t _usrtick_get_us_since(uint32_t since);


/* Inicializa temporizadores */
void usrtick_init(_usrtick *utk, uint32_t p){
 800090a:	b480      	push	{r7}
 800090c:	b083      	sub	sp, #12
 800090e:	af00      	add	r7, sp, #0
 8000910:	6078      	str	r0, [r7, #4]
 8000912:	6039      	str	r1, [r7, #0]
	utk->ltime = 0;
 8000914:	687b      	ldr	r3, [r7, #4]
 8000916:	2200      	movs	r2, #0
 8000918:	601a      	str	r2, [r3, #0]
	utk->ctime = 0;
 800091a:	687b      	ldr	r3, [r7, #4]
 800091c:	2200      	movs	r2, #0
 800091e:	605a      	str	r2, [r3, #4]
	utk->ptime = p;
 8000920:	687b      	ldr	r3, [r7, #4]
 8000922:	683a      	ldr	r2, [r7, #0]
 8000924:	609a      	str	r2, [r3, #8]
#ifdef _UTIL_USE_USRTICK_STATISTICS
	utk->stime = 0;
	utk->uptime = 0;
#endif
	utk->cbcnt = 0;
 8000926:	687b      	ldr	r3, [r7, #4]
 8000928:	2200      	movs	r2, #0
 800092a:	731a      	strb	r2, [r3, #12]
	utk->cbpcs = 0;
 800092c:	687b      	ldr	r3, [r7, #4]
 800092e:	2200      	movs	r2, #0
 8000930:	735a      	strb	r2, [r3, #13]
}
 8000932:	bf00      	nop
 8000934:	370c      	adds	r7, #12
 8000936:	46bd      	mov	sp, r7
 8000938:	bc80      	pop	{r7}
 800093a:	4770      	bx	lr

0800093c <usrtick_attach>:


void usrtick_attach(_usrtick *utk, usrtick_attach_def f, uint32_t p){
 800093c:	b480      	push	{r7}
 800093e:	b085      	sub	sp, #20
 8000940:	af00      	add	r7, sp, #0
 8000942:	60f8      	str	r0, [r7, #12]
 8000944:	60b9      	str	r1, [r7, #8]
 8000946:	607a      	str	r2, [r7, #4]
	if(utk->cbcnt < _UTIL_USRTICK_CALLBACK_NUM){
 8000948:	68fb      	ldr	r3, [r7, #12]
 800094a:	7b1b      	ldrb	r3, [r3, #12]
 800094c:	2b04      	cmp	r3, #4
 800094e:	d827      	bhi.n	80009a0 <usrtick_attach+0x64>
		utk->proc[utk->cbcnt].period = p;
 8000950:	68fb      	ldr	r3, [r7, #12]
 8000952:	7b1b      	ldrb	r3, [r3, #12]
 8000954:	4619      	mov	r1, r3
 8000956:	68fa      	ldr	r2, [r7, #12]
 8000958:	460b      	mov	r3, r1
 800095a:	005b      	lsls	r3, r3, #1
 800095c:	440b      	add	r3, r1
 800095e:	009b      	lsls	r3, r3, #2
 8000960:	4413      	add	r3, r2
 8000962:	3314      	adds	r3, #20
 8000964:	687a      	ldr	r2, [r7, #4]
 8000966:	601a      	str	r2, [r3, #0]
		utk->proc[utk->cbcnt].curr = 0;
 8000968:	68fb      	ldr	r3, [r7, #12]
 800096a:	7b1b      	ldrb	r3, [r3, #12]
 800096c:	4619      	mov	r1, r3
 800096e:	68fa      	ldr	r2, [r7, #12]
 8000970:	460b      	mov	r3, r1
 8000972:	005b      	lsls	r3, r3, #1
 8000974:	440b      	add	r3, r1
 8000976:	009b      	lsls	r3, r3, #2
 8000978:	4413      	add	r3, r2
 800097a:	3318      	adds	r3, #24
 800097c:	2200      	movs	r2, #0
 800097e:	601a      	str	r2, [r3, #0]
		utk->proc[utk->cbcnt++].usrtick_callback = f;
 8000980:	68fb      	ldr	r3, [r7, #12]
 8000982:	7b1b      	ldrb	r3, [r3, #12]
 8000984:	1c5a      	adds	r2, r3, #1
 8000986:	b2d1      	uxtb	r1, r2
 8000988:	68fa      	ldr	r2, [r7, #12]
 800098a:	7311      	strb	r1, [r2, #12]
 800098c:	4619      	mov	r1, r3
 800098e:	68fa      	ldr	r2, [r7, #12]
 8000990:	460b      	mov	r3, r1
 8000992:	005b      	lsls	r3, r3, #1
 8000994:	440b      	add	r3, r1
 8000996:	009b      	lsls	r3, r3, #2
 8000998:	4413      	add	r3, r2
 800099a:	3310      	adds	r3, #16
 800099c:	68ba      	ldr	r2, [r7, #8]
 800099e:	601a      	str	r2, [r3, #0]
	}
}
 80009a0:	bf00      	nop
 80009a2:	3714      	adds	r7, #20
 80009a4:	46bd      	mov	sp, r7
 80009a6:	bc80      	pop	{r7}
 80009a8:	4770      	bx	lr

080009aa <usrtick_work>:


void usrtick_work(_usrtick *utk){
 80009aa:	b580      	push	{r7, lr}
 80009ac:	b082      	sub	sp, #8
 80009ae:	af00      	add	r7, sp, #0
 80009b0:	6078      	str	r0, [r7, #4]
	if(utk->cbpcs != 0 || _usrtick_get_us_since(utk->ltime) >= utk->ptime){
 80009b2:	687b      	ldr	r3, [r7, #4]
 80009b4:	7b5b      	ldrb	r3, [r3, #13]
 80009b6:	2b00      	cmp	r3, #0
 80009b8:	d109      	bne.n	80009ce <usrtick_work+0x24>
 80009ba:	687b      	ldr	r3, [r7, #4]
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	4618      	mov	r0, r3
 80009c0:	f000 f888 	bl	8000ad4 <_usrtick_get_us_since>
 80009c4:	4602      	mov	r2, r0
 80009c6:	687b      	ldr	r3, [r7, #4]
 80009c8:	689b      	ldr	r3, [r3, #8]
 80009ca:	429a      	cmp	r2, r3
 80009cc:	d363      	bcc.n	8000a96 <usrtick_work+0xec>

		if(utk->cbpcs == 0){
 80009ce:	687b      	ldr	r3, [r7, #4]
 80009d0:	7b5b      	ldrb	r3, [r3, #13]
 80009d2:	2b00      	cmp	r3, #0
 80009d4:	d156      	bne.n	8000a84 <usrtick_work+0xda>
#ifdef _UTIL_USE_USRTICK_STATISTICS
			utk->stime += _usrtick_get_us_since(utk->ltime);
#endif
			utk->ltime = _usrtick_get_us();
 80009d6:	f000 f861 	bl	8000a9c <_usrtick_get_us>
 80009da:	4602      	mov	r2, r0
 80009dc:	687b      	ldr	r3, [r7, #4]
 80009de:	601a      	str	r2, [r3, #0]
		}

		while(utk->cbpcs < utk->cbcnt){
 80009e0:	e050      	b.n	8000a84 <usrtick_work+0xda>
			utk->proc[utk->cbpcs].curr++;
 80009e2:	687b      	ldr	r3, [r7, #4]
 80009e4:	7b5b      	ldrb	r3, [r3, #13]
 80009e6:	461a      	mov	r2, r3
 80009e8:	6879      	ldr	r1, [r7, #4]
 80009ea:	4613      	mov	r3, r2
 80009ec:	005b      	lsls	r3, r3, #1
 80009ee:	4413      	add	r3, r2
 80009f0:	009b      	lsls	r3, r3, #2
 80009f2:	440b      	add	r3, r1
 80009f4:	3318      	adds	r3, #24
 80009f6:	681b      	ldr	r3, [r3, #0]
 80009f8:	1c59      	adds	r1, r3, #1
 80009fa:	6878      	ldr	r0, [r7, #4]
 80009fc:	4613      	mov	r3, r2
 80009fe:	005b      	lsls	r3, r3, #1
 8000a00:	4413      	add	r3, r2
 8000a02:	009b      	lsls	r3, r3, #2
 8000a04:	4403      	add	r3, r0
 8000a06:	3318      	adds	r3, #24
 8000a08:	6019      	str	r1, [r3, #0]
			if(utk->proc[utk->cbpcs].curr >= utk->proc[utk->cbpcs].period){
 8000a0a:	687b      	ldr	r3, [r7, #4]
 8000a0c:	7b5b      	ldrb	r3, [r3, #13]
 8000a0e:	4619      	mov	r1, r3
 8000a10:	687a      	ldr	r2, [r7, #4]
 8000a12:	460b      	mov	r3, r1
 8000a14:	005b      	lsls	r3, r3, #1
 8000a16:	440b      	add	r3, r1
 8000a18:	009b      	lsls	r3, r3, #2
 8000a1a:	4413      	add	r3, r2
 8000a1c:	3318      	adds	r3, #24
 8000a1e:	681a      	ldr	r2, [r3, #0]
 8000a20:	687b      	ldr	r3, [r7, #4]
 8000a22:	7b5b      	ldrb	r3, [r3, #13]
 8000a24:	4618      	mov	r0, r3
 8000a26:	6879      	ldr	r1, [r7, #4]
 8000a28:	4603      	mov	r3, r0
 8000a2a:	005b      	lsls	r3, r3, #1
 8000a2c:	4403      	add	r3, r0
 8000a2e:	009b      	lsls	r3, r3, #2
 8000a30:	440b      	add	r3, r1
 8000a32:	3314      	adds	r3, #20
 8000a34:	681b      	ldr	r3, [r3, #0]
 8000a36:	429a      	cmp	r2, r3
 8000a38:	d31e      	bcc.n	8000a78 <usrtick_work+0xce>
				utk->proc[utk->cbpcs].curr = 0;
 8000a3a:	687b      	ldr	r3, [r7, #4]
 8000a3c:	7b5b      	ldrb	r3, [r3, #13]
 8000a3e:	4619      	mov	r1, r3
 8000a40:	687a      	ldr	r2, [r7, #4]
 8000a42:	460b      	mov	r3, r1
 8000a44:	005b      	lsls	r3, r3, #1
 8000a46:	440b      	add	r3, r1
 8000a48:	009b      	lsls	r3, r3, #2
 8000a4a:	4413      	add	r3, r2
 8000a4c:	3318      	adds	r3, #24
 8000a4e:	2200      	movs	r2, #0
 8000a50:	601a      	str	r2, [r3, #0]
				tmptime = _usrtick_get_us_since(tmptime);
				utk->proc[utk->cbpcs].utimectr += tmptime;
				if(tmptime >= utk->proc[utk->cbpcs].mtime)
					utk->proc[utk->cbpcs].mtimectr = tmptime;
#else
				utk->proc[utk->cbpcs].usrtick_callback();
 8000a52:	687b      	ldr	r3, [r7, #4]
 8000a54:	7b5b      	ldrb	r3, [r3, #13]
 8000a56:	4619      	mov	r1, r3
 8000a58:	687a      	ldr	r2, [r7, #4]
 8000a5a:	460b      	mov	r3, r1
 8000a5c:	005b      	lsls	r3, r3, #1
 8000a5e:	440b      	add	r3, r1
 8000a60:	009b      	lsls	r3, r3, #2
 8000a62:	4413      	add	r3, r2
 8000a64:	3310      	adds	r3, #16
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	4798      	blx	r3
#endif

				utk->cbpcs++;
 8000a6a:	687b      	ldr	r3, [r7, #4]
 8000a6c:	7b5b      	ldrb	r3, [r3, #13]
 8000a6e:	3301      	adds	r3, #1
 8000a70:	b2da      	uxtb	r2, r3
 8000a72:	687b      	ldr	r3, [r7, #4]
 8000a74:	735a      	strb	r2, [r3, #13]
				return;
 8000a76:	e00e      	b.n	8000a96 <usrtick_work+0xec>
			}
			utk->cbpcs++;
 8000a78:	687b      	ldr	r3, [r7, #4]
 8000a7a:	7b5b      	ldrb	r3, [r3, #13]
 8000a7c:	3301      	adds	r3, #1
 8000a7e:	b2da      	uxtb	r2, r3
 8000a80:	687b      	ldr	r3, [r7, #4]
 8000a82:	735a      	strb	r2, [r3, #13]
		while(utk->cbpcs < utk->cbcnt){
 8000a84:	687b      	ldr	r3, [r7, #4]
 8000a86:	7b5a      	ldrb	r2, [r3, #13]
 8000a88:	687b      	ldr	r3, [r7, #4]
 8000a8a:	7b1b      	ldrb	r3, [r3, #12]
 8000a8c:	429a      	cmp	r2, r3
 8000a8e:	d3a8      	bcc.n	80009e2 <usrtick_work+0x38>
		}
		utk->cbpcs = 0;
 8000a90:	687b      	ldr	r3, [r7, #4]
 8000a92:	2200      	movs	r2, #0
 8000a94:	735a      	strb	r2, [r3, #13]
			utk->uptime++;
			utk->stime -= 1000000;
		}
#endif
	}
}
 8000a96:	3708      	adds	r7, #8
 8000a98:	46bd      	mov	sp, r7
 8000a9a:	bd80      	pop	{r7, pc}

08000a9c <_usrtick_get_us>:
//	PRIVADO

/*
 * Retorna la cantidad de us actual
 */
static inline uint32_t _usrtick_get_us(){
 8000a9c:	b480      	push	{r7}
 8000a9e:	af00      	add	r7, sp, #0
	return (uwTick*1000)+((SysTick->LOAD - SysTick->VAL)/_UTIL_USRTICK_TICKS_ON_US);
 8000aa0:	4b09      	ldr	r3, [pc, #36]	; (8000ac8 <_usrtick_get_us+0x2c>)
 8000aa2:	681b      	ldr	r3, [r3, #0]
 8000aa4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000aa8:	fb03 f202 	mul.w	r2, r3, r2
 8000aac:	4b07      	ldr	r3, [pc, #28]	; (8000acc <_usrtick_get_us+0x30>)
 8000aae:	6859      	ldr	r1, [r3, #4]
 8000ab0:	4b06      	ldr	r3, [pc, #24]	; (8000acc <_usrtick_get_us+0x30>)
 8000ab2:	689b      	ldr	r3, [r3, #8]
 8000ab4:	1acb      	subs	r3, r1, r3
 8000ab6:	4906      	ldr	r1, [pc, #24]	; (8000ad0 <_usrtick_get_us+0x34>)
 8000ab8:	fba1 1303 	umull	r1, r3, r1, r3
 8000abc:	091b      	lsrs	r3, r3, #4
 8000abe:	4413      	add	r3, r2
}
 8000ac0:	4618      	mov	r0, r3
 8000ac2:	46bd      	mov	sp, r7
 8000ac4:	bc80      	pop	{r7}
 8000ac6:	4770      	bx	lr
 8000ac8:	20000138 	.word	0x20000138
 8000acc:	e000e010 	.word	0xe000e010
 8000ad0:	38e38e39 	.word	0x38e38e39

08000ad4 <_usrtick_get_us_since>:

/*
 * Retorna la cantidad de us desde since
 */
static inline uint32_t _usrtick_get_us_since(uint32_t since){
 8000ad4:	b480      	push	{r7}
 8000ad6:	b085      	sub	sp, #20
 8000ad8:	af00      	add	r7, sp, #0
 8000ada:	6078      	str	r0, [r7, #4]
	uint32_t curr = (uwTick*1000)+((SysTick->LOAD - SysTick->VAL)/_UTIL_USRTICK_TICKS_ON_US);
 8000adc:	4b10      	ldr	r3, [pc, #64]	; (8000b20 <_usrtick_get_us_since+0x4c>)
 8000ade:	681b      	ldr	r3, [r3, #0]
 8000ae0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000ae4:	fb03 f202 	mul.w	r2, r3, r2
 8000ae8:	4b0e      	ldr	r3, [pc, #56]	; (8000b24 <_usrtick_get_us_since+0x50>)
 8000aea:	6859      	ldr	r1, [r3, #4]
 8000aec:	4b0d      	ldr	r3, [pc, #52]	; (8000b24 <_usrtick_get_us_since+0x50>)
 8000aee:	689b      	ldr	r3, [r3, #8]
 8000af0:	1acb      	subs	r3, r1, r3
 8000af2:	490d      	ldr	r1, [pc, #52]	; (8000b28 <_usrtick_get_us_since+0x54>)
 8000af4:	fba1 1303 	umull	r1, r3, r1, r3
 8000af8:	091b      	lsrs	r3, r3, #4
 8000afa:	4413      	add	r3, r2
 8000afc:	60fb      	str	r3, [r7, #12]
	if(since > curr)
 8000afe:	687a      	ldr	r2, [r7, #4]
 8000b00:	68fb      	ldr	r3, [r7, #12]
 8000b02:	429a      	cmp	r2, r3
 8000b04:	d904      	bls.n	8000b10 <_usrtick_get_us_since+0x3c>
		return 0xFFFFFFFF - since + curr;
 8000b06:	68fa      	ldr	r2, [r7, #12]
 8000b08:	687b      	ldr	r3, [r7, #4]
 8000b0a:	1ad3      	subs	r3, r2, r3
 8000b0c:	3b01      	subs	r3, #1
 8000b0e:	e002      	b.n	8000b16 <_usrtick_get_us_since+0x42>
	return curr - since;
 8000b10:	68fa      	ldr	r2, [r7, #12]
 8000b12:	687b      	ldr	r3, [r7, #4]
 8000b14:	1ad3      	subs	r3, r2, r3
}
 8000b16:	4618      	mov	r0, r3
 8000b18:	3714      	adds	r7, #20
 8000b1a:	46bd      	mov	sp, r7
 8000b1c:	bc80      	pop	{r7}
 8000b1e:	4770      	bx	lr
 8000b20:	20000138 	.word	0x20000138
 8000b24:	e000e010 	.word	0xe000e010
 8000b28:	38e38e39 	.word	0x38e38e39

08000b2c <heartbeat_init>:
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ifdef _UTIL_USE_HEARTBEAT_UTILITIES
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* Inicializa hearbeat */
void heartbeat_init(_hb *hb){
 8000b2c:	b480      	push	{r7}
 8000b2e:	b083      	sub	sp, #12
 8000b30:	af00      	add	r7, sp, #0
 8000b32:	6078      	str	r0, [r7, #4]
	hb->state = 0;
 8000b34:	687b      	ldr	r3, [r7, #4]
 8000b36:	2200      	movs	r2, #0
 8000b38:	801a      	strh	r2, [r3, #0]
	hb->dfmsk = 0b1010000000000000;
 8000b3a:	687b      	ldr	r3, [r7, #4]
 8000b3c:	f44f 4220 	mov.w	r2, #40960	; 0xa000
 8000b40:	809a      	strh	r2, [r3, #4]
	hb->stmsk = 0b1010000000000000;
 8000b42:	687b      	ldr	r3, [r7, #4]
 8000b44:	f44f 4220 	mov.w	r2, #40960	; 0xa000
 8000b48:	805a      	strh	r2, [r3, #2]
}
 8000b4a:	bf00      	nop
 8000b4c:	370c      	adds	r7, #12
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	bc80      	pop	{r7}
 8000b52:	4770      	bx	lr

08000b54 <heartbeat>:

void heartbeat(_hb *hb){
 8000b54:	b580      	push	{r7, lr}
 8000b56:	b082      	sub	sp, #8
 8000b58:	af00      	add	r7, sp, #0
 8000b5a:	6078      	str	r0, [r7, #4]
	hb->gpio_callback((hb->stmsk & (1 << hb->state)) == 0);
 8000b5c:	687b      	ldr	r3, [r7, #4]
 8000b5e:	689b      	ldr	r3, [r3, #8]
 8000b60:	687a      	ldr	r2, [r7, #4]
 8000b62:	8852      	ldrh	r2, [r2, #2]
 8000b64:	4611      	mov	r1, r2
 8000b66:	687a      	ldr	r2, [r7, #4]
 8000b68:	8812      	ldrh	r2, [r2, #0]
 8000b6a:	fa41 f202 	asr.w	r2, r1, r2
 8000b6e:	f002 0201 	and.w	r2, r2, #1
 8000b72:	2a00      	cmp	r2, #0
 8000b74:	bf0c      	ite	eq
 8000b76:	2201      	moveq	r2, #1
 8000b78:	2200      	movne	r2, #0
 8000b7a:	b2d2      	uxtb	r2, r2
 8000b7c:	4610      	mov	r0, r2
 8000b7e:	4798      	blx	r3
	hb->state = (hb->state+1) & 15;
 8000b80:	687b      	ldr	r3, [r7, #4]
 8000b82:	881b      	ldrh	r3, [r3, #0]
 8000b84:	3301      	adds	r3, #1
 8000b86:	b29b      	uxth	r3, r3
 8000b88:	f003 030f 	and.w	r3, r3, #15
 8000b8c:	b29a      	uxth	r2, r3
 8000b8e:	687b      	ldr	r3, [r7, #4]
 8000b90:	801a      	strh	r2, [r3, #0]
}
 8000b92:	bf00      	nop
 8000b94:	3708      	adds	r7, #8
 8000b96:	46bd      	mov	sp, r7
 8000b98:	bd80      	pop	{r7, pc}

08000b9a <heartbeat_attach>:

void heartbeat_attach(_hb *hb, heartbeat_gpio_def f){
 8000b9a:	b480      	push	{r7}
 8000b9c:	b083      	sub	sp, #12
 8000b9e:	af00      	add	r7, sp, #0
 8000ba0:	6078      	str	r0, [r7, #4]
 8000ba2:	6039      	str	r1, [r7, #0]
	hb->gpio_callback = f;
 8000ba4:	687b      	ldr	r3, [r7, #4]
 8000ba6:	683a      	ldr	r2, [r7, #0]
 8000ba8:	609a      	str	r2, [r3, #8]
}
 8000baa:	bf00      	nop
 8000bac:	370c      	adds	r7, #12
 8000bae:	46bd      	mov	sp, r7
 8000bb0:	bc80      	pop	{r7}
 8000bb2:	4770      	bx	lr

08000bb4 <Reset_Handler>:
 8000bb4:	480c      	ldr	r0, [pc, #48]	; (8000be8 <LoopFillZerobss+0x12>)
 8000bb6:	490d      	ldr	r1, [pc, #52]	; (8000bec <LoopFillZerobss+0x16>)
 8000bb8:	4a0d      	ldr	r2, [pc, #52]	; (8000bf0 <LoopFillZerobss+0x1a>)
 8000bba:	2300      	movs	r3, #0
 8000bbc:	e002      	b.n	8000bc4 <LoopCopyDataInit>

08000bbe <CopyDataInit>:
 8000bbe:	58d4      	ldr	r4, [r2, r3]
 8000bc0:	50c4      	str	r4, [r0, r3]
 8000bc2:	3304      	adds	r3, #4

08000bc4 <LoopCopyDataInit>:
 8000bc4:	18c4      	adds	r4, r0, r3
 8000bc6:	428c      	cmp	r4, r1
 8000bc8:	d3f9      	bcc.n	8000bbe <CopyDataInit>
 8000bca:	4a0a      	ldr	r2, [pc, #40]	; (8000bf4 <LoopFillZerobss+0x1e>)
 8000bcc:	4c0a      	ldr	r4, [pc, #40]	; (8000bf8 <LoopFillZerobss+0x22>)
 8000bce:	2300      	movs	r3, #0
 8000bd0:	e001      	b.n	8000bd6 <LoopFillZerobss>

08000bd2 <FillZerobss>:
 8000bd2:	6013      	str	r3, [r2, #0]
 8000bd4:	3204      	adds	r2, #4

08000bd6 <LoopFillZerobss>:
 8000bd6:	42a2      	cmp	r2, r4
 8000bd8:	d3fb      	bcc.n	8000bd2 <FillZerobss>
 8000bda:	f7ff fe90 	bl	80008fe <SystemInit>
 8000bde:	f001 f9a1 	bl	8001f24 <__libc_init_array>
 8000be2:	f7ff fb0b 	bl	80001fc <main>
 8000be6:	4770      	bx	lr
 8000be8:	20000000 	.word	0x20000000
 8000bec:	2000000c 	.word	0x2000000c
 8000bf0:	08002000 	.word	0x08002000
 8000bf4:	2000000c 	.word	0x2000000c
 8000bf8:	2000013c 	.word	0x2000013c

08000bfc <ADC1_2_IRQHandler>:
 8000bfc:	e7fe      	b.n	8000bfc <ADC1_2_IRQHandler>
	...

08000c00 <HAL_Init>:
 8000c00:	b580      	push	{r7, lr}
 8000c02:	af00      	add	r7, sp, #0
 8000c04:	4b08      	ldr	r3, [pc, #32]	; (8000c28 <HAL_Init+0x28>)
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	4a07      	ldr	r2, [pc, #28]	; (8000c28 <HAL_Init+0x28>)
 8000c0a:	f043 0310 	orr.w	r3, r3, #16
 8000c0e:	6013      	str	r3, [r2, #0]
 8000c10:	2003      	movs	r0, #3
 8000c12:	f000 fb19 	bl	8001248 <HAL_NVIC_SetPriorityGrouping>
 8000c16:	200f      	movs	r0, #15
 8000c18:	f000 f808 	bl	8000c2c <HAL_InitTick>
 8000c1c:	f7ff fdda 	bl	80007d4 <HAL_MspInit>
 8000c20:	2300      	movs	r3, #0
 8000c22:	4618      	mov	r0, r3
 8000c24:	bd80      	pop	{r7, pc}
 8000c26:	bf00      	nop
 8000c28:	40022000 	.word	0x40022000

08000c2c <HAL_InitTick>:
 8000c2c:	b580      	push	{r7, lr}
 8000c2e:	b082      	sub	sp, #8
 8000c30:	af00      	add	r7, sp, #0
 8000c32:	6078      	str	r0, [r7, #4]
 8000c34:	4b12      	ldr	r3, [pc, #72]	; (8000c80 <HAL_InitTick+0x54>)
 8000c36:	681a      	ldr	r2, [r3, #0]
 8000c38:	4b12      	ldr	r3, [pc, #72]	; (8000c84 <HAL_InitTick+0x58>)
 8000c3a:	781b      	ldrb	r3, [r3, #0]
 8000c3c:	4619      	mov	r1, r3
 8000c3e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000c42:	fbb3 f3f1 	udiv	r3, r3, r1
 8000c46:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c4a:	4618      	mov	r0, r3
 8000c4c:	f000 fb23 	bl	8001296 <HAL_SYSTICK_Config>
 8000c50:	4603      	mov	r3, r0
 8000c52:	2b00      	cmp	r3, #0
 8000c54:	d001      	beq.n	8000c5a <HAL_InitTick+0x2e>
 8000c56:	2301      	movs	r3, #1
 8000c58:	e00e      	b.n	8000c78 <HAL_InitTick+0x4c>
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	2b0f      	cmp	r3, #15
 8000c5e:	d80a      	bhi.n	8000c76 <HAL_InitTick+0x4a>
 8000c60:	2200      	movs	r2, #0
 8000c62:	6879      	ldr	r1, [r7, #4]
 8000c64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c68:	f000 faf9 	bl	800125e <HAL_NVIC_SetPriority>
 8000c6c:	4a06      	ldr	r2, [pc, #24]	; (8000c88 <HAL_InitTick+0x5c>)
 8000c6e:	687b      	ldr	r3, [r7, #4]
 8000c70:	6013      	str	r3, [r2, #0]
 8000c72:	2300      	movs	r3, #0
 8000c74:	e000      	b.n	8000c78 <HAL_InitTick+0x4c>
 8000c76:	2301      	movs	r3, #1
 8000c78:	4618      	mov	r0, r3
 8000c7a:	3708      	adds	r7, #8
 8000c7c:	46bd      	mov	sp, r7
 8000c7e:	bd80      	pop	{r7, pc}
 8000c80:	20000000 	.word	0x20000000
 8000c84:	20000008 	.word	0x20000008
 8000c88:	20000004 	.word	0x20000004

08000c8c <HAL_IncTick>:
 8000c8c:	b480      	push	{r7}
 8000c8e:	af00      	add	r7, sp, #0
 8000c90:	4b05      	ldr	r3, [pc, #20]	; (8000ca8 <HAL_IncTick+0x1c>)
 8000c92:	781b      	ldrb	r3, [r3, #0]
 8000c94:	461a      	mov	r2, r3
 8000c96:	4b05      	ldr	r3, [pc, #20]	; (8000cac <HAL_IncTick+0x20>)
 8000c98:	681b      	ldr	r3, [r3, #0]
 8000c9a:	4413      	add	r3, r2
 8000c9c:	4a03      	ldr	r2, [pc, #12]	; (8000cac <HAL_IncTick+0x20>)
 8000c9e:	6013      	str	r3, [r2, #0]
 8000ca0:	bf00      	nop
 8000ca2:	46bd      	mov	sp, r7
 8000ca4:	bc80      	pop	{r7}
 8000ca6:	4770      	bx	lr
 8000ca8:	20000008 	.word	0x20000008
 8000cac:	20000138 	.word	0x20000138

08000cb0 <HAL_GetTick>:
 8000cb0:	b480      	push	{r7}
 8000cb2:	af00      	add	r7, sp, #0
 8000cb4:	4b02      	ldr	r3, [pc, #8]	; (8000cc0 <HAL_GetTick+0x10>)
 8000cb6:	681b      	ldr	r3, [r3, #0]
 8000cb8:	4618      	mov	r0, r3
 8000cba:	46bd      	mov	sp, r7
 8000cbc:	bc80      	pop	{r7}
 8000cbe:	4770      	bx	lr
 8000cc0:	20000138 	.word	0x20000138

08000cc4 <HAL_ADC_Init>:
 8000cc4:	b580      	push	{r7, lr}
 8000cc6:	b086      	sub	sp, #24
 8000cc8:	af00      	add	r7, sp, #0
 8000cca:	6078      	str	r0, [r7, #4]
 8000ccc:	2300      	movs	r3, #0
 8000cce:	75fb      	strb	r3, [r7, #23]
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	613b      	str	r3, [r7, #16]
 8000cd4:	2300      	movs	r3, #0
 8000cd6:	60bb      	str	r3, [r7, #8]
 8000cd8:	2300      	movs	r3, #0
 8000cda:	60fb      	str	r3, [r7, #12]
 8000cdc:	687b      	ldr	r3, [r7, #4]
 8000cde:	2b00      	cmp	r3, #0
 8000ce0:	d101      	bne.n	8000ce6 <HAL_ADC_Init+0x22>
 8000ce2:	2301      	movs	r3, #1
 8000ce4:	e0be      	b.n	8000e64 <HAL_ADC_Init+0x1a0>
 8000ce6:	687b      	ldr	r3, [r7, #4]
 8000ce8:	689b      	ldr	r3, [r3, #8]
 8000cea:	2b00      	cmp	r3, #0
 8000cec:	687b      	ldr	r3, [r7, #4]
 8000cee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000cf0:	2b00      	cmp	r3, #0
 8000cf2:	d109      	bne.n	8000d08 <HAL_ADC_Init+0x44>
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	2200      	movs	r2, #0
 8000cf8:	62da      	str	r2, [r3, #44]	; 0x2c
 8000cfa:	687b      	ldr	r3, [r7, #4]
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8000d02:	6878      	ldr	r0, [r7, #4]
 8000d04:	f7ff fd98 	bl	8000838 <HAL_ADC_MspInit>
 8000d08:	6878      	ldr	r0, [r7, #4]
 8000d0a:	f000 f9ab 	bl	8001064 <ADC_ConversionStop_Disable>
 8000d0e:	4603      	mov	r3, r0
 8000d10:	75fb      	strb	r3, [r7, #23]
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d16:	f003 0310 	and.w	r3, r3, #16
 8000d1a:	2b00      	cmp	r3, #0
 8000d1c:	f040 8099 	bne.w	8000e52 <HAL_ADC_Init+0x18e>
 8000d20:	7dfb      	ldrb	r3, [r7, #23]
 8000d22:	2b00      	cmp	r3, #0
 8000d24:	f040 8095 	bne.w	8000e52 <HAL_ADC_Init+0x18e>
 8000d28:	687b      	ldr	r3, [r7, #4]
 8000d2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d2c:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8000d30:	f023 0302 	bic.w	r3, r3, #2
 8000d34:	f043 0202 	orr.w	r2, r3, #2
 8000d38:	687b      	ldr	r3, [r7, #4]
 8000d3a:	629a      	str	r2, [r3, #40]	; 0x28
 8000d3c:	687b      	ldr	r3, [r7, #4]
 8000d3e:	685a      	ldr	r2, [r3, #4]
 8000d40:	687b      	ldr	r3, [r7, #4]
 8000d42:	69db      	ldr	r3, [r3, #28]
 8000d44:	431a      	orrs	r2, r3
 8000d46:	687b      	ldr	r3, [r7, #4]
 8000d48:	7b1b      	ldrb	r3, [r3, #12]
 8000d4a:	005b      	lsls	r3, r3, #1
 8000d4c:	4313      	orrs	r3, r2
 8000d4e:	68ba      	ldr	r2, [r7, #8]
 8000d50:	4313      	orrs	r3, r2
 8000d52:	60bb      	str	r3, [r7, #8]
 8000d54:	687b      	ldr	r3, [r7, #4]
 8000d56:	689b      	ldr	r3, [r3, #8]
 8000d58:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000d5c:	d003      	beq.n	8000d66 <HAL_ADC_Init+0xa2>
 8000d5e:	687b      	ldr	r3, [r7, #4]
 8000d60:	689b      	ldr	r3, [r3, #8]
 8000d62:	2b01      	cmp	r3, #1
 8000d64:	d102      	bne.n	8000d6c <HAL_ADC_Init+0xa8>
 8000d66:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000d6a:	e000      	b.n	8000d6e <HAL_ADC_Init+0xaa>
 8000d6c:	2300      	movs	r3, #0
 8000d6e:	693a      	ldr	r2, [r7, #16]
 8000d70:	4313      	orrs	r3, r2
 8000d72:	613b      	str	r3, [r7, #16]
 8000d74:	687b      	ldr	r3, [r7, #4]
 8000d76:	7d1b      	ldrb	r3, [r3, #20]
 8000d78:	2b01      	cmp	r3, #1
 8000d7a:	d119      	bne.n	8000db0 <HAL_ADC_Init+0xec>
 8000d7c:	687b      	ldr	r3, [r7, #4]
 8000d7e:	7b1b      	ldrb	r3, [r3, #12]
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d109      	bne.n	8000d98 <HAL_ADC_Init+0xd4>
 8000d84:	687b      	ldr	r3, [r7, #4]
 8000d86:	699b      	ldr	r3, [r3, #24]
 8000d88:	3b01      	subs	r3, #1
 8000d8a:	035a      	lsls	r2, r3, #13
 8000d8c:	693b      	ldr	r3, [r7, #16]
 8000d8e:	4313      	orrs	r3, r2
 8000d90:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000d94:	613b      	str	r3, [r7, #16]
 8000d96:	e00b      	b.n	8000db0 <HAL_ADC_Init+0xec>
 8000d98:	687b      	ldr	r3, [r7, #4]
 8000d9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d9c:	f043 0220 	orr.w	r2, r3, #32
 8000da0:	687b      	ldr	r3, [r7, #4]
 8000da2:	629a      	str	r2, [r3, #40]	; 0x28
 8000da4:	687b      	ldr	r3, [r7, #4]
 8000da6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000da8:	f043 0201 	orr.w	r2, r3, #1
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	62da      	str	r2, [r3, #44]	; 0x2c
 8000db0:	687b      	ldr	r3, [r7, #4]
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	685b      	ldr	r3, [r3, #4]
 8000db6:	f423 4169 	bic.w	r1, r3, #59648	; 0xe900
 8000dba:	687b      	ldr	r3, [r7, #4]
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	693a      	ldr	r2, [r7, #16]
 8000dc0:	430a      	orrs	r2, r1
 8000dc2:	605a      	str	r2, [r3, #4]
 8000dc4:	687b      	ldr	r3, [r7, #4]
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	689a      	ldr	r2, [r3, #8]
 8000dca:	4b28      	ldr	r3, [pc, #160]	; (8000e6c <HAL_ADC_Init+0x1a8>)
 8000dcc:	4013      	ands	r3, r2
 8000dce:	687a      	ldr	r2, [r7, #4]
 8000dd0:	6812      	ldr	r2, [r2, #0]
 8000dd2:	68b9      	ldr	r1, [r7, #8]
 8000dd4:	430b      	orrs	r3, r1
 8000dd6:	6093      	str	r3, [r2, #8]
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	689b      	ldr	r3, [r3, #8]
 8000ddc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000de0:	d003      	beq.n	8000dea <HAL_ADC_Init+0x126>
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	689b      	ldr	r3, [r3, #8]
 8000de6:	2b01      	cmp	r3, #1
 8000de8:	d104      	bne.n	8000df4 <HAL_ADC_Init+0x130>
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	691b      	ldr	r3, [r3, #16]
 8000dee:	3b01      	subs	r3, #1
 8000df0:	051b      	lsls	r3, r3, #20
 8000df2:	60fb      	str	r3, [r7, #12]
 8000df4:	687b      	ldr	r3, [r7, #4]
 8000df6:	681b      	ldr	r3, [r3, #0]
 8000df8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000dfa:	f423 0170 	bic.w	r1, r3, #15728640	; 0xf00000
 8000dfe:	687b      	ldr	r3, [r7, #4]
 8000e00:	681b      	ldr	r3, [r3, #0]
 8000e02:	68fa      	ldr	r2, [r7, #12]
 8000e04:	430a      	orrs	r2, r1
 8000e06:	62da      	str	r2, [r3, #44]	; 0x2c
 8000e08:	687b      	ldr	r3, [r7, #4]
 8000e0a:	681b      	ldr	r3, [r3, #0]
 8000e0c:	689a      	ldr	r2, [r3, #8]
 8000e0e:	4b18      	ldr	r3, [pc, #96]	; (8000e70 <HAL_ADC_Init+0x1ac>)
 8000e10:	4013      	ands	r3, r2
 8000e12:	68ba      	ldr	r2, [r7, #8]
 8000e14:	429a      	cmp	r2, r3
 8000e16:	d10b      	bne.n	8000e30 <HAL_ADC_Init+0x16c>
 8000e18:	687b      	ldr	r3, [r7, #4]
 8000e1a:	2200      	movs	r2, #0
 8000e1c:	62da      	str	r2, [r3, #44]	; 0x2c
 8000e1e:	687b      	ldr	r3, [r7, #4]
 8000e20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000e22:	f023 0303 	bic.w	r3, r3, #3
 8000e26:	f043 0201 	orr.w	r2, r3, #1
 8000e2a:	687b      	ldr	r3, [r7, #4]
 8000e2c:	629a      	str	r2, [r3, #40]	; 0x28
 8000e2e:	e018      	b.n	8000e62 <HAL_ADC_Init+0x19e>
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000e34:	f023 0312 	bic.w	r3, r3, #18
 8000e38:	f043 0210 	orr.w	r2, r3, #16
 8000e3c:	687b      	ldr	r3, [r7, #4]
 8000e3e:	629a      	str	r2, [r3, #40]	; 0x28
 8000e40:	687b      	ldr	r3, [r7, #4]
 8000e42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000e44:	f043 0201 	orr.w	r2, r3, #1
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	62da      	str	r2, [r3, #44]	; 0x2c
 8000e4c:	2301      	movs	r3, #1
 8000e4e:	75fb      	strb	r3, [r7, #23]
 8000e50:	e007      	b.n	8000e62 <HAL_ADC_Init+0x19e>
 8000e52:	687b      	ldr	r3, [r7, #4]
 8000e54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000e56:	f043 0210 	orr.w	r2, r3, #16
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	629a      	str	r2, [r3, #40]	; 0x28
 8000e5e:	2301      	movs	r3, #1
 8000e60:	75fb      	strb	r3, [r7, #23]
 8000e62:	7dfb      	ldrb	r3, [r7, #23]
 8000e64:	4618      	mov	r0, r3
 8000e66:	3718      	adds	r7, #24
 8000e68:	46bd      	mov	sp, r7
 8000e6a:	bd80      	pop	{r7, pc}
 8000e6c:	ffe1f7fd 	.word	0xffe1f7fd
 8000e70:	ff1f0efe 	.word	0xff1f0efe

08000e74 <HAL_ADC_ConfigChannel>:
 8000e74:	b480      	push	{r7}
 8000e76:	b085      	sub	sp, #20
 8000e78:	af00      	add	r7, sp, #0
 8000e7a:	6078      	str	r0, [r7, #4]
 8000e7c:	6039      	str	r1, [r7, #0]
 8000e7e:	2300      	movs	r3, #0
 8000e80:	73fb      	strb	r3, [r7, #15]
 8000e82:	2300      	movs	r3, #0
 8000e84:	60bb      	str	r3, [r7, #8]
 8000e86:	687b      	ldr	r3, [r7, #4]
 8000e88:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8000e8c:	2b01      	cmp	r3, #1
 8000e8e:	d101      	bne.n	8000e94 <HAL_ADC_ConfigChannel+0x20>
 8000e90:	2302      	movs	r3, #2
 8000e92:	e0dc      	b.n	800104e <HAL_ADC_ConfigChannel+0x1da>
 8000e94:	687b      	ldr	r3, [r7, #4]
 8000e96:	2201      	movs	r2, #1
 8000e98:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8000e9c:	683b      	ldr	r3, [r7, #0]
 8000e9e:	685b      	ldr	r3, [r3, #4]
 8000ea0:	2b06      	cmp	r3, #6
 8000ea2:	d81c      	bhi.n	8000ede <HAL_ADC_ConfigChannel+0x6a>
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8000eaa:	683b      	ldr	r3, [r7, #0]
 8000eac:	685a      	ldr	r2, [r3, #4]
 8000eae:	4613      	mov	r3, r2
 8000eb0:	009b      	lsls	r3, r3, #2
 8000eb2:	4413      	add	r3, r2
 8000eb4:	3b05      	subs	r3, #5
 8000eb6:	221f      	movs	r2, #31
 8000eb8:	fa02 f303 	lsl.w	r3, r2, r3
 8000ebc:	43db      	mvns	r3, r3
 8000ebe:	4019      	ands	r1, r3
 8000ec0:	683b      	ldr	r3, [r7, #0]
 8000ec2:	6818      	ldr	r0, [r3, #0]
 8000ec4:	683b      	ldr	r3, [r7, #0]
 8000ec6:	685a      	ldr	r2, [r3, #4]
 8000ec8:	4613      	mov	r3, r2
 8000eca:	009b      	lsls	r3, r3, #2
 8000ecc:	4413      	add	r3, r2
 8000ece:	3b05      	subs	r3, #5
 8000ed0:	fa00 f203 	lsl.w	r2, r0, r3
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	681b      	ldr	r3, [r3, #0]
 8000ed8:	430a      	orrs	r2, r1
 8000eda:	635a      	str	r2, [r3, #52]	; 0x34
 8000edc:	e03c      	b.n	8000f58 <HAL_ADC_ConfigChannel+0xe4>
 8000ede:	683b      	ldr	r3, [r7, #0]
 8000ee0:	685b      	ldr	r3, [r3, #4]
 8000ee2:	2b0c      	cmp	r3, #12
 8000ee4:	d81c      	bhi.n	8000f20 <HAL_ADC_ConfigChannel+0xac>
 8000ee6:	687b      	ldr	r3, [r7, #4]
 8000ee8:	681b      	ldr	r3, [r3, #0]
 8000eea:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000eec:	683b      	ldr	r3, [r7, #0]
 8000eee:	685a      	ldr	r2, [r3, #4]
 8000ef0:	4613      	mov	r3, r2
 8000ef2:	009b      	lsls	r3, r3, #2
 8000ef4:	4413      	add	r3, r2
 8000ef6:	3b23      	subs	r3, #35	; 0x23
 8000ef8:	221f      	movs	r2, #31
 8000efa:	fa02 f303 	lsl.w	r3, r2, r3
 8000efe:	43db      	mvns	r3, r3
 8000f00:	4019      	ands	r1, r3
 8000f02:	683b      	ldr	r3, [r7, #0]
 8000f04:	6818      	ldr	r0, [r3, #0]
 8000f06:	683b      	ldr	r3, [r7, #0]
 8000f08:	685a      	ldr	r2, [r3, #4]
 8000f0a:	4613      	mov	r3, r2
 8000f0c:	009b      	lsls	r3, r3, #2
 8000f0e:	4413      	add	r3, r2
 8000f10:	3b23      	subs	r3, #35	; 0x23
 8000f12:	fa00 f203 	lsl.w	r2, r0, r3
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	681b      	ldr	r3, [r3, #0]
 8000f1a:	430a      	orrs	r2, r1
 8000f1c:	631a      	str	r2, [r3, #48]	; 0x30
 8000f1e:	e01b      	b.n	8000f58 <HAL_ADC_ConfigChannel+0xe4>
 8000f20:	687b      	ldr	r3, [r7, #4]
 8000f22:	681b      	ldr	r3, [r3, #0]
 8000f24:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000f26:	683b      	ldr	r3, [r7, #0]
 8000f28:	685a      	ldr	r2, [r3, #4]
 8000f2a:	4613      	mov	r3, r2
 8000f2c:	009b      	lsls	r3, r3, #2
 8000f2e:	4413      	add	r3, r2
 8000f30:	3b41      	subs	r3, #65	; 0x41
 8000f32:	221f      	movs	r2, #31
 8000f34:	fa02 f303 	lsl.w	r3, r2, r3
 8000f38:	43db      	mvns	r3, r3
 8000f3a:	4019      	ands	r1, r3
 8000f3c:	683b      	ldr	r3, [r7, #0]
 8000f3e:	6818      	ldr	r0, [r3, #0]
 8000f40:	683b      	ldr	r3, [r7, #0]
 8000f42:	685a      	ldr	r2, [r3, #4]
 8000f44:	4613      	mov	r3, r2
 8000f46:	009b      	lsls	r3, r3, #2
 8000f48:	4413      	add	r3, r2
 8000f4a:	3b41      	subs	r3, #65	; 0x41
 8000f4c:	fa00 f203 	lsl.w	r2, r0, r3
 8000f50:	687b      	ldr	r3, [r7, #4]
 8000f52:	681b      	ldr	r3, [r3, #0]
 8000f54:	430a      	orrs	r2, r1
 8000f56:	62da      	str	r2, [r3, #44]	; 0x2c
 8000f58:	683b      	ldr	r3, [r7, #0]
 8000f5a:	681b      	ldr	r3, [r3, #0]
 8000f5c:	2b09      	cmp	r3, #9
 8000f5e:	d91c      	bls.n	8000f9a <HAL_ADC_ConfigChannel+0x126>
 8000f60:	687b      	ldr	r3, [r7, #4]
 8000f62:	681b      	ldr	r3, [r3, #0]
 8000f64:	68d9      	ldr	r1, [r3, #12]
 8000f66:	683b      	ldr	r3, [r7, #0]
 8000f68:	681a      	ldr	r2, [r3, #0]
 8000f6a:	4613      	mov	r3, r2
 8000f6c:	005b      	lsls	r3, r3, #1
 8000f6e:	4413      	add	r3, r2
 8000f70:	3b1e      	subs	r3, #30
 8000f72:	2207      	movs	r2, #7
 8000f74:	fa02 f303 	lsl.w	r3, r2, r3
 8000f78:	43db      	mvns	r3, r3
 8000f7a:	4019      	ands	r1, r3
 8000f7c:	683b      	ldr	r3, [r7, #0]
 8000f7e:	6898      	ldr	r0, [r3, #8]
 8000f80:	683b      	ldr	r3, [r7, #0]
 8000f82:	681a      	ldr	r2, [r3, #0]
 8000f84:	4613      	mov	r3, r2
 8000f86:	005b      	lsls	r3, r3, #1
 8000f88:	4413      	add	r3, r2
 8000f8a:	3b1e      	subs	r3, #30
 8000f8c:	fa00 f203 	lsl.w	r2, r0, r3
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	681b      	ldr	r3, [r3, #0]
 8000f94:	430a      	orrs	r2, r1
 8000f96:	60da      	str	r2, [r3, #12]
 8000f98:	e019      	b.n	8000fce <HAL_ADC_ConfigChannel+0x15a>
 8000f9a:	687b      	ldr	r3, [r7, #4]
 8000f9c:	681b      	ldr	r3, [r3, #0]
 8000f9e:	6919      	ldr	r1, [r3, #16]
 8000fa0:	683b      	ldr	r3, [r7, #0]
 8000fa2:	681a      	ldr	r2, [r3, #0]
 8000fa4:	4613      	mov	r3, r2
 8000fa6:	005b      	lsls	r3, r3, #1
 8000fa8:	4413      	add	r3, r2
 8000faa:	2207      	movs	r2, #7
 8000fac:	fa02 f303 	lsl.w	r3, r2, r3
 8000fb0:	43db      	mvns	r3, r3
 8000fb2:	4019      	ands	r1, r3
 8000fb4:	683b      	ldr	r3, [r7, #0]
 8000fb6:	6898      	ldr	r0, [r3, #8]
 8000fb8:	683b      	ldr	r3, [r7, #0]
 8000fba:	681a      	ldr	r2, [r3, #0]
 8000fbc:	4613      	mov	r3, r2
 8000fbe:	005b      	lsls	r3, r3, #1
 8000fc0:	4413      	add	r3, r2
 8000fc2:	fa00 f203 	lsl.w	r2, r0, r3
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	681b      	ldr	r3, [r3, #0]
 8000fca:	430a      	orrs	r2, r1
 8000fcc:	611a      	str	r2, [r3, #16]
 8000fce:	683b      	ldr	r3, [r7, #0]
 8000fd0:	681b      	ldr	r3, [r3, #0]
 8000fd2:	2b10      	cmp	r3, #16
 8000fd4:	d003      	beq.n	8000fde <HAL_ADC_ConfigChannel+0x16a>
 8000fd6:	683b      	ldr	r3, [r7, #0]
 8000fd8:	681b      	ldr	r3, [r3, #0]
 8000fda:	2b11      	cmp	r3, #17
 8000fdc:	d132      	bne.n	8001044 <HAL_ADC_ConfigChannel+0x1d0>
 8000fde:	687b      	ldr	r3, [r7, #4]
 8000fe0:	681b      	ldr	r3, [r3, #0]
 8000fe2:	4a1d      	ldr	r2, [pc, #116]	; (8001058 <HAL_ADC_ConfigChannel+0x1e4>)
 8000fe4:	4293      	cmp	r3, r2
 8000fe6:	d125      	bne.n	8001034 <HAL_ADC_ConfigChannel+0x1c0>
 8000fe8:	687b      	ldr	r3, [r7, #4]
 8000fea:	681b      	ldr	r3, [r3, #0]
 8000fec:	689b      	ldr	r3, [r3, #8]
 8000fee:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8000ff2:	2b00      	cmp	r3, #0
 8000ff4:	d126      	bne.n	8001044 <HAL_ADC_ConfigChannel+0x1d0>
 8000ff6:	687b      	ldr	r3, [r7, #4]
 8000ff8:	681b      	ldr	r3, [r3, #0]
 8000ffa:	689a      	ldr	r2, [r3, #8]
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	681b      	ldr	r3, [r3, #0]
 8001000:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001004:	609a      	str	r2, [r3, #8]
 8001006:	683b      	ldr	r3, [r7, #0]
 8001008:	681b      	ldr	r3, [r3, #0]
 800100a:	2b10      	cmp	r3, #16
 800100c:	d11a      	bne.n	8001044 <HAL_ADC_ConfigChannel+0x1d0>
 800100e:	4b13      	ldr	r3, [pc, #76]	; (800105c <HAL_ADC_ConfigChannel+0x1e8>)
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	4a13      	ldr	r2, [pc, #76]	; (8001060 <HAL_ADC_ConfigChannel+0x1ec>)
 8001014:	fba2 2303 	umull	r2, r3, r2, r3
 8001018:	0c9a      	lsrs	r2, r3, #18
 800101a:	4613      	mov	r3, r2
 800101c:	009b      	lsls	r3, r3, #2
 800101e:	4413      	add	r3, r2
 8001020:	005b      	lsls	r3, r3, #1
 8001022:	60bb      	str	r3, [r7, #8]
 8001024:	e002      	b.n	800102c <HAL_ADC_ConfigChannel+0x1b8>
 8001026:	68bb      	ldr	r3, [r7, #8]
 8001028:	3b01      	subs	r3, #1
 800102a:	60bb      	str	r3, [r7, #8]
 800102c:	68bb      	ldr	r3, [r7, #8]
 800102e:	2b00      	cmp	r3, #0
 8001030:	d1f9      	bne.n	8001026 <HAL_ADC_ConfigChannel+0x1b2>
 8001032:	e007      	b.n	8001044 <HAL_ADC_ConfigChannel+0x1d0>
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001038:	f043 0220 	orr.w	r2, r3, #32
 800103c:	687b      	ldr	r3, [r7, #4]
 800103e:	629a      	str	r2, [r3, #40]	; 0x28
 8001040:	2301      	movs	r3, #1
 8001042:	73fb      	strb	r3, [r7, #15]
 8001044:	687b      	ldr	r3, [r7, #4]
 8001046:	2200      	movs	r2, #0
 8001048:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800104c:	7bfb      	ldrb	r3, [r7, #15]
 800104e:	4618      	mov	r0, r3
 8001050:	3714      	adds	r7, #20
 8001052:	46bd      	mov	sp, r7
 8001054:	bc80      	pop	{r7}
 8001056:	4770      	bx	lr
 8001058:	40012400 	.word	0x40012400
 800105c:	20000000 	.word	0x20000000
 8001060:	431bde83 	.word	0x431bde83

08001064 <ADC_ConversionStop_Disable>:
 8001064:	b580      	push	{r7, lr}
 8001066:	b084      	sub	sp, #16
 8001068:	af00      	add	r7, sp, #0
 800106a:	6078      	str	r0, [r7, #4]
 800106c:	2300      	movs	r3, #0
 800106e:	60fb      	str	r3, [r7, #12]
 8001070:	687b      	ldr	r3, [r7, #4]
 8001072:	681b      	ldr	r3, [r3, #0]
 8001074:	689b      	ldr	r3, [r3, #8]
 8001076:	f003 0301 	and.w	r3, r3, #1
 800107a:	2b01      	cmp	r3, #1
 800107c:	d12e      	bne.n	80010dc <ADC_ConversionStop_Disable+0x78>
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	681b      	ldr	r3, [r3, #0]
 8001082:	689a      	ldr	r2, [r3, #8]
 8001084:	687b      	ldr	r3, [r7, #4]
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	f022 0201 	bic.w	r2, r2, #1
 800108c:	609a      	str	r2, [r3, #8]
 800108e:	f7ff fe0f 	bl	8000cb0 <HAL_GetTick>
 8001092:	60f8      	str	r0, [r7, #12]
 8001094:	e01b      	b.n	80010ce <ADC_ConversionStop_Disable+0x6a>
 8001096:	f7ff fe0b 	bl	8000cb0 <HAL_GetTick>
 800109a:	4602      	mov	r2, r0
 800109c:	68fb      	ldr	r3, [r7, #12]
 800109e:	1ad3      	subs	r3, r2, r3
 80010a0:	2b02      	cmp	r3, #2
 80010a2:	d914      	bls.n	80010ce <ADC_ConversionStop_Disable+0x6a>
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	681b      	ldr	r3, [r3, #0]
 80010a8:	689b      	ldr	r3, [r3, #8]
 80010aa:	f003 0301 	and.w	r3, r3, #1
 80010ae:	2b01      	cmp	r3, #1
 80010b0:	d10d      	bne.n	80010ce <ADC_ConversionStop_Disable+0x6a>
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80010b6:	f043 0210 	orr.w	r2, r3, #16
 80010ba:	687b      	ldr	r3, [r7, #4]
 80010bc:	629a      	str	r2, [r3, #40]	; 0x28
 80010be:	687b      	ldr	r3, [r7, #4]
 80010c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80010c2:	f043 0201 	orr.w	r2, r3, #1
 80010c6:	687b      	ldr	r3, [r7, #4]
 80010c8:	62da      	str	r2, [r3, #44]	; 0x2c
 80010ca:	2301      	movs	r3, #1
 80010cc:	e007      	b.n	80010de <ADC_ConversionStop_Disable+0x7a>
 80010ce:	687b      	ldr	r3, [r7, #4]
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	689b      	ldr	r3, [r3, #8]
 80010d4:	f003 0301 	and.w	r3, r3, #1
 80010d8:	2b01      	cmp	r3, #1
 80010da:	d0dc      	beq.n	8001096 <ADC_ConversionStop_Disable+0x32>
 80010dc:	2300      	movs	r3, #0
 80010de:	4618      	mov	r0, r3
 80010e0:	3710      	adds	r7, #16
 80010e2:	46bd      	mov	sp, r7
 80010e4:	bd80      	pop	{r7, pc}
	...

080010e8 <__NVIC_SetPriorityGrouping>:
 80010e8:	b480      	push	{r7}
 80010ea:	b085      	sub	sp, #20
 80010ec:	af00      	add	r7, sp, #0
 80010ee:	6078      	str	r0, [r7, #4]
 80010f0:	687b      	ldr	r3, [r7, #4]
 80010f2:	f003 0307 	and.w	r3, r3, #7
 80010f6:	60fb      	str	r3, [r7, #12]
 80010f8:	4b0c      	ldr	r3, [pc, #48]	; (800112c <__NVIC_SetPriorityGrouping+0x44>)
 80010fa:	68db      	ldr	r3, [r3, #12]
 80010fc:	60bb      	str	r3, [r7, #8]
 80010fe:	68ba      	ldr	r2, [r7, #8]
 8001100:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001104:	4013      	ands	r3, r2
 8001106:	60bb      	str	r3, [r7, #8]
 8001108:	68fb      	ldr	r3, [r7, #12]
 800110a:	021a      	lsls	r2, r3, #8
 800110c:	68bb      	ldr	r3, [r7, #8]
 800110e:	4313      	orrs	r3, r2
 8001110:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001114:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001118:	60bb      	str	r3, [r7, #8]
 800111a:	4a04      	ldr	r2, [pc, #16]	; (800112c <__NVIC_SetPriorityGrouping+0x44>)
 800111c:	68bb      	ldr	r3, [r7, #8]
 800111e:	60d3      	str	r3, [r2, #12]
 8001120:	bf00      	nop
 8001122:	3714      	adds	r7, #20
 8001124:	46bd      	mov	sp, r7
 8001126:	bc80      	pop	{r7}
 8001128:	4770      	bx	lr
 800112a:	bf00      	nop
 800112c:	e000ed00 	.word	0xe000ed00

08001130 <__NVIC_GetPriorityGrouping>:
 8001130:	b480      	push	{r7}
 8001132:	af00      	add	r7, sp, #0
 8001134:	4b04      	ldr	r3, [pc, #16]	; (8001148 <__NVIC_GetPriorityGrouping+0x18>)
 8001136:	68db      	ldr	r3, [r3, #12]
 8001138:	0a1b      	lsrs	r3, r3, #8
 800113a:	f003 0307 	and.w	r3, r3, #7
 800113e:	4618      	mov	r0, r3
 8001140:	46bd      	mov	sp, r7
 8001142:	bc80      	pop	{r7}
 8001144:	4770      	bx	lr
 8001146:	bf00      	nop
 8001148:	e000ed00 	.word	0xe000ed00

0800114c <__NVIC_SetPriority>:
 800114c:	b480      	push	{r7}
 800114e:	b083      	sub	sp, #12
 8001150:	af00      	add	r7, sp, #0
 8001152:	4603      	mov	r3, r0
 8001154:	6039      	str	r1, [r7, #0]
 8001156:	71fb      	strb	r3, [r7, #7]
 8001158:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800115c:	2b00      	cmp	r3, #0
 800115e:	db0a      	blt.n	8001176 <__NVIC_SetPriority+0x2a>
 8001160:	683b      	ldr	r3, [r7, #0]
 8001162:	b2da      	uxtb	r2, r3
 8001164:	490c      	ldr	r1, [pc, #48]	; (8001198 <__NVIC_SetPriority+0x4c>)
 8001166:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800116a:	0112      	lsls	r2, r2, #4
 800116c:	b2d2      	uxtb	r2, r2
 800116e:	440b      	add	r3, r1
 8001170:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001174:	e00a      	b.n	800118c <__NVIC_SetPriority+0x40>
 8001176:	683b      	ldr	r3, [r7, #0]
 8001178:	b2da      	uxtb	r2, r3
 800117a:	4908      	ldr	r1, [pc, #32]	; (800119c <__NVIC_SetPriority+0x50>)
 800117c:	79fb      	ldrb	r3, [r7, #7]
 800117e:	f003 030f 	and.w	r3, r3, #15
 8001182:	3b04      	subs	r3, #4
 8001184:	0112      	lsls	r2, r2, #4
 8001186:	b2d2      	uxtb	r2, r2
 8001188:	440b      	add	r3, r1
 800118a:	761a      	strb	r2, [r3, #24]
 800118c:	bf00      	nop
 800118e:	370c      	adds	r7, #12
 8001190:	46bd      	mov	sp, r7
 8001192:	bc80      	pop	{r7}
 8001194:	4770      	bx	lr
 8001196:	bf00      	nop
 8001198:	e000e100 	.word	0xe000e100
 800119c:	e000ed00 	.word	0xe000ed00

080011a0 <NVIC_EncodePriority>:
 80011a0:	b480      	push	{r7}
 80011a2:	b089      	sub	sp, #36	; 0x24
 80011a4:	af00      	add	r7, sp, #0
 80011a6:	60f8      	str	r0, [r7, #12]
 80011a8:	60b9      	str	r1, [r7, #8]
 80011aa:	607a      	str	r2, [r7, #4]
 80011ac:	68fb      	ldr	r3, [r7, #12]
 80011ae:	f003 0307 	and.w	r3, r3, #7
 80011b2:	61fb      	str	r3, [r7, #28]
 80011b4:	69fb      	ldr	r3, [r7, #28]
 80011b6:	f1c3 0307 	rsb	r3, r3, #7
 80011ba:	2b04      	cmp	r3, #4
 80011bc:	bf28      	it	cs
 80011be:	2304      	movcs	r3, #4
 80011c0:	61bb      	str	r3, [r7, #24]
 80011c2:	69fb      	ldr	r3, [r7, #28]
 80011c4:	3304      	adds	r3, #4
 80011c6:	2b06      	cmp	r3, #6
 80011c8:	d902      	bls.n	80011d0 <NVIC_EncodePriority+0x30>
 80011ca:	69fb      	ldr	r3, [r7, #28]
 80011cc:	3b03      	subs	r3, #3
 80011ce:	e000      	b.n	80011d2 <NVIC_EncodePriority+0x32>
 80011d0:	2300      	movs	r3, #0
 80011d2:	617b      	str	r3, [r7, #20]
 80011d4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80011d8:	69bb      	ldr	r3, [r7, #24]
 80011da:	fa02 f303 	lsl.w	r3, r2, r3
 80011de:	43da      	mvns	r2, r3
 80011e0:	68bb      	ldr	r3, [r7, #8]
 80011e2:	401a      	ands	r2, r3
 80011e4:	697b      	ldr	r3, [r7, #20]
 80011e6:	409a      	lsls	r2, r3
 80011e8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80011ec:	697b      	ldr	r3, [r7, #20]
 80011ee:	fa01 f303 	lsl.w	r3, r1, r3
 80011f2:	43d9      	mvns	r1, r3
 80011f4:	687b      	ldr	r3, [r7, #4]
 80011f6:	400b      	ands	r3, r1
 80011f8:	4313      	orrs	r3, r2
 80011fa:	4618      	mov	r0, r3
 80011fc:	3724      	adds	r7, #36	; 0x24
 80011fe:	46bd      	mov	sp, r7
 8001200:	bc80      	pop	{r7}
 8001202:	4770      	bx	lr

08001204 <SysTick_Config>:
 8001204:	b580      	push	{r7, lr}
 8001206:	b082      	sub	sp, #8
 8001208:	af00      	add	r7, sp, #0
 800120a:	6078      	str	r0, [r7, #4]
 800120c:	687b      	ldr	r3, [r7, #4]
 800120e:	3b01      	subs	r3, #1
 8001210:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001214:	d301      	bcc.n	800121a <SysTick_Config+0x16>
 8001216:	2301      	movs	r3, #1
 8001218:	e00f      	b.n	800123a <SysTick_Config+0x36>
 800121a:	4a0a      	ldr	r2, [pc, #40]	; (8001244 <SysTick_Config+0x40>)
 800121c:	687b      	ldr	r3, [r7, #4]
 800121e:	3b01      	subs	r3, #1
 8001220:	6053      	str	r3, [r2, #4]
 8001222:	210f      	movs	r1, #15
 8001224:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001228:	f7ff ff90 	bl	800114c <__NVIC_SetPriority>
 800122c:	4b05      	ldr	r3, [pc, #20]	; (8001244 <SysTick_Config+0x40>)
 800122e:	2200      	movs	r2, #0
 8001230:	609a      	str	r2, [r3, #8]
 8001232:	4b04      	ldr	r3, [pc, #16]	; (8001244 <SysTick_Config+0x40>)
 8001234:	2207      	movs	r2, #7
 8001236:	601a      	str	r2, [r3, #0]
 8001238:	2300      	movs	r3, #0
 800123a:	4618      	mov	r0, r3
 800123c:	3708      	adds	r7, #8
 800123e:	46bd      	mov	sp, r7
 8001240:	bd80      	pop	{r7, pc}
 8001242:	bf00      	nop
 8001244:	e000e010 	.word	0xe000e010

08001248 <HAL_NVIC_SetPriorityGrouping>:
 8001248:	b580      	push	{r7, lr}
 800124a:	b082      	sub	sp, #8
 800124c:	af00      	add	r7, sp, #0
 800124e:	6078      	str	r0, [r7, #4]
 8001250:	6878      	ldr	r0, [r7, #4]
 8001252:	f7ff ff49 	bl	80010e8 <__NVIC_SetPriorityGrouping>
 8001256:	bf00      	nop
 8001258:	3708      	adds	r7, #8
 800125a:	46bd      	mov	sp, r7
 800125c:	bd80      	pop	{r7, pc}

0800125e <HAL_NVIC_SetPriority>:
 800125e:	b580      	push	{r7, lr}
 8001260:	b086      	sub	sp, #24
 8001262:	af00      	add	r7, sp, #0
 8001264:	4603      	mov	r3, r0
 8001266:	60b9      	str	r1, [r7, #8]
 8001268:	607a      	str	r2, [r7, #4]
 800126a:	73fb      	strb	r3, [r7, #15]
 800126c:	2300      	movs	r3, #0
 800126e:	617b      	str	r3, [r7, #20]
 8001270:	f7ff ff5e 	bl	8001130 <__NVIC_GetPriorityGrouping>
 8001274:	6178      	str	r0, [r7, #20]
 8001276:	687a      	ldr	r2, [r7, #4]
 8001278:	68b9      	ldr	r1, [r7, #8]
 800127a:	6978      	ldr	r0, [r7, #20]
 800127c:	f7ff ff90 	bl	80011a0 <NVIC_EncodePriority>
 8001280:	4602      	mov	r2, r0
 8001282:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001286:	4611      	mov	r1, r2
 8001288:	4618      	mov	r0, r3
 800128a:	f7ff ff5f 	bl	800114c <__NVIC_SetPriority>
 800128e:	bf00      	nop
 8001290:	3718      	adds	r7, #24
 8001292:	46bd      	mov	sp, r7
 8001294:	bd80      	pop	{r7, pc}

08001296 <HAL_SYSTICK_Config>:
 8001296:	b580      	push	{r7, lr}
 8001298:	b082      	sub	sp, #8
 800129a:	af00      	add	r7, sp, #0
 800129c:	6078      	str	r0, [r7, #4]
 800129e:	6878      	ldr	r0, [r7, #4]
 80012a0:	f7ff ffb0 	bl	8001204 <SysTick_Config>
 80012a4:	4603      	mov	r3, r0
 80012a6:	4618      	mov	r0, r3
 80012a8:	3708      	adds	r7, #8
 80012aa:	46bd      	mov	sp, r7
 80012ac:	bd80      	pop	{r7, pc}
	...

080012b0 <HAL_GPIO_Init>:
 80012b0:	b480      	push	{r7}
 80012b2:	b08b      	sub	sp, #44	; 0x2c
 80012b4:	af00      	add	r7, sp, #0
 80012b6:	6078      	str	r0, [r7, #4]
 80012b8:	6039      	str	r1, [r7, #0]
 80012ba:	2300      	movs	r3, #0
 80012bc:	627b      	str	r3, [r7, #36]	; 0x24
 80012be:	2300      	movs	r3, #0
 80012c0:	623b      	str	r3, [r7, #32]
 80012c2:	e169      	b.n	8001598 <HAL_GPIO_Init+0x2e8>
 80012c4:	2201      	movs	r2, #1
 80012c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80012c8:	fa02 f303 	lsl.w	r3, r2, r3
 80012cc:	61fb      	str	r3, [r7, #28]
 80012ce:	683b      	ldr	r3, [r7, #0]
 80012d0:	681b      	ldr	r3, [r3, #0]
 80012d2:	69fa      	ldr	r2, [r7, #28]
 80012d4:	4013      	ands	r3, r2
 80012d6:	61bb      	str	r3, [r7, #24]
 80012d8:	69ba      	ldr	r2, [r7, #24]
 80012da:	69fb      	ldr	r3, [r7, #28]
 80012dc:	429a      	cmp	r2, r3
 80012de:	f040 8158 	bne.w	8001592 <HAL_GPIO_Init+0x2e2>
 80012e2:	683b      	ldr	r3, [r7, #0]
 80012e4:	685b      	ldr	r3, [r3, #4]
 80012e6:	4a9a      	ldr	r2, [pc, #616]	; (8001550 <HAL_GPIO_Init+0x2a0>)
 80012e8:	4293      	cmp	r3, r2
 80012ea:	d05e      	beq.n	80013aa <HAL_GPIO_Init+0xfa>
 80012ec:	4a98      	ldr	r2, [pc, #608]	; (8001550 <HAL_GPIO_Init+0x2a0>)
 80012ee:	4293      	cmp	r3, r2
 80012f0:	d875      	bhi.n	80013de <HAL_GPIO_Init+0x12e>
 80012f2:	4a98      	ldr	r2, [pc, #608]	; (8001554 <HAL_GPIO_Init+0x2a4>)
 80012f4:	4293      	cmp	r3, r2
 80012f6:	d058      	beq.n	80013aa <HAL_GPIO_Init+0xfa>
 80012f8:	4a96      	ldr	r2, [pc, #600]	; (8001554 <HAL_GPIO_Init+0x2a4>)
 80012fa:	4293      	cmp	r3, r2
 80012fc:	d86f      	bhi.n	80013de <HAL_GPIO_Init+0x12e>
 80012fe:	4a96      	ldr	r2, [pc, #600]	; (8001558 <HAL_GPIO_Init+0x2a8>)
 8001300:	4293      	cmp	r3, r2
 8001302:	d052      	beq.n	80013aa <HAL_GPIO_Init+0xfa>
 8001304:	4a94      	ldr	r2, [pc, #592]	; (8001558 <HAL_GPIO_Init+0x2a8>)
 8001306:	4293      	cmp	r3, r2
 8001308:	d869      	bhi.n	80013de <HAL_GPIO_Init+0x12e>
 800130a:	4a94      	ldr	r2, [pc, #592]	; (800155c <HAL_GPIO_Init+0x2ac>)
 800130c:	4293      	cmp	r3, r2
 800130e:	d04c      	beq.n	80013aa <HAL_GPIO_Init+0xfa>
 8001310:	4a92      	ldr	r2, [pc, #584]	; (800155c <HAL_GPIO_Init+0x2ac>)
 8001312:	4293      	cmp	r3, r2
 8001314:	d863      	bhi.n	80013de <HAL_GPIO_Init+0x12e>
 8001316:	4a92      	ldr	r2, [pc, #584]	; (8001560 <HAL_GPIO_Init+0x2b0>)
 8001318:	4293      	cmp	r3, r2
 800131a:	d046      	beq.n	80013aa <HAL_GPIO_Init+0xfa>
 800131c:	4a90      	ldr	r2, [pc, #576]	; (8001560 <HAL_GPIO_Init+0x2b0>)
 800131e:	4293      	cmp	r3, r2
 8001320:	d85d      	bhi.n	80013de <HAL_GPIO_Init+0x12e>
 8001322:	2b12      	cmp	r3, #18
 8001324:	d82a      	bhi.n	800137c <HAL_GPIO_Init+0xcc>
 8001326:	2b12      	cmp	r3, #18
 8001328:	d859      	bhi.n	80013de <HAL_GPIO_Init+0x12e>
 800132a:	a201      	add	r2, pc, #4	; (adr r2, 8001330 <HAL_GPIO_Init+0x80>)
 800132c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001330:	080013ab 	.word	0x080013ab
 8001334:	08001385 	.word	0x08001385
 8001338:	08001397 	.word	0x08001397
 800133c:	080013d9 	.word	0x080013d9
 8001340:	080013df 	.word	0x080013df
 8001344:	080013df 	.word	0x080013df
 8001348:	080013df 	.word	0x080013df
 800134c:	080013df 	.word	0x080013df
 8001350:	080013df 	.word	0x080013df
 8001354:	080013df 	.word	0x080013df
 8001358:	080013df 	.word	0x080013df
 800135c:	080013df 	.word	0x080013df
 8001360:	080013df 	.word	0x080013df
 8001364:	080013df 	.word	0x080013df
 8001368:	080013df 	.word	0x080013df
 800136c:	080013df 	.word	0x080013df
 8001370:	080013df 	.word	0x080013df
 8001374:	0800138d 	.word	0x0800138d
 8001378:	080013a1 	.word	0x080013a1
 800137c:	4a79      	ldr	r2, [pc, #484]	; (8001564 <HAL_GPIO_Init+0x2b4>)
 800137e:	4293      	cmp	r3, r2
 8001380:	d013      	beq.n	80013aa <HAL_GPIO_Init+0xfa>
 8001382:	e02c      	b.n	80013de <HAL_GPIO_Init+0x12e>
 8001384:	683b      	ldr	r3, [r7, #0]
 8001386:	68db      	ldr	r3, [r3, #12]
 8001388:	623b      	str	r3, [r7, #32]
 800138a:	e029      	b.n	80013e0 <HAL_GPIO_Init+0x130>
 800138c:	683b      	ldr	r3, [r7, #0]
 800138e:	68db      	ldr	r3, [r3, #12]
 8001390:	3304      	adds	r3, #4
 8001392:	623b      	str	r3, [r7, #32]
 8001394:	e024      	b.n	80013e0 <HAL_GPIO_Init+0x130>
 8001396:	683b      	ldr	r3, [r7, #0]
 8001398:	68db      	ldr	r3, [r3, #12]
 800139a:	3308      	adds	r3, #8
 800139c:	623b      	str	r3, [r7, #32]
 800139e:	e01f      	b.n	80013e0 <HAL_GPIO_Init+0x130>
 80013a0:	683b      	ldr	r3, [r7, #0]
 80013a2:	68db      	ldr	r3, [r3, #12]
 80013a4:	330c      	adds	r3, #12
 80013a6:	623b      	str	r3, [r7, #32]
 80013a8:	e01a      	b.n	80013e0 <HAL_GPIO_Init+0x130>
 80013aa:	683b      	ldr	r3, [r7, #0]
 80013ac:	689b      	ldr	r3, [r3, #8]
 80013ae:	2b00      	cmp	r3, #0
 80013b0:	d102      	bne.n	80013b8 <HAL_GPIO_Init+0x108>
 80013b2:	2304      	movs	r3, #4
 80013b4:	623b      	str	r3, [r7, #32]
 80013b6:	e013      	b.n	80013e0 <HAL_GPIO_Init+0x130>
 80013b8:	683b      	ldr	r3, [r7, #0]
 80013ba:	689b      	ldr	r3, [r3, #8]
 80013bc:	2b01      	cmp	r3, #1
 80013be:	d105      	bne.n	80013cc <HAL_GPIO_Init+0x11c>
 80013c0:	2308      	movs	r3, #8
 80013c2:	623b      	str	r3, [r7, #32]
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	69fa      	ldr	r2, [r7, #28]
 80013c8:	611a      	str	r2, [r3, #16]
 80013ca:	e009      	b.n	80013e0 <HAL_GPIO_Init+0x130>
 80013cc:	2308      	movs	r3, #8
 80013ce:	623b      	str	r3, [r7, #32]
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	69fa      	ldr	r2, [r7, #28]
 80013d4:	615a      	str	r2, [r3, #20]
 80013d6:	e003      	b.n	80013e0 <HAL_GPIO_Init+0x130>
 80013d8:	2300      	movs	r3, #0
 80013da:	623b      	str	r3, [r7, #32]
 80013dc:	e000      	b.n	80013e0 <HAL_GPIO_Init+0x130>
 80013de:	bf00      	nop
 80013e0:	69bb      	ldr	r3, [r7, #24]
 80013e2:	2bff      	cmp	r3, #255	; 0xff
 80013e4:	d801      	bhi.n	80013ea <HAL_GPIO_Init+0x13a>
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	e001      	b.n	80013ee <HAL_GPIO_Init+0x13e>
 80013ea:	687b      	ldr	r3, [r7, #4]
 80013ec:	3304      	adds	r3, #4
 80013ee:	617b      	str	r3, [r7, #20]
 80013f0:	69bb      	ldr	r3, [r7, #24]
 80013f2:	2bff      	cmp	r3, #255	; 0xff
 80013f4:	d802      	bhi.n	80013fc <HAL_GPIO_Init+0x14c>
 80013f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013f8:	009b      	lsls	r3, r3, #2
 80013fa:	e002      	b.n	8001402 <HAL_GPIO_Init+0x152>
 80013fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013fe:	3b08      	subs	r3, #8
 8001400:	009b      	lsls	r3, r3, #2
 8001402:	613b      	str	r3, [r7, #16]
 8001404:	697b      	ldr	r3, [r7, #20]
 8001406:	681a      	ldr	r2, [r3, #0]
 8001408:	210f      	movs	r1, #15
 800140a:	693b      	ldr	r3, [r7, #16]
 800140c:	fa01 f303 	lsl.w	r3, r1, r3
 8001410:	43db      	mvns	r3, r3
 8001412:	401a      	ands	r2, r3
 8001414:	6a39      	ldr	r1, [r7, #32]
 8001416:	693b      	ldr	r3, [r7, #16]
 8001418:	fa01 f303 	lsl.w	r3, r1, r3
 800141c:	431a      	orrs	r2, r3
 800141e:	697b      	ldr	r3, [r7, #20]
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	683b      	ldr	r3, [r7, #0]
 8001424:	685b      	ldr	r3, [r3, #4]
 8001426:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800142a:	2b00      	cmp	r3, #0
 800142c:	f000 80b1 	beq.w	8001592 <HAL_GPIO_Init+0x2e2>
 8001430:	4b4d      	ldr	r3, [pc, #308]	; (8001568 <HAL_GPIO_Init+0x2b8>)
 8001432:	699b      	ldr	r3, [r3, #24]
 8001434:	4a4c      	ldr	r2, [pc, #304]	; (8001568 <HAL_GPIO_Init+0x2b8>)
 8001436:	f043 0301 	orr.w	r3, r3, #1
 800143a:	6193      	str	r3, [r2, #24]
 800143c:	4b4a      	ldr	r3, [pc, #296]	; (8001568 <HAL_GPIO_Init+0x2b8>)
 800143e:	699b      	ldr	r3, [r3, #24]
 8001440:	f003 0301 	and.w	r3, r3, #1
 8001444:	60bb      	str	r3, [r7, #8]
 8001446:	68bb      	ldr	r3, [r7, #8]
 8001448:	4a48      	ldr	r2, [pc, #288]	; (800156c <HAL_GPIO_Init+0x2bc>)
 800144a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800144c:	089b      	lsrs	r3, r3, #2
 800144e:	3302      	adds	r3, #2
 8001450:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001454:	60fb      	str	r3, [r7, #12]
 8001456:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001458:	f003 0303 	and.w	r3, r3, #3
 800145c:	009b      	lsls	r3, r3, #2
 800145e:	220f      	movs	r2, #15
 8001460:	fa02 f303 	lsl.w	r3, r2, r3
 8001464:	43db      	mvns	r3, r3
 8001466:	68fa      	ldr	r2, [r7, #12]
 8001468:	4013      	ands	r3, r2
 800146a:	60fb      	str	r3, [r7, #12]
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	4a40      	ldr	r2, [pc, #256]	; (8001570 <HAL_GPIO_Init+0x2c0>)
 8001470:	4293      	cmp	r3, r2
 8001472:	d013      	beq.n	800149c <HAL_GPIO_Init+0x1ec>
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	4a3f      	ldr	r2, [pc, #252]	; (8001574 <HAL_GPIO_Init+0x2c4>)
 8001478:	4293      	cmp	r3, r2
 800147a:	d00d      	beq.n	8001498 <HAL_GPIO_Init+0x1e8>
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	4a3e      	ldr	r2, [pc, #248]	; (8001578 <HAL_GPIO_Init+0x2c8>)
 8001480:	4293      	cmp	r3, r2
 8001482:	d007      	beq.n	8001494 <HAL_GPIO_Init+0x1e4>
 8001484:	687b      	ldr	r3, [r7, #4]
 8001486:	4a3d      	ldr	r2, [pc, #244]	; (800157c <HAL_GPIO_Init+0x2cc>)
 8001488:	4293      	cmp	r3, r2
 800148a:	d101      	bne.n	8001490 <HAL_GPIO_Init+0x1e0>
 800148c:	2303      	movs	r3, #3
 800148e:	e006      	b.n	800149e <HAL_GPIO_Init+0x1ee>
 8001490:	2304      	movs	r3, #4
 8001492:	e004      	b.n	800149e <HAL_GPIO_Init+0x1ee>
 8001494:	2302      	movs	r3, #2
 8001496:	e002      	b.n	800149e <HAL_GPIO_Init+0x1ee>
 8001498:	2301      	movs	r3, #1
 800149a:	e000      	b.n	800149e <HAL_GPIO_Init+0x1ee>
 800149c:	2300      	movs	r3, #0
 800149e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80014a0:	f002 0203 	and.w	r2, r2, #3
 80014a4:	0092      	lsls	r2, r2, #2
 80014a6:	4093      	lsls	r3, r2
 80014a8:	68fa      	ldr	r2, [r7, #12]
 80014aa:	4313      	orrs	r3, r2
 80014ac:	60fb      	str	r3, [r7, #12]
 80014ae:	492f      	ldr	r1, [pc, #188]	; (800156c <HAL_GPIO_Init+0x2bc>)
 80014b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014b2:	089b      	lsrs	r3, r3, #2
 80014b4:	3302      	adds	r3, #2
 80014b6:	68fa      	ldr	r2, [r7, #12]
 80014b8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80014bc:	683b      	ldr	r3, [r7, #0]
 80014be:	685b      	ldr	r3, [r3, #4]
 80014c0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	d006      	beq.n	80014d6 <HAL_GPIO_Init+0x226>
 80014c8:	4b2d      	ldr	r3, [pc, #180]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 80014ca:	681a      	ldr	r2, [r3, #0]
 80014cc:	492c      	ldr	r1, [pc, #176]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 80014ce:	69bb      	ldr	r3, [r7, #24]
 80014d0:	4313      	orrs	r3, r2
 80014d2:	600b      	str	r3, [r1, #0]
 80014d4:	e006      	b.n	80014e4 <HAL_GPIO_Init+0x234>
 80014d6:	4b2a      	ldr	r3, [pc, #168]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 80014d8:	681a      	ldr	r2, [r3, #0]
 80014da:	69bb      	ldr	r3, [r7, #24]
 80014dc:	43db      	mvns	r3, r3
 80014de:	4928      	ldr	r1, [pc, #160]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 80014e0:	4013      	ands	r3, r2
 80014e2:	600b      	str	r3, [r1, #0]
 80014e4:	683b      	ldr	r3, [r7, #0]
 80014e6:	685b      	ldr	r3, [r3, #4]
 80014e8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d006      	beq.n	80014fe <HAL_GPIO_Init+0x24e>
 80014f0:	4b23      	ldr	r3, [pc, #140]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 80014f2:	685a      	ldr	r2, [r3, #4]
 80014f4:	4922      	ldr	r1, [pc, #136]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 80014f6:	69bb      	ldr	r3, [r7, #24]
 80014f8:	4313      	orrs	r3, r2
 80014fa:	604b      	str	r3, [r1, #4]
 80014fc:	e006      	b.n	800150c <HAL_GPIO_Init+0x25c>
 80014fe:	4b20      	ldr	r3, [pc, #128]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 8001500:	685a      	ldr	r2, [r3, #4]
 8001502:	69bb      	ldr	r3, [r7, #24]
 8001504:	43db      	mvns	r3, r3
 8001506:	491e      	ldr	r1, [pc, #120]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 8001508:	4013      	ands	r3, r2
 800150a:	604b      	str	r3, [r1, #4]
 800150c:	683b      	ldr	r3, [r7, #0]
 800150e:	685b      	ldr	r3, [r3, #4]
 8001510:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001514:	2b00      	cmp	r3, #0
 8001516:	d006      	beq.n	8001526 <HAL_GPIO_Init+0x276>
 8001518:	4b19      	ldr	r3, [pc, #100]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 800151a:	689a      	ldr	r2, [r3, #8]
 800151c:	4918      	ldr	r1, [pc, #96]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 800151e:	69bb      	ldr	r3, [r7, #24]
 8001520:	4313      	orrs	r3, r2
 8001522:	608b      	str	r3, [r1, #8]
 8001524:	e006      	b.n	8001534 <HAL_GPIO_Init+0x284>
 8001526:	4b16      	ldr	r3, [pc, #88]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 8001528:	689a      	ldr	r2, [r3, #8]
 800152a:	69bb      	ldr	r3, [r7, #24]
 800152c:	43db      	mvns	r3, r3
 800152e:	4914      	ldr	r1, [pc, #80]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 8001530:	4013      	ands	r3, r2
 8001532:	608b      	str	r3, [r1, #8]
 8001534:	683b      	ldr	r3, [r7, #0]
 8001536:	685b      	ldr	r3, [r3, #4]
 8001538:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800153c:	2b00      	cmp	r3, #0
 800153e:	d021      	beq.n	8001584 <HAL_GPIO_Init+0x2d4>
 8001540:	4b0f      	ldr	r3, [pc, #60]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 8001542:	68da      	ldr	r2, [r3, #12]
 8001544:	490e      	ldr	r1, [pc, #56]	; (8001580 <HAL_GPIO_Init+0x2d0>)
 8001546:	69bb      	ldr	r3, [r7, #24]
 8001548:	4313      	orrs	r3, r2
 800154a:	60cb      	str	r3, [r1, #12]
 800154c:	e021      	b.n	8001592 <HAL_GPIO_Init+0x2e2>
 800154e:	bf00      	nop
 8001550:	10320000 	.word	0x10320000
 8001554:	10310000 	.word	0x10310000
 8001558:	10220000 	.word	0x10220000
 800155c:	10210000 	.word	0x10210000
 8001560:	10120000 	.word	0x10120000
 8001564:	10110000 	.word	0x10110000
 8001568:	40021000 	.word	0x40021000
 800156c:	40010000 	.word	0x40010000
 8001570:	40010800 	.word	0x40010800
 8001574:	40010c00 	.word	0x40010c00
 8001578:	40011000 	.word	0x40011000
 800157c:	40011400 	.word	0x40011400
 8001580:	40010400 	.word	0x40010400
 8001584:	4b0b      	ldr	r3, [pc, #44]	; (80015b4 <HAL_GPIO_Init+0x304>)
 8001586:	68da      	ldr	r2, [r3, #12]
 8001588:	69bb      	ldr	r3, [r7, #24]
 800158a:	43db      	mvns	r3, r3
 800158c:	4909      	ldr	r1, [pc, #36]	; (80015b4 <HAL_GPIO_Init+0x304>)
 800158e:	4013      	ands	r3, r2
 8001590:	60cb      	str	r3, [r1, #12]
 8001592:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001594:	3301      	adds	r3, #1
 8001596:	627b      	str	r3, [r7, #36]	; 0x24
 8001598:	683b      	ldr	r3, [r7, #0]
 800159a:	681a      	ldr	r2, [r3, #0]
 800159c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800159e:	fa22 f303 	lsr.w	r3, r2, r3
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	f47f ae8e 	bne.w	80012c4 <HAL_GPIO_Init+0x14>
 80015a8:	bf00      	nop
 80015aa:	bf00      	nop
 80015ac:	372c      	adds	r7, #44	; 0x2c
 80015ae:	46bd      	mov	sp, r7
 80015b0:	bc80      	pop	{r7}
 80015b2:	4770      	bx	lr
 80015b4:	40010400 	.word	0x40010400

080015b8 <HAL_GPIO_WritePin>:
 80015b8:	b480      	push	{r7}
 80015ba:	b083      	sub	sp, #12
 80015bc:	af00      	add	r7, sp, #0
 80015be:	6078      	str	r0, [r7, #4]
 80015c0:	460b      	mov	r3, r1
 80015c2:	807b      	strh	r3, [r7, #2]
 80015c4:	4613      	mov	r3, r2
 80015c6:	707b      	strb	r3, [r7, #1]
 80015c8:	787b      	ldrb	r3, [r7, #1]
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	d003      	beq.n	80015d6 <HAL_GPIO_WritePin+0x1e>
 80015ce:	887a      	ldrh	r2, [r7, #2]
 80015d0:	687b      	ldr	r3, [r7, #4]
 80015d2:	611a      	str	r2, [r3, #16]
 80015d4:	e003      	b.n	80015de <HAL_GPIO_WritePin+0x26>
 80015d6:	887b      	ldrh	r3, [r7, #2]
 80015d8:	041a      	lsls	r2, r3, #16
 80015da:	687b      	ldr	r3, [r7, #4]
 80015dc:	611a      	str	r2, [r3, #16]
 80015de:	bf00      	nop
 80015e0:	370c      	adds	r7, #12
 80015e2:	46bd      	mov	sp, r7
 80015e4:	bc80      	pop	{r7}
 80015e6:	4770      	bx	lr

080015e8 <HAL_RCC_OscConfig>:
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b086      	sub	sp, #24
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	6078      	str	r0, [r7, #4]
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d101      	bne.n	80015fa <HAL_RCC_OscConfig+0x12>
 80015f6:	2301      	movs	r3, #1
 80015f8:	e272      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	f003 0301 	and.w	r3, r3, #1
 8001602:	2b00      	cmp	r3, #0
 8001604:	f000 8087 	beq.w	8001716 <HAL_RCC_OscConfig+0x12e>
 8001608:	4b92      	ldr	r3, [pc, #584]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 800160a:	685b      	ldr	r3, [r3, #4]
 800160c:	f003 030c 	and.w	r3, r3, #12
 8001610:	2b04      	cmp	r3, #4
 8001612:	d00c      	beq.n	800162e <HAL_RCC_OscConfig+0x46>
 8001614:	4b8f      	ldr	r3, [pc, #572]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001616:	685b      	ldr	r3, [r3, #4]
 8001618:	f003 030c 	and.w	r3, r3, #12
 800161c:	2b08      	cmp	r3, #8
 800161e:	d112      	bne.n	8001646 <HAL_RCC_OscConfig+0x5e>
 8001620:	4b8c      	ldr	r3, [pc, #560]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001622:	685b      	ldr	r3, [r3, #4]
 8001624:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001628:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800162c:	d10b      	bne.n	8001646 <HAL_RCC_OscConfig+0x5e>
 800162e:	4b89      	ldr	r3, [pc, #548]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001630:	681b      	ldr	r3, [r3, #0]
 8001632:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001636:	2b00      	cmp	r3, #0
 8001638:	d06c      	beq.n	8001714 <HAL_RCC_OscConfig+0x12c>
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	685b      	ldr	r3, [r3, #4]
 800163e:	2b00      	cmp	r3, #0
 8001640:	d168      	bne.n	8001714 <HAL_RCC_OscConfig+0x12c>
 8001642:	2301      	movs	r3, #1
 8001644:	e24c      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	685b      	ldr	r3, [r3, #4]
 800164a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800164e:	d106      	bne.n	800165e <HAL_RCC_OscConfig+0x76>
 8001650:	4b80      	ldr	r3, [pc, #512]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	4a7f      	ldr	r2, [pc, #508]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001656:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800165a:	6013      	str	r3, [r2, #0]
 800165c:	e02e      	b.n	80016bc <HAL_RCC_OscConfig+0xd4>
 800165e:	687b      	ldr	r3, [r7, #4]
 8001660:	685b      	ldr	r3, [r3, #4]
 8001662:	2b00      	cmp	r3, #0
 8001664:	d10c      	bne.n	8001680 <HAL_RCC_OscConfig+0x98>
 8001666:	4b7b      	ldr	r3, [pc, #492]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	4a7a      	ldr	r2, [pc, #488]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 800166c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001670:	6013      	str	r3, [r2, #0]
 8001672:	4b78      	ldr	r3, [pc, #480]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	4a77      	ldr	r2, [pc, #476]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001678:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800167c:	6013      	str	r3, [r2, #0]
 800167e:	e01d      	b.n	80016bc <HAL_RCC_OscConfig+0xd4>
 8001680:	687b      	ldr	r3, [r7, #4]
 8001682:	685b      	ldr	r3, [r3, #4]
 8001684:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001688:	d10c      	bne.n	80016a4 <HAL_RCC_OscConfig+0xbc>
 800168a:	4b72      	ldr	r3, [pc, #456]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 800168c:	681b      	ldr	r3, [r3, #0]
 800168e:	4a71      	ldr	r2, [pc, #452]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001690:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001694:	6013      	str	r3, [r2, #0]
 8001696:	4b6f      	ldr	r3, [pc, #444]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	4a6e      	ldr	r2, [pc, #440]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 800169c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80016a0:	6013      	str	r3, [r2, #0]
 80016a2:	e00b      	b.n	80016bc <HAL_RCC_OscConfig+0xd4>
 80016a4:	4b6b      	ldr	r3, [pc, #428]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 80016a6:	681b      	ldr	r3, [r3, #0]
 80016a8:	4a6a      	ldr	r2, [pc, #424]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 80016aa:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80016ae:	6013      	str	r3, [r2, #0]
 80016b0:	4b68      	ldr	r3, [pc, #416]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	4a67      	ldr	r2, [pc, #412]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 80016b6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80016ba:	6013      	str	r3, [r2, #0]
 80016bc:	687b      	ldr	r3, [r7, #4]
 80016be:	685b      	ldr	r3, [r3, #4]
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d013      	beq.n	80016ec <HAL_RCC_OscConfig+0x104>
 80016c4:	f7ff faf4 	bl	8000cb0 <HAL_GetTick>
 80016c8:	6138      	str	r0, [r7, #16]
 80016ca:	e008      	b.n	80016de <HAL_RCC_OscConfig+0xf6>
 80016cc:	f7ff faf0 	bl	8000cb0 <HAL_GetTick>
 80016d0:	4602      	mov	r2, r0
 80016d2:	693b      	ldr	r3, [r7, #16]
 80016d4:	1ad3      	subs	r3, r2, r3
 80016d6:	2b64      	cmp	r3, #100	; 0x64
 80016d8:	d901      	bls.n	80016de <HAL_RCC_OscConfig+0xf6>
 80016da:	2303      	movs	r3, #3
 80016dc:	e200      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 80016de:	4b5d      	ldr	r3, [pc, #372]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 80016e0:	681b      	ldr	r3, [r3, #0]
 80016e2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80016e6:	2b00      	cmp	r3, #0
 80016e8:	d0f0      	beq.n	80016cc <HAL_RCC_OscConfig+0xe4>
 80016ea:	e014      	b.n	8001716 <HAL_RCC_OscConfig+0x12e>
 80016ec:	f7ff fae0 	bl	8000cb0 <HAL_GetTick>
 80016f0:	6138      	str	r0, [r7, #16]
 80016f2:	e008      	b.n	8001706 <HAL_RCC_OscConfig+0x11e>
 80016f4:	f7ff fadc 	bl	8000cb0 <HAL_GetTick>
 80016f8:	4602      	mov	r2, r0
 80016fa:	693b      	ldr	r3, [r7, #16]
 80016fc:	1ad3      	subs	r3, r2, r3
 80016fe:	2b64      	cmp	r3, #100	; 0x64
 8001700:	d901      	bls.n	8001706 <HAL_RCC_OscConfig+0x11e>
 8001702:	2303      	movs	r3, #3
 8001704:	e1ec      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 8001706:	4b53      	ldr	r3, [pc, #332]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800170e:	2b00      	cmp	r3, #0
 8001710:	d1f0      	bne.n	80016f4 <HAL_RCC_OscConfig+0x10c>
 8001712:	e000      	b.n	8001716 <HAL_RCC_OscConfig+0x12e>
 8001714:	bf00      	nop
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	681b      	ldr	r3, [r3, #0]
 800171a:	f003 0302 	and.w	r3, r3, #2
 800171e:	2b00      	cmp	r3, #0
 8001720:	d063      	beq.n	80017ea <HAL_RCC_OscConfig+0x202>
 8001722:	4b4c      	ldr	r3, [pc, #304]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001724:	685b      	ldr	r3, [r3, #4]
 8001726:	f003 030c 	and.w	r3, r3, #12
 800172a:	2b00      	cmp	r3, #0
 800172c:	d00b      	beq.n	8001746 <HAL_RCC_OscConfig+0x15e>
 800172e:	4b49      	ldr	r3, [pc, #292]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001730:	685b      	ldr	r3, [r3, #4]
 8001732:	f003 030c 	and.w	r3, r3, #12
 8001736:	2b08      	cmp	r3, #8
 8001738:	d11c      	bne.n	8001774 <HAL_RCC_OscConfig+0x18c>
 800173a:	4b46      	ldr	r3, [pc, #280]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 800173c:	685b      	ldr	r3, [r3, #4]
 800173e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001742:	2b00      	cmp	r3, #0
 8001744:	d116      	bne.n	8001774 <HAL_RCC_OscConfig+0x18c>
 8001746:	4b43      	ldr	r3, [pc, #268]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001748:	681b      	ldr	r3, [r3, #0]
 800174a:	f003 0302 	and.w	r3, r3, #2
 800174e:	2b00      	cmp	r3, #0
 8001750:	d005      	beq.n	800175e <HAL_RCC_OscConfig+0x176>
 8001752:	687b      	ldr	r3, [r7, #4]
 8001754:	691b      	ldr	r3, [r3, #16]
 8001756:	2b01      	cmp	r3, #1
 8001758:	d001      	beq.n	800175e <HAL_RCC_OscConfig+0x176>
 800175a:	2301      	movs	r3, #1
 800175c:	e1c0      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 800175e:	4b3d      	ldr	r3, [pc, #244]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001760:	681b      	ldr	r3, [r3, #0]
 8001762:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	695b      	ldr	r3, [r3, #20]
 800176a:	00db      	lsls	r3, r3, #3
 800176c:	4939      	ldr	r1, [pc, #228]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 800176e:	4313      	orrs	r3, r2
 8001770:	600b      	str	r3, [r1, #0]
 8001772:	e03a      	b.n	80017ea <HAL_RCC_OscConfig+0x202>
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	691b      	ldr	r3, [r3, #16]
 8001778:	2b00      	cmp	r3, #0
 800177a:	d020      	beq.n	80017be <HAL_RCC_OscConfig+0x1d6>
 800177c:	4b36      	ldr	r3, [pc, #216]	; (8001858 <HAL_RCC_OscConfig+0x270>)
 800177e:	2201      	movs	r2, #1
 8001780:	601a      	str	r2, [r3, #0]
 8001782:	f7ff fa95 	bl	8000cb0 <HAL_GetTick>
 8001786:	6138      	str	r0, [r7, #16]
 8001788:	e008      	b.n	800179c <HAL_RCC_OscConfig+0x1b4>
 800178a:	f7ff fa91 	bl	8000cb0 <HAL_GetTick>
 800178e:	4602      	mov	r2, r0
 8001790:	693b      	ldr	r3, [r7, #16]
 8001792:	1ad3      	subs	r3, r2, r3
 8001794:	2b02      	cmp	r3, #2
 8001796:	d901      	bls.n	800179c <HAL_RCC_OscConfig+0x1b4>
 8001798:	2303      	movs	r3, #3
 800179a:	e1a1      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 800179c:	4b2d      	ldr	r3, [pc, #180]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 800179e:	681b      	ldr	r3, [r3, #0]
 80017a0:	f003 0302 	and.w	r3, r3, #2
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d0f0      	beq.n	800178a <HAL_RCC_OscConfig+0x1a2>
 80017a8:	4b2a      	ldr	r3, [pc, #168]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 80017aa:	681b      	ldr	r3, [r3, #0]
 80017ac:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	695b      	ldr	r3, [r3, #20]
 80017b4:	00db      	lsls	r3, r3, #3
 80017b6:	4927      	ldr	r1, [pc, #156]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 80017b8:	4313      	orrs	r3, r2
 80017ba:	600b      	str	r3, [r1, #0]
 80017bc:	e015      	b.n	80017ea <HAL_RCC_OscConfig+0x202>
 80017be:	4b26      	ldr	r3, [pc, #152]	; (8001858 <HAL_RCC_OscConfig+0x270>)
 80017c0:	2200      	movs	r2, #0
 80017c2:	601a      	str	r2, [r3, #0]
 80017c4:	f7ff fa74 	bl	8000cb0 <HAL_GetTick>
 80017c8:	6138      	str	r0, [r7, #16]
 80017ca:	e008      	b.n	80017de <HAL_RCC_OscConfig+0x1f6>
 80017cc:	f7ff fa70 	bl	8000cb0 <HAL_GetTick>
 80017d0:	4602      	mov	r2, r0
 80017d2:	693b      	ldr	r3, [r7, #16]
 80017d4:	1ad3      	subs	r3, r2, r3
 80017d6:	2b02      	cmp	r3, #2
 80017d8:	d901      	bls.n	80017de <HAL_RCC_OscConfig+0x1f6>
 80017da:	2303      	movs	r3, #3
 80017dc:	e180      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 80017de:	4b1d      	ldr	r3, [pc, #116]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 80017e0:	681b      	ldr	r3, [r3, #0]
 80017e2:	f003 0302 	and.w	r3, r3, #2
 80017e6:	2b00      	cmp	r3, #0
 80017e8:	d1f0      	bne.n	80017cc <HAL_RCC_OscConfig+0x1e4>
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	f003 0308 	and.w	r3, r3, #8
 80017f2:	2b00      	cmp	r3, #0
 80017f4:	d03a      	beq.n	800186c <HAL_RCC_OscConfig+0x284>
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	699b      	ldr	r3, [r3, #24]
 80017fa:	2b00      	cmp	r3, #0
 80017fc:	d019      	beq.n	8001832 <HAL_RCC_OscConfig+0x24a>
 80017fe:	4b17      	ldr	r3, [pc, #92]	; (800185c <HAL_RCC_OscConfig+0x274>)
 8001800:	2201      	movs	r2, #1
 8001802:	601a      	str	r2, [r3, #0]
 8001804:	f7ff fa54 	bl	8000cb0 <HAL_GetTick>
 8001808:	6138      	str	r0, [r7, #16]
 800180a:	e008      	b.n	800181e <HAL_RCC_OscConfig+0x236>
 800180c:	f7ff fa50 	bl	8000cb0 <HAL_GetTick>
 8001810:	4602      	mov	r2, r0
 8001812:	693b      	ldr	r3, [r7, #16]
 8001814:	1ad3      	subs	r3, r2, r3
 8001816:	2b02      	cmp	r3, #2
 8001818:	d901      	bls.n	800181e <HAL_RCC_OscConfig+0x236>
 800181a:	2303      	movs	r3, #3
 800181c:	e160      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 800181e:	4b0d      	ldr	r3, [pc, #52]	; (8001854 <HAL_RCC_OscConfig+0x26c>)
 8001820:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001822:	f003 0302 	and.w	r3, r3, #2
 8001826:	2b00      	cmp	r3, #0
 8001828:	d0f0      	beq.n	800180c <HAL_RCC_OscConfig+0x224>
 800182a:	2001      	movs	r0, #1
 800182c:	f000 faa6 	bl	8001d7c <RCC_Delay>
 8001830:	e01c      	b.n	800186c <HAL_RCC_OscConfig+0x284>
 8001832:	4b0a      	ldr	r3, [pc, #40]	; (800185c <HAL_RCC_OscConfig+0x274>)
 8001834:	2200      	movs	r2, #0
 8001836:	601a      	str	r2, [r3, #0]
 8001838:	f7ff fa3a 	bl	8000cb0 <HAL_GetTick>
 800183c:	6138      	str	r0, [r7, #16]
 800183e:	e00f      	b.n	8001860 <HAL_RCC_OscConfig+0x278>
 8001840:	f7ff fa36 	bl	8000cb0 <HAL_GetTick>
 8001844:	4602      	mov	r2, r0
 8001846:	693b      	ldr	r3, [r7, #16]
 8001848:	1ad3      	subs	r3, r2, r3
 800184a:	2b02      	cmp	r3, #2
 800184c:	d908      	bls.n	8001860 <HAL_RCC_OscConfig+0x278>
 800184e:	2303      	movs	r3, #3
 8001850:	e146      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 8001852:	bf00      	nop
 8001854:	40021000 	.word	0x40021000
 8001858:	42420000 	.word	0x42420000
 800185c:	42420480 	.word	0x42420480
 8001860:	4b92      	ldr	r3, [pc, #584]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001862:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001864:	f003 0302 	and.w	r3, r3, #2
 8001868:	2b00      	cmp	r3, #0
 800186a:	d1e9      	bne.n	8001840 <HAL_RCC_OscConfig+0x258>
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	f003 0304 	and.w	r3, r3, #4
 8001874:	2b00      	cmp	r3, #0
 8001876:	f000 80a6 	beq.w	80019c6 <HAL_RCC_OscConfig+0x3de>
 800187a:	2300      	movs	r3, #0
 800187c:	75fb      	strb	r3, [r7, #23]
 800187e:	4b8b      	ldr	r3, [pc, #556]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001880:	69db      	ldr	r3, [r3, #28]
 8001882:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001886:	2b00      	cmp	r3, #0
 8001888:	d10d      	bne.n	80018a6 <HAL_RCC_OscConfig+0x2be>
 800188a:	4b88      	ldr	r3, [pc, #544]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 800188c:	69db      	ldr	r3, [r3, #28]
 800188e:	4a87      	ldr	r2, [pc, #540]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001890:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001894:	61d3      	str	r3, [r2, #28]
 8001896:	4b85      	ldr	r3, [pc, #532]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001898:	69db      	ldr	r3, [r3, #28]
 800189a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800189e:	60bb      	str	r3, [r7, #8]
 80018a0:	68bb      	ldr	r3, [r7, #8]
 80018a2:	2301      	movs	r3, #1
 80018a4:	75fb      	strb	r3, [r7, #23]
 80018a6:	4b82      	ldr	r3, [pc, #520]	; (8001ab0 <HAL_RCC_OscConfig+0x4c8>)
 80018a8:	681b      	ldr	r3, [r3, #0]
 80018aa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	d118      	bne.n	80018e4 <HAL_RCC_OscConfig+0x2fc>
 80018b2:	4b7f      	ldr	r3, [pc, #508]	; (8001ab0 <HAL_RCC_OscConfig+0x4c8>)
 80018b4:	681b      	ldr	r3, [r3, #0]
 80018b6:	4a7e      	ldr	r2, [pc, #504]	; (8001ab0 <HAL_RCC_OscConfig+0x4c8>)
 80018b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80018bc:	6013      	str	r3, [r2, #0]
 80018be:	f7ff f9f7 	bl	8000cb0 <HAL_GetTick>
 80018c2:	6138      	str	r0, [r7, #16]
 80018c4:	e008      	b.n	80018d8 <HAL_RCC_OscConfig+0x2f0>
 80018c6:	f7ff f9f3 	bl	8000cb0 <HAL_GetTick>
 80018ca:	4602      	mov	r2, r0
 80018cc:	693b      	ldr	r3, [r7, #16]
 80018ce:	1ad3      	subs	r3, r2, r3
 80018d0:	2b64      	cmp	r3, #100	; 0x64
 80018d2:	d901      	bls.n	80018d8 <HAL_RCC_OscConfig+0x2f0>
 80018d4:	2303      	movs	r3, #3
 80018d6:	e103      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 80018d8:	4b75      	ldr	r3, [pc, #468]	; (8001ab0 <HAL_RCC_OscConfig+0x4c8>)
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80018e0:	2b00      	cmp	r3, #0
 80018e2:	d0f0      	beq.n	80018c6 <HAL_RCC_OscConfig+0x2de>
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	68db      	ldr	r3, [r3, #12]
 80018e8:	2b01      	cmp	r3, #1
 80018ea:	d106      	bne.n	80018fa <HAL_RCC_OscConfig+0x312>
 80018ec:	4b6f      	ldr	r3, [pc, #444]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 80018ee:	6a1b      	ldr	r3, [r3, #32]
 80018f0:	4a6e      	ldr	r2, [pc, #440]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 80018f2:	f043 0301 	orr.w	r3, r3, #1
 80018f6:	6213      	str	r3, [r2, #32]
 80018f8:	e02d      	b.n	8001956 <HAL_RCC_OscConfig+0x36e>
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	68db      	ldr	r3, [r3, #12]
 80018fe:	2b00      	cmp	r3, #0
 8001900:	d10c      	bne.n	800191c <HAL_RCC_OscConfig+0x334>
 8001902:	4b6a      	ldr	r3, [pc, #424]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001904:	6a1b      	ldr	r3, [r3, #32]
 8001906:	4a69      	ldr	r2, [pc, #420]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001908:	f023 0301 	bic.w	r3, r3, #1
 800190c:	6213      	str	r3, [r2, #32]
 800190e:	4b67      	ldr	r3, [pc, #412]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001910:	6a1b      	ldr	r3, [r3, #32]
 8001912:	4a66      	ldr	r2, [pc, #408]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001914:	f023 0304 	bic.w	r3, r3, #4
 8001918:	6213      	str	r3, [r2, #32]
 800191a:	e01c      	b.n	8001956 <HAL_RCC_OscConfig+0x36e>
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	68db      	ldr	r3, [r3, #12]
 8001920:	2b05      	cmp	r3, #5
 8001922:	d10c      	bne.n	800193e <HAL_RCC_OscConfig+0x356>
 8001924:	4b61      	ldr	r3, [pc, #388]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001926:	6a1b      	ldr	r3, [r3, #32]
 8001928:	4a60      	ldr	r2, [pc, #384]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 800192a:	f043 0304 	orr.w	r3, r3, #4
 800192e:	6213      	str	r3, [r2, #32]
 8001930:	4b5e      	ldr	r3, [pc, #376]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001932:	6a1b      	ldr	r3, [r3, #32]
 8001934:	4a5d      	ldr	r2, [pc, #372]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001936:	f043 0301 	orr.w	r3, r3, #1
 800193a:	6213      	str	r3, [r2, #32]
 800193c:	e00b      	b.n	8001956 <HAL_RCC_OscConfig+0x36e>
 800193e:	4b5b      	ldr	r3, [pc, #364]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001940:	6a1b      	ldr	r3, [r3, #32]
 8001942:	4a5a      	ldr	r2, [pc, #360]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001944:	f023 0301 	bic.w	r3, r3, #1
 8001948:	6213      	str	r3, [r2, #32]
 800194a:	4b58      	ldr	r3, [pc, #352]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 800194c:	6a1b      	ldr	r3, [r3, #32]
 800194e:	4a57      	ldr	r2, [pc, #348]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001950:	f023 0304 	bic.w	r3, r3, #4
 8001954:	6213      	str	r3, [r2, #32]
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	68db      	ldr	r3, [r3, #12]
 800195a:	2b00      	cmp	r3, #0
 800195c:	d015      	beq.n	800198a <HAL_RCC_OscConfig+0x3a2>
 800195e:	f7ff f9a7 	bl	8000cb0 <HAL_GetTick>
 8001962:	6138      	str	r0, [r7, #16]
 8001964:	e00a      	b.n	800197c <HAL_RCC_OscConfig+0x394>
 8001966:	f7ff f9a3 	bl	8000cb0 <HAL_GetTick>
 800196a:	4602      	mov	r2, r0
 800196c:	693b      	ldr	r3, [r7, #16]
 800196e:	1ad3      	subs	r3, r2, r3
 8001970:	f241 3288 	movw	r2, #5000	; 0x1388
 8001974:	4293      	cmp	r3, r2
 8001976:	d901      	bls.n	800197c <HAL_RCC_OscConfig+0x394>
 8001978:	2303      	movs	r3, #3
 800197a:	e0b1      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 800197c:	4b4b      	ldr	r3, [pc, #300]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 800197e:	6a1b      	ldr	r3, [r3, #32]
 8001980:	f003 0302 	and.w	r3, r3, #2
 8001984:	2b00      	cmp	r3, #0
 8001986:	d0ee      	beq.n	8001966 <HAL_RCC_OscConfig+0x37e>
 8001988:	e014      	b.n	80019b4 <HAL_RCC_OscConfig+0x3cc>
 800198a:	f7ff f991 	bl	8000cb0 <HAL_GetTick>
 800198e:	6138      	str	r0, [r7, #16]
 8001990:	e00a      	b.n	80019a8 <HAL_RCC_OscConfig+0x3c0>
 8001992:	f7ff f98d 	bl	8000cb0 <HAL_GetTick>
 8001996:	4602      	mov	r2, r0
 8001998:	693b      	ldr	r3, [r7, #16]
 800199a:	1ad3      	subs	r3, r2, r3
 800199c:	f241 3288 	movw	r2, #5000	; 0x1388
 80019a0:	4293      	cmp	r3, r2
 80019a2:	d901      	bls.n	80019a8 <HAL_RCC_OscConfig+0x3c0>
 80019a4:	2303      	movs	r3, #3
 80019a6:	e09b      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 80019a8:	4b40      	ldr	r3, [pc, #256]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 80019aa:	6a1b      	ldr	r3, [r3, #32]
 80019ac:	f003 0302 	and.w	r3, r3, #2
 80019b0:	2b00      	cmp	r3, #0
 80019b2:	d1ee      	bne.n	8001992 <HAL_RCC_OscConfig+0x3aa>
 80019b4:	7dfb      	ldrb	r3, [r7, #23]
 80019b6:	2b01      	cmp	r3, #1
 80019b8:	d105      	bne.n	80019c6 <HAL_RCC_OscConfig+0x3de>
 80019ba:	4b3c      	ldr	r3, [pc, #240]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 80019bc:	69db      	ldr	r3, [r3, #28]
 80019be:	4a3b      	ldr	r2, [pc, #236]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 80019c0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80019c4:	61d3      	str	r3, [r2, #28]
 80019c6:	687b      	ldr	r3, [r7, #4]
 80019c8:	69db      	ldr	r3, [r3, #28]
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	f000 8087 	beq.w	8001ade <HAL_RCC_OscConfig+0x4f6>
 80019d0:	4b36      	ldr	r3, [pc, #216]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 80019d2:	685b      	ldr	r3, [r3, #4]
 80019d4:	f003 030c 	and.w	r3, r3, #12
 80019d8:	2b08      	cmp	r3, #8
 80019da:	d061      	beq.n	8001aa0 <HAL_RCC_OscConfig+0x4b8>
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	69db      	ldr	r3, [r3, #28]
 80019e0:	2b02      	cmp	r3, #2
 80019e2:	d146      	bne.n	8001a72 <HAL_RCC_OscConfig+0x48a>
 80019e4:	4b33      	ldr	r3, [pc, #204]	; (8001ab4 <HAL_RCC_OscConfig+0x4cc>)
 80019e6:	2200      	movs	r2, #0
 80019e8:	601a      	str	r2, [r3, #0]
 80019ea:	f7ff f961 	bl	8000cb0 <HAL_GetTick>
 80019ee:	6138      	str	r0, [r7, #16]
 80019f0:	e008      	b.n	8001a04 <HAL_RCC_OscConfig+0x41c>
 80019f2:	f7ff f95d 	bl	8000cb0 <HAL_GetTick>
 80019f6:	4602      	mov	r2, r0
 80019f8:	693b      	ldr	r3, [r7, #16]
 80019fa:	1ad3      	subs	r3, r2, r3
 80019fc:	2b02      	cmp	r3, #2
 80019fe:	d901      	bls.n	8001a04 <HAL_RCC_OscConfig+0x41c>
 8001a00:	2303      	movs	r3, #3
 8001a02:	e06d      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 8001a04:	4b29      	ldr	r3, [pc, #164]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001a06:	681b      	ldr	r3, [r3, #0]
 8001a08:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a0c:	2b00      	cmp	r3, #0
 8001a0e:	d1f0      	bne.n	80019f2 <HAL_RCC_OscConfig+0x40a>
 8001a10:	687b      	ldr	r3, [r7, #4]
 8001a12:	6a1b      	ldr	r3, [r3, #32]
 8001a14:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001a18:	d108      	bne.n	8001a2c <HAL_RCC_OscConfig+0x444>
 8001a1a:	4b24      	ldr	r3, [pc, #144]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001a1c:	685b      	ldr	r3, [r3, #4]
 8001a1e:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	689b      	ldr	r3, [r3, #8]
 8001a26:	4921      	ldr	r1, [pc, #132]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001a28:	4313      	orrs	r3, r2
 8001a2a:	604b      	str	r3, [r1, #4]
 8001a2c:	4b1f      	ldr	r3, [pc, #124]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001a2e:	685b      	ldr	r3, [r3, #4]
 8001a30:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	6a19      	ldr	r1, [r3, #32]
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a3c:	430b      	orrs	r3, r1
 8001a3e:	491b      	ldr	r1, [pc, #108]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001a40:	4313      	orrs	r3, r2
 8001a42:	604b      	str	r3, [r1, #4]
 8001a44:	4b1b      	ldr	r3, [pc, #108]	; (8001ab4 <HAL_RCC_OscConfig+0x4cc>)
 8001a46:	2201      	movs	r2, #1
 8001a48:	601a      	str	r2, [r3, #0]
 8001a4a:	f7ff f931 	bl	8000cb0 <HAL_GetTick>
 8001a4e:	6138      	str	r0, [r7, #16]
 8001a50:	e008      	b.n	8001a64 <HAL_RCC_OscConfig+0x47c>
 8001a52:	f7ff f92d 	bl	8000cb0 <HAL_GetTick>
 8001a56:	4602      	mov	r2, r0
 8001a58:	693b      	ldr	r3, [r7, #16]
 8001a5a:	1ad3      	subs	r3, r2, r3
 8001a5c:	2b02      	cmp	r3, #2
 8001a5e:	d901      	bls.n	8001a64 <HAL_RCC_OscConfig+0x47c>
 8001a60:	2303      	movs	r3, #3
 8001a62:	e03d      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 8001a64:	4b11      	ldr	r3, [pc, #68]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	d0f0      	beq.n	8001a52 <HAL_RCC_OscConfig+0x46a>
 8001a70:	e035      	b.n	8001ade <HAL_RCC_OscConfig+0x4f6>
 8001a72:	4b10      	ldr	r3, [pc, #64]	; (8001ab4 <HAL_RCC_OscConfig+0x4cc>)
 8001a74:	2200      	movs	r2, #0
 8001a76:	601a      	str	r2, [r3, #0]
 8001a78:	f7ff f91a 	bl	8000cb0 <HAL_GetTick>
 8001a7c:	6138      	str	r0, [r7, #16]
 8001a7e:	e008      	b.n	8001a92 <HAL_RCC_OscConfig+0x4aa>
 8001a80:	f7ff f916 	bl	8000cb0 <HAL_GetTick>
 8001a84:	4602      	mov	r2, r0
 8001a86:	693b      	ldr	r3, [r7, #16]
 8001a88:	1ad3      	subs	r3, r2, r3
 8001a8a:	2b02      	cmp	r3, #2
 8001a8c:	d901      	bls.n	8001a92 <HAL_RCC_OscConfig+0x4aa>
 8001a8e:	2303      	movs	r3, #3
 8001a90:	e026      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 8001a92:	4b06      	ldr	r3, [pc, #24]	; (8001aac <HAL_RCC_OscConfig+0x4c4>)
 8001a94:	681b      	ldr	r3, [r3, #0]
 8001a96:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a9a:	2b00      	cmp	r3, #0
 8001a9c:	d1f0      	bne.n	8001a80 <HAL_RCC_OscConfig+0x498>
 8001a9e:	e01e      	b.n	8001ade <HAL_RCC_OscConfig+0x4f6>
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	69db      	ldr	r3, [r3, #28]
 8001aa4:	2b01      	cmp	r3, #1
 8001aa6:	d107      	bne.n	8001ab8 <HAL_RCC_OscConfig+0x4d0>
 8001aa8:	2301      	movs	r3, #1
 8001aaa:	e019      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 8001aac:	40021000 	.word	0x40021000
 8001ab0:	40007000 	.word	0x40007000
 8001ab4:	42420060 	.word	0x42420060
 8001ab8:	4b0b      	ldr	r3, [pc, #44]	; (8001ae8 <HAL_RCC_OscConfig+0x500>)
 8001aba:	685b      	ldr	r3, [r3, #4]
 8001abc:	60fb      	str	r3, [r7, #12]
 8001abe:	68fb      	ldr	r3, [r7, #12]
 8001ac0:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	6a1b      	ldr	r3, [r3, #32]
 8001ac8:	429a      	cmp	r2, r3
 8001aca:	d106      	bne.n	8001ada <HAL_RCC_OscConfig+0x4f2>
 8001acc:	68fb      	ldr	r3, [r7, #12]
 8001ace:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ad6:	429a      	cmp	r2, r3
 8001ad8:	d001      	beq.n	8001ade <HAL_RCC_OscConfig+0x4f6>
 8001ada:	2301      	movs	r3, #1
 8001adc:	e000      	b.n	8001ae0 <HAL_RCC_OscConfig+0x4f8>
 8001ade:	2300      	movs	r3, #0
 8001ae0:	4618      	mov	r0, r3
 8001ae2:	3718      	adds	r7, #24
 8001ae4:	46bd      	mov	sp, r7
 8001ae6:	bd80      	pop	{r7, pc}
 8001ae8:	40021000 	.word	0x40021000

08001aec <HAL_RCC_ClockConfig>:
 8001aec:	b580      	push	{r7, lr}
 8001aee:	b084      	sub	sp, #16
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	6078      	str	r0, [r7, #4]
 8001af4:	6039      	str	r1, [r7, #0]
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	2b00      	cmp	r3, #0
 8001afa:	d101      	bne.n	8001b00 <HAL_RCC_ClockConfig+0x14>
 8001afc:	2301      	movs	r3, #1
 8001afe:	e0d0      	b.n	8001ca2 <HAL_RCC_ClockConfig+0x1b6>
 8001b00:	4b6a      	ldr	r3, [pc, #424]	; (8001cac <HAL_RCC_ClockConfig+0x1c0>)
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	f003 0307 	and.w	r3, r3, #7
 8001b08:	683a      	ldr	r2, [r7, #0]
 8001b0a:	429a      	cmp	r2, r3
 8001b0c:	d910      	bls.n	8001b30 <HAL_RCC_ClockConfig+0x44>
 8001b0e:	4b67      	ldr	r3, [pc, #412]	; (8001cac <HAL_RCC_ClockConfig+0x1c0>)
 8001b10:	681b      	ldr	r3, [r3, #0]
 8001b12:	f023 0207 	bic.w	r2, r3, #7
 8001b16:	4965      	ldr	r1, [pc, #404]	; (8001cac <HAL_RCC_ClockConfig+0x1c0>)
 8001b18:	683b      	ldr	r3, [r7, #0]
 8001b1a:	4313      	orrs	r3, r2
 8001b1c:	600b      	str	r3, [r1, #0]
 8001b1e:	4b63      	ldr	r3, [pc, #396]	; (8001cac <HAL_RCC_ClockConfig+0x1c0>)
 8001b20:	681b      	ldr	r3, [r3, #0]
 8001b22:	f003 0307 	and.w	r3, r3, #7
 8001b26:	683a      	ldr	r2, [r7, #0]
 8001b28:	429a      	cmp	r2, r3
 8001b2a:	d001      	beq.n	8001b30 <HAL_RCC_ClockConfig+0x44>
 8001b2c:	2301      	movs	r3, #1
 8001b2e:	e0b8      	b.n	8001ca2 <HAL_RCC_ClockConfig+0x1b6>
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	f003 0302 	and.w	r3, r3, #2
 8001b38:	2b00      	cmp	r3, #0
 8001b3a:	d020      	beq.n	8001b7e <HAL_RCC_ClockConfig+0x92>
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	f003 0304 	and.w	r3, r3, #4
 8001b44:	2b00      	cmp	r3, #0
 8001b46:	d005      	beq.n	8001b54 <HAL_RCC_ClockConfig+0x68>
 8001b48:	4b59      	ldr	r3, [pc, #356]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001b4a:	685b      	ldr	r3, [r3, #4]
 8001b4c:	4a58      	ldr	r2, [pc, #352]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001b4e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001b52:	6053      	str	r3, [r2, #4]
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	f003 0308 	and.w	r3, r3, #8
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d005      	beq.n	8001b6c <HAL_RCC_ClockConfig+0x80>
 8001b60:	4b53      	ldr	r3, [pc, #332]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001b62:	685b      	ldr	r3, [r3, #4]
 8001b64:	4a52      	ldr	r2, [pc, #328]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001b66:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001b6a:	6053      	str	r3, [r2, #4]
 8001b6c:	4b50      	ldr	r3, [pc, #320]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001b6e:	685b      	ldr	r3, [r3, #4]
 8001b70:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	689b      	ldr	r3, [r3, #8]
 8001b78:	494d      	ldr	r1, [pc, #308]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001b7a:	4313      	orrs	r3, r2
 8001b7c:	604b      	str	r3, [r1, #4]
 8001b7e:	687b      	ldr	r3, [r7, #4]
 8001b80:	681b      	ldr	r3, [r3, #0]
 8001b82:	f003 0301 	and.w	r3, r3, #1
 8001b86:	2b00      	cmp	r3, #0
 8001b88:	d040      	beq.n	8001c0c <HAL_RCC_ClockConfig+0x120>
 8001b8a:	687b      	ldr	r3, [r7, #4]
 8001b8c:	685b      	ldr	r3, [r3, #4]
 8001b8e:	2b01      	cmp	r3, #1
 8001b90:	d107      	bne.n	8001ba2 <HAL_RCC_ClockConfig+0xb6>
 8001b92:	4b47      	ldr	r3, [pc, #284]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001b94:	681b      	ldr	r3, [r3, #0]
 8001b96:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	d115      	bne.n	8001bca <HAL_RCC_ClockConfig+0xde>
 8001b9e:	2301      	movs	r3, #1
 8001ba0:	e07f      	b.n	8001ca2 <HAL_RCC_ClockConfig+0x1b6>
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	685b      	ldr	r3, [r3, #4]
 8001ba6:	2b02      	cmp	r3, #2
 8001ba8:	d107      	bne.n	8001bba <HAL_RCC_ClockConfig+0xce>
 8001baa:	4b41      	ldr	r3, [pc, #260]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001bac:	681b      	ldr	r3, [r3, #0]
 8001bae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	d109      	bne.n	8001bca <HAL_RCC_ClockConfig+0xde>
 8001bb6:	2301      	movs	r3, #1
 8001bb8:	e073      	b.n	8001ca2 <HAL_RCC_ClockConfig+0x1b6>
 8001bba:	4b3d      	ldr	r3, [pc, #244]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001bbc:	681b      	ldr	r3, [r3, #0]
 8001bbe:	f003 0302 	and.w	r3, r3, #2
 8001bc2:	2b00      	cmp	r3, #0
 8001bc4:	d101      	bne.n	8001bca <HAL_RCC_ClockConfig+0xde>
 8001bc6:	2301      	movs	r3, #1
 8001bc8:	e06b      	b.n	8001ca2 <HAL_RCC_ClockConfig+0x1b6>
 8001bca:	4b39      	ldr	r3, [pc, #228]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001bcc:	685b      	ldr	r3, [r3, #4]
 8001bce:	f023 0203 	bic.w	r2, r3, #3
 8001bd2:	687b      	ldr	r3, [r7, #4]
 8001bd4:	685b      	ldr	r3, [r3, #4]
 8001bd6:	4936      	ldr	r1, [pc, #216]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001bd8:	4313      	orrs	r3, r2
 8001bda:	604b      	str	r3, [r1, #4]
 8001bdc:	f7ff f868 	bl	8000cb0 <HAL_GetTick>
 8001be0:	60f8      	str	r0, [r7, #12]
 8001be2:	e00a      	b.n	8001bfa <HAL_RCC_ClockConfig+0x10e>
 8001be4:	f7ff f864 	bl	8000cb0 <HAL_GetTick>
 8001be8:	4602      	mov	r2, r0
 8001bea:	68fb      	ldr	r3, [r7, #12]
 8001bec:	1ad3      	subs	r3, r2, r3
 8001bee:	f241 3288 	movw	r2, #5000	; 0x1388
 8001bf2:	4293      	cmp	r3, r2
 8001bf4:	d901      	bls.n	8001bfa <HAL_RCC_ClockConfig+0x10e>
 8001bf6:	2303      	movs	r3, #3
 8001bf8:	e053      	b.n	8001ca2 <HAL_RCC_ClockConfig+0x1b6>
 8001bfa:	4b2d      	ldr	r3, [pc, #180]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001bfc:	685b      	ldr	r3, [r3, #4]
 8001bfe:	f003 020c 	and.w	r2, r3, #12
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	685b      	ldr	r3, [r3, #4]
 8001c06:	009b      	lsls	r3, r3, #2
 8001c08:	429a      	cmp	r2, r3
 8001c0a:	d1eb      	bne.n	8001be4 <HAL_RCC_ClockConfig+0xf8>
 8001c0c:	4b27      	ldr	r3, [pc, #156]	; (8001cac <HAL_RCC_ClockConfig+0x1c0>)
 8001c0e:	681b      	ldr	r3, [r3, #0]
 8001c10:	f003 0307 	and.w	r3, r3, #7
 8001c14:	683a      	ldr	r2, [r7, #0]
 8001c16:	429a      	cmp	r2, r3
 8001c18:	d210      	bcs.n	8001c3c <HAL_RCC_ClockConfig+0x150>
 8001c1a:	4b24      	ldr	r3, [pc, #144]	; (8001cac <HAL_RCC_ClockConfig+0x1c0>)
 8001c1c:	681b      	ldr	r3, [r3, #0]
 8001c1e:	f023 0207 	bic.w	r2, r3, #7
 8001c22:	4922      	ldr	r1, [pc, #136]	; (8001cac <HAL_RCC_ClockConfig+0x1c0>)
 8001c24:	683b      	ldr	r3, [r7, #0]
 8001c26:	4313      	orrs	r3, r2
 8001c28:	600b      	str	r3, [r1, #0]
 8001c2a:	4b20      	ldr	r3, [pc, #128]	; (8001cac <HAL_RCC_ClockConfig+0x1c0>)
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	f003 0307 	and.w	r3, r3, #7
 8001c32:	683a      	ldr	r2, [r7, #0]
 8001c34:	429a      	cmp	r2, r3
 8001c36:	d001      	beq.n	8001c3c <HAL_RCC_ClockConfig+0x150>
 8001c38:	2301      	movs	r3, #1
 8001c3a:	e032      	b.n	8001ca2 <HAL_RCC_ClockConfig+0x1b6>
 8001c3c:	687b      	ldr	r3, [r7, #4]
 8001c3e:	681b      	ldr	r3, [r3, #0]
 8001c40:	f003 0304 	and.w	r3, r3, #4
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d008      	beq.n	8001c5a <HAL_RCC_ClockConfig+0x16e>
 8001c48:	4b19      	ldr	r3, [pc, #100]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001c4a:	685b      	ldr	r3, [r3, #4]
 8001c4c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001c50:	687b      	ldr	r3, [r7, #4]
 8001c52:	68db      	ldr	r3, [r3, #12]
 8001c54:	4916      	ldr	r1, [pc, #88]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001c56:	4313      	orrs	r3, r2
 8001c58:	604b      	str	r3, [r1, #4]
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	681b      	ldr	r3, [r3, #0]
 8001c5e:	f003 0308 	and.w	r3, r3, #8
 8001c62:	2b00      	cmp	r3, #0
 8001c64:	d009      	beq.n	8001c7a <HAL_RCC_ClockConfig+0x18e>
 8001c66:	4b12      	ldr	r3, [pc, #72]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001c68:	685b      	ldr	r3, [r3, #4]
 8001c6a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	691b      	ldr	r3, [r3, #16]
 8001c72:	00db      	lsls	r3, r3, #3
 8001c74:	490e      	ldr	r1, [pc, #56]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001c76:	4313      	orrs	r3, r2
 8001c78:	604b      	str	r3, [r1, #4]
 8001c7a:	f000 f821 	bl	8001cc0 <HAL_RCC_GetSysClockFreq>
 8001c7e:	4602      	mov	r2, r0
 8001c80:	4b0b      	ldr	r3, [pc, #44]	; (8001cb0 <HAL_RCC_ClockConfig+0x1c4>)
 8001c82:	685b      	ldr	r3, [r3, #4]
 8001c84:	091b      	lsrs	r3, r3, #4
 8001c86:	f003 030f 	and.w	r3, r3, #15
 8001c8a:	490a      	ldr	r1, [pc, #40]	; (8001cb4 <HAL_RCC_ClockConfig+0x1c8>)
 8001c8c:	5ccb      	ldrb	r3, [r1, r3]
 8001c8e:	fa22 f303 	lsr.w	r3, r2, r3
 8001c92:	4a09      	ldr	r2, [pc, #36]	; (8001cb8 <HAL_RCC_ClockConfig+0x1cc>)
 8001c94:	6013      	str	r3, [r2, #0]
 8001c96:	4b09      	ldr	r3, [pc, #36]	; (8001cbc <HAL_RCC_ClockConfig+0x1d0>)
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	4618      	mov	r0, r3
 8001c9c:	f7fe ffc6 	bl	8000c2c <HAL_InitTick>
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	4618      	mov	r0, r3
 8001ca4:	3710      	adds	r7, #16
 8001ca6:	46bd      	mov	sp, r7
 8001ca8:	bd80      	pop	{r7, pc}
 8001caa:	bf00      	nop
 8001cac:	40022000 	.word	0x40022000
 8001cb0:	40021000 	.word	0x40021000
 8001cb4:	08001fe8 	.word	0x08001fe8
 8001cb8:	20000000 	.word	0x20000000
 8001cbc:	20000004 	.word	0x20000004

08001cc0 <HAL_RCC_GetSysClockFreq>:
 8001cc0:	b490      	push	{r4, r7}
 8001cc2:	b08a      	sub	sp, #40	; 0x28
 8001cc4:	af00      	add	r7, sp, #0
 8001cc6:	4b29      	ldr	r3, [pc, #164]	; (8001d6c <HAL_RCC_GetSysClockFreq+0xac>)
 8001cc8:	1d3c      	adds	r4, r7, #4
 8001cca:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001ccc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001cd0:	f240 2301 	movw	r3, #513	; 0x201
 8001cd4:	803b      	strh	r3, [r7, #0]
 8001cd6:	2300      	movs	r3, #0
 8001cd8:	61fb      	str	r3, [r7, #28]
 8001cda:	2300      	movs	r3, #0
 8001cdc:	61bb      	str	r3, [r7, #24]
 8001cde:	2300      	movs	r3, #0
 8001ce0:	627b      	str	r3, [r7, #36]	; 0x24
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	617b      	str	r3, [r7, #20]
 8001ce6:	2300      	movs	r3, #0
 8001ce8:	623b      	str	r3, [r7, #32]
 8001cea:	4b21      	ldr	r3, [pc, #132]	; (8001d70 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001cec:	685b      	ldr	r3, [r3, #4]
 8001cee:	61fb      	str	r3, [r7, #28]
 8001cf0:	69fb      	ldr	r3, [r7, #28]
 8001cf2:	f003 030c 	and.w	r3, r3, #12
 8001cf6:	2b04      	cmp	r3, #4
 8001cf8:	d002      	beq.n	8001d00 <HAL_RCC_GetSysClockFreq+0x40>
 8001cfa:	2b08      	cmp	r3, #8
 8001cfc:	d003      	beq.n	8001d06 <HAL_RCC_GetSysClockFreq+0x46>
 8001cfe:	e02b      	b.n	8001d58 <HAL_RCC_GetSysClockFreq+0x98>
 8001d00:	4b1c      	ldr	r3, [pc, #112]	; (8001d74 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001d02:	623b      	str	r3, [r7, #32]
 8001d04:	e02b      	b.n	8001d5e <HAL_RCC_GetSysClockFreq+0x9e>
 8001d06:	69fb      	ldr	r3, [r7, #28]
 8001d08:	0c9b      	lsrs	r3, r3, #18
 8001d0a:	f003 030f 	and.w	r3, r3, #15
 8001d0e:	3328      	adds	r3, #40	; 0x28
 8001d10:	443b      	add	r3, r7
 8001d12:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001d16:	617b      	str	r3, [r7, #20]
 8001d18:	69fb      	ldr	r3, [r7, #28]
 8001d1a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001d1e:	2b00      	cmp	r3, #0
 8001d20:	d012      	beq.n	8001d48 <HAL_RCC_GetSysClockFreq+0x88>
 8001d22:	4b13      	ldr	r3, [pc, #76]	; (8001d70 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001d24:	685b      	ldr	r3, [r3, #4]
 8001d26:	0c5b      	lsrs	r3, r3, #17
 8001d28:	f003 0301 	and.w	r3, r3, #1
 8001d2c:	3328      	adds	r3, #40	; 0x28
 8001d2e:	443b      	add	r3, r7
 8001d30:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001d34:	61bb      	str	r3, [r7, #24]
 8001d36:	697b      	ldr	r3, [r7, #20]
 8001d38:	4a0e      	ldr	r2, [pc, #56]	; (8001d74 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001d3a:	fb03 f202 	mul.w	r2, r3, r2
 8001d3e:	69bb      	ldr	r3, [r7, #24]
 8001d40:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d44:	627b      	str	r3, [r7, #36]	; 0x24
 8001d46:	e004      	b.n	8001d52 <HAL_RCC_GetSysClockFreq+0x92>
 8001d48:	697b      	ldr	r3, [r7, #20]
 8001d4a:	4a0b      	ldr	r2, [pc, #44]	; (8001d78 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001d4c:	fb02 f303 	mul.w	r3, r2, r3
 8001d50:	627b      	str	r3, [r7, #36]	; 0x24
 8001d52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d54:	623b      	str	r3, [r7, #32]
 8001d56:	e002      	b.n	8001d5e <HAL_RCC_GetSysClockFreq+0x9e>
 8001d58:	4b06      	ldr	r3, [pc, #24]	; (8001d74 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001d5a:	623b      	str	r3, [r7, #32]
 8001d5c:	bf00      	nop
 8001d5e:	6a3b      	ldr	r3, [r7, #32]
 8001d60:	4618      	mov	r0, r3
 8001d62:	3728      	adds	r7, #40	; 0x28
 8001d64:	46bd      	mov	sp, r7
 8001d66:	bc90      	pop	{r4, r7}
 8001d68:	4770      	bx	lr
 8001d6a:	bf00      	nop
 8001d6c:	08001f94 	.word	0x08001f94
 8001d70:	40021000 	.word	0x40021000
 8001d74:	007a1200 	.word	0x007a1200
 8001d78:	003d0900 	.word	0x003d0900

08001d7c <RCC_Delay>:
 8001d7c:	b480      	push	{r7}
 8001d7e:	b085      	sub	sp, #20
 8001d80:	af00      	add	r7, sp, #0
 8001d82:	6078      	str	r0, [r7, #4]
 8001d84:	4b0a      	ldr	r3, [pc, #40]	; (8001db0 <RCC_Delay+0x34>)
 8001d86:	681b      	ldr	r3, [r3, #0]
 8001d88:	4a0a      	ldr	r2, [pc, #40]	; (8001db4 <RCC_Delay+0x38>)
 8001d8a:	fba2 2303 	umull	r2, r3, r2, r3
 8001d8e:	0a5b      	lsrs	r3, r3, #9
 8001d90:	687a      	ldr	r2, [r7, #4]
 8001d92:	fb02 f303 	mul.w	r3, r2, r3
 8001d96:	60fb      	str	r3, [r7, #12]
 8001d98:	bf00      	nop
 8001d9a:	68fb      	ldr	r3, [r7, #12]
 8001d9c:	1e5a      	subs	r2, r3, #1
 8001d9e:	60fa      	str	r2, [r7, #12]
 8001da0:	2b00      	cmp	r3, #0
 8001da2:	d1f9      	bne.n	8001d98 <RCC_Delay+0x1c>
 8001da4:	bf00      	nop
 8001da6:	bf00      	nop
 8001da8:	3714      	adds	r7, #20
 8001daa:	46bd      	mov	sp, r7
 8001dac:	bc80      	pop	{r7}
 8001dae:	4770      	bx	lr
 8001db0:	20000000 	.word	0x20000000
 8001db4:	10624dd3 	.word	0x10624dd3

08001db8 <HAL_RCCEx_PeriphCLKConfig>:
 8001db8:	b580      	push	{r7, lr}
 8001dba:	b086      	sub	sp, #24
 8001dbc:	af00      	add	r7, sp, #0
 8001dbe:	6078      	str	r0, [r7, #4]
 8001dc0:	2300      	movs	r3, #0
 8001dc2:	613b      	str	r3, [r7, #16]
 8001dc4:	2300      	movs	r3, #0
 8001dc6:	60fb      	str	r3, [r7, #12]
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	f003 0301 	and.w	r3, r3, #1
 8001dd0:	2b00      	cmp	r3, #0
 8001dd2:	d07d      	beq.n	8001ed0 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8001dd4:	2300      	movs	r3, #0
 8001dd6:	75fb      	strb	r3, [r7, #23]
 8001dd8:	4b4f      	ldr	r3, [pc, #316]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001dda:	69db      	ldr	r3, [r3, #28]
 8001ddc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001de0:	2b00      	cmp	r3, #0
 8001de2:	d10d      	bne.n	8001e00 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8001de4:	4b4c      	ldr	r3, [pc, #304]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001de6:	69db      	ldr	r3, [r3, #28]
 8001de8:	4a4b      	ldr	r2, [pc, #300]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001dea:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001dee:	61d3      	str	r3, [r2, #28]
 8001df0:	4b49      	ldr	r3, [pc, #292]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001df2:	69db      	ldr	r3, [r3, #28]
 8001df4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001df8:	60bb      	str	r3, [r7, #8]
 8001dfa:	68bb      	ldr	r3, [r7, #8]
 8001dfc:	2301      	movs	r3, #1
 8001dfe:	75fb      	strb	r3, [r7, #23]
 8001e00:	4b46      	ldr	r3, [pc, #280]	; (8001f1c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	d118      	bne.n	8001e3e <HAL_RCCEx_PeriphCLKConfig+0x86>
 8001e0c:	4b43      	ldr	r3, [pc, #268]	; (8001f1c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8001e0e:	681b      	ldr	r3, [r3, #0]
 8001e10:	4a42      	ldr	r2, [pc, #264]	; (8001f1c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8001e12:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001e16:	6013      	str	r3, [r2, #0]
 8001e18:	f7fe ff4a 	bl	8000cb0 <HAL_GetTick>
 8001e1c:	6138      	str	r0, [r7, #16]
 8001e1e:	e008      	b.n	8001e32 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8001e20:	f7fe ff46 	bl	8000cb0 <HAL_GetTick>
 8001e24:	4602      	mov	r2, r0
 8001e26:	693b      	ldr	r3, [r7, #16]
 8001e28:	1ad3      	subs	r3, r2, r3
 8001e2a:	2b64      	cmp	r3, #100	; 0x64
 8001e2c:	d901      	bls.n	8001e32 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8001e2e:	2303      	movs	r3, #3
 8001e30:	e06d      	b.n	8001f0e <HAL_RCCEx_PeriphCLKConfig+0x156>
 8001e32:	4b3a      	ldr	r3, [pc, #232]	; (8001f1c <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001e3a:	2b00      	cmp	r3, #0
 8001e3c:	d0f0      	beq.n	8001e20 <HAL_RCCEx_PeriphCLKConfig+0x68>
 8001e3e:	4b36      	ldr	r3, [pc, #216]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001e40:	6a1b      	ldr	r3, [r3, #32]
 8001e42:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001e46:	60fb      	str	r3, [r7, #12]
 8001e48:	68fb      	ldr	r3, [r7, #12]
 8001e4a:	2b00      	cmp	r3, #0
 8001e4c:	d02e      	beq.n	8001eac <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	685b      	ldr	r3, [r3, #4]
 8001e52:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8001e56:	68fa      	ldr	r2, [r7, #12]
 8001e58:	429a      	cmp	r2, r3
 8001e5a:	d027      	beq.n	8001eac <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8001e5c:	4b2e      	ldr	r3, [pc, #184]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001e5e:	6a1b      	ldr	r3, [r3, #32]
 8001e60:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8001e64:	60fb      	str	r3, [r7, #12]
 8001e66:	4b2e      	ldr	r3, [pc, #184]	; (8001f20 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8001e68:	2201      	movs	r2, #1
 8001e6a:	601a      	str	r2, [r3, #0]
 8001e6c:	4b2c      	ldr	r3, [pc, #176]	; (8001f20 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8001e6e:	2200      	movs	r2, #0
 8001e70:	601a      	str	r2, [r3, #0]
 8001e72:	4a29      	ldr	r2, [pc, #164]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001e74:	68fb      	ldr	r3, [r7, #12]
 8001e76:	6213      	str	r3, [r2, #32]
 8001e78:	68fb      	ldr	r3, [r7, #12]
 8001e7a:	f003 0301 	and.w	r3, r3, #1
 8001e7e:	2b00      	cmp	r3, #0
 8001e80:	d014      	beq.n	8001eac <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8001e82:	f7fe ff15 	bl	8000cb0 <HAL_GetTick>
 8001e86:	6138      	str	r0, [r7, #16]
 8001e88:	e00a      	b.n	8001ea0 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8001e8a:	f7fe ff11 	bl	8000cb0 <HAL_GetTick>
 8001e8e:	4602      	mov	r2, r0
 8001e90:	693b      	ldr	r3, [r7, #16]
 8001e92:	1ad3      	subs	r3, r2, r3
 8001e94:	f241 3288 	movw	r2, #5000	; 0x1388
 8001e98:	4293      	cmp	r3, r2
 8001e9a:	d901      	bls.n	8001ea0 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8001e9c:	2303      	movs	r3, #3
 8001e9e:	e036      	b.n	8001f0e <HAL_RCCEx_PeriphCLKConfig+0x156>
 8001ea0:	4b1d      	ldr	r3, [pc, #116]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001ea2:	6a1b      	ldr	r3, [r3, #32]
 8001ea4:	f003 0302 	and.w	r3, r3, #2
 8001ea8:	2b00      	cmp	r3, #0
 8001eaa:	d0ee      	beq.n	8001e8a <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8001eac:	4b1a      	ldr	r3, [pc, #104]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001eae:	6a1b      	ldr	r3, [r3, #32]
 8001eb0:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	685b      	ldr	r3, [r3, #4]
 8001eb8:	4917      	ldr	r1, [pc, #92]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001eba:	4313      	orrs	r3, r2
 8001ebc:	620b      	str	r3, [r1, #32]
 8001ebe:	7dfb      	ldrb	r3, [r7, #23]
 8001ec0:	2b01      	cmp	r3, #1
 8001ec2:	d105      	bne.n	8001ed0 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8001ec4:	4b14      	ldr	r3, [pc, #80]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001ec6:	69db      	ldr	r3, [r3, #28]
 8001ec8:	4a13      	ldr	r2, [pc, #76]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001eca:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001ece:	61d3      	str	r3, [r2, #28]
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	f003 0302 	and.w	r3, r3, #2
 8001ed8:	2b00      	cmp	r3, #0
 8001eda:	d008      	beq.n	8001eee <HAL_RCCEx_PeriphCLKConfig+0x136>
 8001edc:	4b0e      	ldr	r3, [pc, #56]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001ede:	685b      	ldr	r3, [r3, #4]
 8001ee0:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	689b      	ldr	r3, [r3, #8]
 8001ee8:	490b      	ldr	r1, [pc, #44]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001eea:	4313      	orrs	r3, r2
 8001eec:	604b      	str	r3, [r1, #4]
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	f003 0310 	and.w	r3, r3, #16
 8001ef6:	2b00      	cmp	r3, #0
 8001ef8:	d008      	beq.n	8001f0c <HAL_RCCEx_PeriphCLKConfig+0x154>
 8001efa:	4b07      	ldr	r3, [pc, #28]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001efc:	685b      	ldr	r3, [r3, #4]
 8001efe:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8001f02:	687b      	ldr	r3, [r7, #4]
 8001f04:	68db      	ldr	r3, [r3, #12]
 8001f06:	4904      	ldr	r1, [pc, #16]	; (8001f18 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8001f08:	4313      	orrs	r3, r2
 8001f0a:	604b      	str	r3, [r1, #4]
 8001f0c:	2300      	movs	r3, #0
 8001f0e:	4618      	mov	r0, r3
 8001f10:	3718      	adds	r7, #24
 8001f12:	46bd      	mov	sp, r7
 8001f14:	bd80      	pop	{r7, pc}
 8001f16:	bf00      	nop
 8001f18:	40021000 	.word	0x40021000
 8001f1c:	40007000 	.word	0x40007000
 8001f20:	42420440 	.word	0x42420440

08001f24 <__libc_init_array>:
 8001f24:	b570      	push	{r4, r5, r6, lr}
 8001f26:	2600      	movs	r6, #0
 8001f28:	4d0c      	ldr	r5, [pc, #48]	; (8001f5c <__libc_init_array+0x38>)
 8001f2a:	4c0d      	ldr	r4, [pc, #52]	; (8001f60 <__libc_init_array+0x3c>)
 8001f2c:	1b64      	subs	r4, r4, r5
 8001f2e:	10a4      	asrs	r4, r4, #2
 8001f30:	42a6      	cmp	r6, r4
 8001f32:	d109      	bne.n	8001f48 <__libc_init_array+0x24>
 8001f34:	f000 f822 	bl	8001f7c <_init>
 8001f38:	2600      	movs	r6, #0
 8001f3a:	4d0a      	ldr	r5, [pc, #40]	; (8001f64 <__libc_init_array+0x40>)
 8001f3c:	4c0a      	ldr	r4, [pc, #40]	; (8001f68 <__libc_init_array+0x44>)
 8001f3e:	1b64      	subs	r4, r4, r5
 8001f40:	10a4      	asrs	r4, r4, #2
 8001f42:	42a6      	cmp	r6, r4
 8001f44:	d105      	bne.n	8001f52 <__libc_init_array+0x2e>
 8001f46:	bd70      	pop	{r4, r5, r6, pc}
 8001f48:	f855 3b04 	ldr.w	r3, [r5], #4
 8001f4c:	4798      	blx	r3
 8001f4e:	3601      	adds	r6, #1
 8001f50:	e7ee      	b.n	8001f30 <__libc_init_array+0xc>
 8001f52:	f855 3b04 	ldr.w	r3, [r5], #4
 8001f56:	4798      	blx	r3
 8001f58:	3601      	adds	r6, #1
 8001f5a:	e7f2      	b.n	8001f42 <__libc_init_array+0x1e>
 8001f5c:	08001ff8 	.word	0x08001ff8
 8001f60:	08001ff8 	.word	0x08001ff8
 8001f64:	08001ff8 	.word	0x08001ff8
 8001f68:	08001ffc 	.word	0x08001ffc

08001f6c <memset>:
 8001f6c:	4603      	mov	r3, r0
 8001f6e:	4402      	add	r2, r0
 8001f70:	4293      	cmp	r3, r2
 8001f72:	d100      	bne.n	8001f76 <memset+0xa>
 8001f74:	4770      	bx	lr
 8001f76:	f803 1b01 	strb.w	r1, [r3], #1
 8001f7a:	e7f9      	b.n	8001f70 <memset+0x4>

08001f7c <_init>:
 8001f7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f7e:	bf00      	nop
 8001f80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001f82:	bc08      	pop	{r3}
 8001f84:	469e      	mov	lr, r3
 8001f86:	4770      	bx	lr

08001f88 <_fini>:
 8001f88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f8a:	bf00      	nop
 8001f8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001f8e:	bc08      	pop	{r3}
 8001f90:	469e      	mov	lr, r3
 8001f92:	4770      	bx	lr
